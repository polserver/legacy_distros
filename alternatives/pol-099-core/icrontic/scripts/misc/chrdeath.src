use uo;
use os;
use util;

include "include/NPCBackpacks";
include "include/attributes";
include "include/noto";
include "include/reportMurder";
include "../include/tourney";

program chrdeath(corpse,ghost)
  var gantiloot := GetGlobalProperty("gantiloot");
  if(gantiloot == 1)
    corpse.usescript := ":combat:antiloot";
    SetObjProperty(ghost, "#noreport", 1);
    SetObjProperty(corpse, "ghostserial", ghost.serial);
  endif
  EraseObjProperty(ghost, "#Healing");
  EraseObjProperty(ghost, "IsMeditating");
  EraseObjProperty(ghost, "poison_level");
  EraseObjProperty(ghost, "MazeSteed");  /// Tourney Specific cprops to be erased
  EraseObjProperty(ghost, "#noreport");  /// Tourney Specific cprops to be erased
  EraseObjProperty(ghost, "#nfloss");  /// Tourney Specific cprops to be erased
  EraseObjProperty(ghost, "newbie");  /// Tourney Specific cprops to be erased
  EraseObjProperty(ghost, "nocut");  /// Tourney Specific cprops to be erased
  EraseObjProperty(ghost, "vamptime"); /// Vampire Specific cprops to be erased
  ghost.SetPoisoned(0);
  mazedeath(corpse, ghost);  //run from tourney.inc to see if maze tourney death and process it
  noreportzone ( ghost ); // run from tourney.inc to verify noreportzones AND no fame loss
  noobzone (ghost); // run from tourney.inc to verify if in newbie zone or noob tourn zone

// Run to see if .tournament has been enabled
if(GetGlobalProperty("tourny") == 1)
  var gnfloss := GetGlobalProperty("gnfloss");
  var gnoreport := GetGlobalProperty("gnoreport");
  var gnewbie := GetGlobalProperty("gnewbie");
  SetObjProperty(ghost, "#noreport", gnoreport);
  SetObjProperty(ghost, "#nfloss", gnfloss);
  SetObjProperty(ghost, "newbie", gnewbie);
endif
  var noreport:= GetObjProperty(ghost,"#noreport");
  if(noreport.errortext)
    noreport := 0;
  endif
  if(noreport == 0)
    if(len(ghost.reportables)>0)
      SendReportGump(ghost);
    endif
  else
    foreach reportable in (ghost.reportables)
      ghost.removeReportable(reportable.serial,reportable.gameclock);
    endforeach
  endif
  var killer := GetObjProperty(ghost, "LastHit");
  if(killer != error)
    AdjustNoto((SystemFindObjectBySerial(killer[2], SYSFIND_SEARCH_OFFLINE_MOBILES)), ghost);
  endif

//////////////////////////////////
// Noto section
//////////////////////////////////
  var nfloss:= GetObjProperty(ghost,"#nfloss");
  if(nfloss.errortext)
    nfloss := 0;
  endif
  if(nfloss == 0)
    var fame := CInt(GetObjProperty(ghost, "Fame"));
    fame := (fame - CInt(fame / 20));
    SetObjProperty(ghost, "Fame", fame);
    SetNotoTitle(ghost,GetObjProperty(ghost,"Karma"),GetObjProperty(ghost,"Fame"));
  else
    return;
  endif
////////////////////////////////// End of Noto section
  dismount(ghost, corpse);
  CheckForAutoRes(ghost, corpse);
  var newcorpsename;
  var corpsenamearray := SplitWords(corpse.name);
  var corpsenamearraylen := len(corpsenamearray);
  var x, corpsename := "";
  for (x := 4; x <= corpsenamearraylen; x := x + 1)
    corpsename := corpsename + " " + corpsenamearray[x];
  endfor
if(ghost.criminal)
	SetObjProperty(corpse, "flaggings", "criminal");
	newcorpsename := corpse.name + " [CRIMINAL]";
	SetName(corpse, newcorpsename);
elseif(!ghost.criminal and !ghost.murderer)
	SetObjProperty(corpse, "flaggings", "blue");
	newcorpsename := corpse.name + " [BLUE]";
	SetName(corpse, newcorpsename);
elseif(ghost.murderer)
	SetObjProperty(corpse, "flaggings", "red");
	newcorpsename := corpse.name + " [MURDERER]";
	SetName(corpse, newcorpsename);
endif
  SetObjProperty(corpse, "ghostserial", ghost.serial);
  if(gantiloot == 1)
    SetObjProperty(corpse, "nocut", 1);
  endif
  var newbie := GetObjProperty(ghost, "newbie");
  var movecfg := ReadConfigFile("itemdesc");
  CreateItemInContainer(corpse, 0xff02);  // Added for anti-injection looting - MuadDib
  if(newbie == 1)
    foreach item in EnumerateItemsInContainer(corpse)
      var elm          := FindConfigElem(movecfg, item.objtype);
      var insertscript := elm.OnInsertScript;
      if(item == 0xff02);
        DestroyItem(item);
      endif
      if(insertscript == "::onInsert")
        MoveItemToContainer(item,ghost.backpack);
      endif
      MoveItemToContainer(item,ghost.backpack);
    endforeach
    SendSysMessage(ghost,"Fear not mortal, your items have been returned.");
    DestroyItem(corpse);
  endif
endprogram

function CheckForAutoRes(who, corpse)
  if ( CInt( GetObjProperty(corpse, "AutoRes") ) == 1 )
	Resurrect(who);
	var itemlist := EnumerateItemsInContainer(corpse);
	var x;
	var mypack := GetEquipmentByLayer(who, 0x15);
	foreach x in itemlist
	  if(!EquipItem(who, x) )
		MoveItemToContainer(x, mypack);
	  endif
	endforeach
	SetHp(who, who.strength);
	SetMana(who, who.intelligence);
	SetStamina(who, who.dexterity);
  endif
endfunction

function dismount(me,corpse)
  var mount := GetEquipmentByLayer( corpse, 25 );
  foreach item in EnumerateItemsInContainer(corpse)
	if (item.objtype == 0xf021)
	  mount := item;
	  break;
	endif
  endforeach
  if (!mount)
	return;
  endif
  var animal := SystemFindObjectBySerial(CInt(GetObjProperty(mount,"serial")));
    If(GetObjProperty(animal , "ethereal"))
	  var awardid := GetObjProperty(animal, "awardtype");
	  EraseObjProperty(animal, "mounted");
 	  EraseObjProperty(animal, "mounted_on");
	  Damage( animal, GetHp(animal) +3 );
 	  DestroyItem(mount);
 	  CreateItemInBackpack( me, awardid, 1 );
    else
  animal.facing := corpse.facing;
  EraseObjProperty(animal, "mounted");
  EraseObjProperty(animal, "mounted_on");
  endif
  if(GetObjProperty(animal, "mazesteed"))
    SetObjProperty(animal, "happiness", 1);
  endif
  MoveCharacterToLocation( animal, corpse.x, corpse.y, corpse.z, MOVECHAR_FORCELOCATION);
  DestroyItem(mount);
endfunction
