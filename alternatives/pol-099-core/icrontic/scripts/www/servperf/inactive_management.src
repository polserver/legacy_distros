use uo;
use os;
use http;
use datafile;

include "include/client";
include "include/objtype";
include "include/utility";
include "include/string";
include "util/bank";

program search_for_inactive_accounts ()
	WriteHTML ("<html><head><title>Inactive account management</title></head>");
	WriteHTML ("<body bgcolor=\"#dcdeed\">");

	WriteHTML ("<center><b>Inactive accounts with characters:</b></center><br>");
	
	WriteHTML ("<table border==1 align=center width=60% cellpadding=5>");
	WriteHTML ("<tr><td align=right>Account name</td><td>Last Logon</td></tr>");
	
	var acct, player, found_player;
	var noplayers := 0;
	var active_accounts := 0;
	var inactive_accounts := 0;
	foreach acctname in ListAccounts ()
          var lastlog := GetAccountLastLogon (acctname);
              sleepms(1);
              if(!lastlog.errortext)
		if ((GetAccountLastLogon (acctname) > 60) && AccountisUsed(acctname))
			acct := FindAccount (acctname);
			WriteHTML ("<tr><td align=right>" + acctname + "</td>");
			WriteHTML ("<td>" + GetAccountLastLogon (acctname) + "</td></tr>");
                        if(acct.banned == 0)
                          acct.enabled := 0;
                          ban(acctname);
                          inactive_accounts := inactive_accounts + 1;
                        endif
		else
			active_accounts := active_accounts + 1;
		endif
              endif
	endforeach
	WriteHTML ("</table>");
	WriteHTML ("<center>Inactive accounts inactive and wiped: " + inactive_accounts + "</center><br>");
	WriteHTML ("<center>Active accounts: " + active_accounts + "</center><br>");
	
	WriteHTML ("</body></html>");
endprogram



///////////////////
//  Figured out how long its been since an account has logged on, in days
///////////////////

function GetAccountLastLogon (accountname)
	var account := FindAccount (accountname);
	if (!account)
		Syslog ("Error finding accountname " + accountname);
		return 9999;
	endif
	
	var logontime := 0;
	for counter := 1 to 5
		var player := account.GetCharacter (counter);
		if (player)
			var templogontime := GetObjProperty (player, "LastLog");
			if (templogontime and templogontime > logontime)
				logontime := templogontime;
			endif
		endif
	endfor
	
	var seconds := ReadGameClock () - logontime;
	var days := CINT (seconds/86400);
        if (days > 400)
          days := 1;
        endif
	return days;
endfunction

function AccountisUsed(accountname)
	var account := FindAccount (accountname);
	if (!account)
		Syslog ("Error finding accountname " + accountname);
		return 9999;
	endif
	var logontime :=   account.GetProp("LastLogin");
        if(logontime)
          return 1;
        endif
        if((!logontime) or (logontime.errortext))
          return 0;
        endif
endfunction

///////////////////////////////////////////
// Snipped from GMTools tools pkg
///////////////////////////////////////////

function ban(acctname);
  var act := FindAccount(acctname);
     var characters := EnumerateOnlineCharacters();
       foreach char in characters
         if(char.acctname == acctname)
           SendSysMessage(char, "You were kicked by web-admin for inactive account ban over 60 days.");
           SetObjProperty(char,"justbanned", 1);
           DisconnectClient(char);
           break;
         endif
       endforeach
       syslog("account " + acctname + " has been banned via 60 day inactive account script");
       Detach();
       sleepms(5);
       act.ban();
	   var x, i;
       WipeBankBox(act.GetCharacter(1));
	   for(i := 1; i <= 25; i := i + 1)
	     x := GetEquipmentByLayer(act.GetCharacter(1), i);
	     MoveItemToContainer(x, act.GetCharacter(1).backpack);
	   endfor
       DestroyItem(act.GetCharacter(1).backpack);
       act.DeleteCharacter(1);
       i := 0;
       WipeBankBox(act.GetCharacter(2));
	   for(i := 1; i <= 25; i := i + 1)
	     x := GetEquipmentByLayer(act.GetCharacter(2), i);
	     MoveItemToContainer(x, act.GetCharacter(2).backpack);
	   endfor
       DestroyItem(act.GetCharacter(2).backpack);
       act.DeleteCharacter(2);
       i := 0;
       WipeBankBox(act.GetCharacter(3));
	   for(i := 1; i <= 25; i := i + 1)
	     x := GetEquipmentByLayer(act.GetCharacter(3), i);
	     MoveItemToContainer(x, act.GetCharacter(3).backpack);
	   endfor
       DestroyItem(act.GetCharacter(3).backpack);
       act.DeleteCharacter(3);
       i := 0;
       WipeBankBox(act.GetCharacter(4));
	   for(i := 1; i <= 25; i := i + 1)
	     x := GetEquipmentByLayer(act.GetCharacter(4), i);
	     MoveItemToContainer(x, act.GetCharacter(4).backpack);
	   endfor
       DestroyItem(act.GetCharacter(4).backpack);
       act.DeleteCharacter(4);
       i := 0;
       WipeBankBox(act.GetCharacter(5));
	   for(i := 1; i <= 24; i := i + 1)
	     x := GetEquipmentByLayer(act.GetCharacter(5), i);
	     MoveItemToContainer(x, act.GetCharacter(5).backpack);
	   endfor
       DestroyItem(act.GetCharacter(5).backpack);
       act.DeleteCharacter(5);
endfunction
