use uo;
use os;
use http;
use datafile;

include "include/client";
include "include/objtype";
include "include/utility";
include "include/string";


WriteHTML ("<html><head><title>Account Information</title></head>");
WriteHTML ("<body bgcolor=#000000 text=#FFFFFF link=#0000ff vlink=#cc00ff alink=#0000CC>");

var acctname := QueryParam ("acctname");
if (!acctname)
	WriteHTML ("Please enter an account name");
	WriteHTML ("<form method==GET action=account_info.ecl>");
	WriteHTML ("Account name: <input name==acctname>");
	WriteHTML ("<input id==submit1 name=submit1 type=submit value=Search>");
	WriteHTML ("</body></html>");
	return;
endif

var acct := FindAccount (acctname);
if (!acct)
	WriteHTML ("That account does not exist</body></html>");
	return;
endif

var characters := {};
for i := 1 to 5
	characters[i] := acct.GetCharacter(i);
endfor

WriteHTML ("<center><b>Click to view character</b> </center><br>");
WriteHTML ("<center><b>Account name: </b> " + acctname + "</center><br>");

WriteHTML ("<table border==1 align=center width=60% cellpadding=5 bgcolor=#003366><tr>");
WriteHTML ("<td align==right>Character 1</td>");
if (characters[1])
	WriteHTML ("<td><a href==character_info.ecl?serial=" + characters[1].serial + ">" +characters[1].name + "</a></td>");
else
	WriteHTML ("<td>-none-</td>");
endif

WriteHTML ("</tr><tr>");
WriteHTML ("<td align==right>Character 2</td>");
if (characters[2])
	WriteHTML ("<td><a href==character_info.ecl?serial=" + characters[2].serial + ">" +characters[2].name + "</a></td>");
else
	WriteHTML ("<td>-none-</td>");
endif

WriteHTML ("</tr><tr>");
WriteHTML ("<td align==right>Character 3</td>");
if (characters[3])
	WriteHTML ("<td><a href==character_info.ecl?serial=" + characters[3].serial + ">" +characters[3].name + "</a></td>");
else
	WriteHTML ("<td>-none-</td>");
endif

WriteHTML ("</tr><tr>");
WriteHTML ("<td align==right>Character 4</td>");
if (characters[4])
	WriteHTML ("<td><a href==character_info.ecl?serial=" + characters[4].serial + ">" +characters[4].name + "</a></td>");
else
	WriteHTML ("<td>-none-</td>");
endif

WriteHTML ("</tr><tr>");
WriteHTML ("<td align==right>Character 5</td>");
if (characters[5])
	WriteHTML ("<td><a href==character_info.ecl?serial=" + characters[5].serial + ">" +characters[5].name + "</a></td>");
else
	WriteHTML ("<td>-none-</td>");
endif

var lastlog := 0;
var notes := acct.GetProp("Notes");
lastlog := acct.GetProp("LastLogin");
lastlog := Cint(ReadGameClock() - lastlog);
lastlog := (lastlog / 60);
lastlog := (lastlog / 1440);
lastlog := (lastlog / 24);
WriteHTML ("</tr><tr>");
WriteHTML ("<td align==right>Last logon</td>");
WriteHTML ("<td>" + lastlog + " days ago</td>");

var playtime := acct.GetProp ("online_time");
var hours := CINT (playtime/3600);
WriteHTML ("</tr><tr>");
WriteHTML ("<td align==right>Total playtime</td>");
WriteHTML ("<td>" + hours + " hours</td>");

WriteHTML ("</tr><tr>");
WriteHTML ("<td align==right>Staff Notes</td>");
WriteHTML ("<td>" + notes + " </td>");

WriteHTML ("</tr></table>");
WriteHTML ("</body></html>");







///////////////////
//  Figured out how long its been since an account has logged on, in days
///////////////////

function GetAccountLastLogon (accountname)
	var account := FindAccount (accountname);
	if (!account)
		Syslog ("Error finding accountname " + accountname);
		return 9999;
	endif

	var logontime := 0;
	for counter := 1 to 5
		var player := account.GetCharacter (counter);
		if (player)
			var templogontime := GetObjProperty (player, "LastLog");
			if (templogontime and templogontime > logontime)
				logontime := templogontime;
			endif
		endif
	endfor

	var seconds := ReadGameClock () - logontime;
	var days := CINT (seconds/86400);
	return days;
endfunction



