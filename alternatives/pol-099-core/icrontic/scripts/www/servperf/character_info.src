use uo;
use os;
use http;
use cfgfile;
use datafile;

include "include/client";
include "include/objtype";
include "include/utility";
include "include/string";
//include "include/skills";
include "include/attributes";

set_priority(1);

WriteHTML ("<html><head><title>Character Information</title></head>");
WriteHTML ("<body bgcolor=#000000 text=#FFFFFF link=#0000ff vlink=#cc00ff alink=#0000CC>");

var serialnumber := CINT (QueryParam ("serial"));
if (!serialnumber)
	WriteHTML ("Please enter a character serial");
	WriteHTML ("<form method==GET action=character_info.ecl>");
	WriteHTML ("Account name: <input name==character_serial>");
	WriteHTML ("<input id==submit1 name=submit1 type=submit value=Search>");
	WriteHTML ("</body></html>");
	return;
endif

var character := FindCharacterBySerial (serialnumber);
if (!character)
	WriteHTML ("Unable to find player</body></html>");
	return;
endif
var age := GetObjProperty (character, "onlinetimer");
var ageof := age / 60 ;
WriteHTML ("<table cellpadding==5 border==1 bgcolor=#003366><tr>");
WriteHTML ("<td align==right>Character</td>");
WriteHTML ("<td>" + character.name + "</td>");
WriteHTML ("</tr></tr>");
WriteHTML ("<td align==right>Account</td>");
WriteHTML ("<td><a href==account_info.ecl?acctname=" + character.acctname + ">" + character.acctname +"</a></td>");
WriteHTML ("</tr></tr>");
WriteHTML ("<td align==right>Age</td>");
WriteHTML ("<td>" + ageof + "</td></tr>");
WriteHTML ("<td align==right>Serial</td>");
WriteHTML ("<td>" + character.serial + "</td>");
WriteHTML ("</tr></table>");

skillcount(character);

WriteHTML ("<p>Equipped items:");
WriteHTML ("<table cellpadding==5 border==1 bgcolor=#003366>");
foreach item in ListEquippedItems (character)
	if (item.desc)
		WriteHTML ("<tr><td><li>" + item.desc + "</td></tr>");
	else
		WriteHTML ("<tr><td><li>Unnamed item, objtype " + item.objtype + "</td></tr>");
	endif
endforeach
WriteHTML ("</table>");


var showbackpack := CINT (QueryParam ("showbackpack"));
if (!showbackpack)
	WriteHTML ("<a href==character_info.ecl?serial=" + serialnumber + "&showbackpack==1>Show Backpack Items</a>");
else
	WriteHTML ("<p>Backpack items:");
	WriteHTML ("<table cellpadding==5 border==1>");
	foreach item in EnumerateItemsInContainer (character.backpack)
                sleepms(2);
		if (item.desc)
			WriteHTML ("<tr><td><li>" + item.desc + "</td></tr>");
		else
			WriteHTML ("<tr><td><li>Unnamed item, objtype " + item.objtype + "</td></tr>");
		endif
	endforeach
	WriteHTML ("</table>");
endif
WriteHTML ("</body></html>");



function FindCharacterBySerial (serialnumber)
var account, player;
foreach acctname in ListAccounts ()
        sleepms(2);
	account := FindAccount (acctname);
	if (account)
		for counter := 1 to 5
			player := account.GetCharacter (counter);
			if (player)
				if (player.serial = serialnumber)
					return player;
				endif
			endif
		endfor
	endif
endforeach
endfunction


///////////////////
//  Figured out how long its been since an account has logged on, in days
///////////////////

function GetAccountLastLogon (accountname)
	var account := FindAccount (accountname);
	if (!account)
		Syslog ("Error finding accountname " + accountname);
		return 9999;
	endif
	
	var logontime := 0;
	for counter := 1 to 5
		var player := account.GetCharacter (counter);
		if (player)
			var templogontime := GetObjProperty (player, "LastLog");
			if (templogontime and templogontime > logontime)
				logontime := templogontime;
			endif
		endif
	endfor
	
	var seconds := ReadGameClock () - logontime;
	var days := CINT (seconds/86400);
	return days;
endfunction

function skillcount( chr )

	var Alchemy;
	var Anatomy;
	var AnimalLore;
	var ItemId;
	var ArmsLore;
	var Parry;
	var Begging;
	var Blacksmithy;
	var Bowcraft;
	var Peacemaking;
	var Carpentry;
	var Cartography;
	var Cooking;
	var Enticement;
	var Healing;
	var Fishing;
	var Herding;
	var Hiding;
	var Provocation;
	var Inscription;
	var Lockpicking;
	var Magery;
	var MagicResistance;
	var Tactics;
	var Snooping;
	var Musicianship;
	var Poisoning;
	var Archery;
	var SpiritSpeak;
	var Stealing;
	var Tailoring;
	var AnimalTaming;
	var TasteIdentification;
	var Tracking;
	var Veterinary;
	var Swordsmanship;
   	var Macefighting;
   	var Fencing;
	var Wrestling;
	var Lumberjacking;
	var Mining;
	var Meditation;
	var Stealth;
	var RemoveTrap;
	var Camping;
	var DetectingHidden;
	var EvaluatingIntelligence;
	var Foresinc;
	var Tinker;


	Alchemy := ( GetAttributeBaseValue( chr, ATTRIBUTEID_ALCHEMY ) / 10);
	Anatomy := ( GetAttributeBaseValue( chr, ATTRIBUTEID_ANATOMY ) / 10);
	AnimalLore := ( GetAttributeBaseValue( chr, ATTRIBUTEID_ANIMALLORE ) / 10);
	ItemId := ( GetAttributeBaseValue( chr, ATTRIBUTEID_ITEMID ) / 10);
	ArmsLore := ( GetAttributeBaseValue( chr, ATTRIBUTEID_ARMSLORE ) / 10);
	Parry := ( GetAttributeBaseValue( chr, ATTRIBUTEID_PARRY ) / 10);
	Begging := ( GetAttributeBaseValue( chr, ATTRIBUTEID_BEGGING ) / 10);
	Blacksmithy := ( GetAttributeBaseValue( chr, ATTRIBUTEID_BLACKSMITHY ) / 10);
	Bowcraft := ( GetAttributeBaseValue( chr, ATTRIBUTEID_BOWCRAFT ) / 10);
	Peacemaking := ( GetAttributeBaseValue( chr, ATTRIBUTEID_PEACEMAKING ) / 10);
	Camping := ( GetAttributeBaseValue( chr, ATTRIBUTEID_CAMPING ) / 10);
	Carpentry := ( GetAttributeBaseValue( chr, ATTRIBUTEID_CARPENTRY ) / 10);
	Cartography := ( GetAttributeBaseValue( chr, ATTRIBUTEID_CARTOGRAPHY ) / 10);
	Cooking := ( GetAttributeBaseValue( chr, ATTRIBUTEID_COOKING ) / 10);
	DetectingHidden := ( GetAttributeBaseValue( chr, ATTRIBUTEID_DETECTINGHIDDEN ) / 10);
	Enticement := ( GetAttributeBaseValue( chr, ATTRIBUTEID_ENTICEMENT ) / 10);
	EvaluatingIntelligence := ( GetAttributeBaseValue( chr, ATTRIBUTEID_EVALINT ) / 10);
	Healing := ( GetAttributeBaseValue( chr, ATTRIBUTEID_HEALING ) / 10);
	Fishing := ( GetAttributeBaseValue( chr, ATTRIBUTEID_FISHING ) / 10);
	Herding := ( GetAttributeBaseValue( chr, ATTRIBUTEID_HERDING ) / 10);
	Hiding := ( GetAttributeBaseValue( chr, ATTRIBUTEID_HIDING ) / 10);
	Provocation := ( GetAttributeBaseValue( chr, ATTRIBUTEID_PROVOCATION ) / 10);
	Inscription := ( GetAttributeBaseValue( chr, ATTRIBUTEID_INSCRIPTION ) / 10);
	Lockpicking := ( GetAttributeBaseValue( chr, ATTRIBUTEID_LOCKPICKING ) / 10);
	Magery := ( GetAttributeBaseValue( chr, ATTRIBUTEID_MAGERY ) / 10);
	MagicResistance := ( GetAttributeBaseValue( chr, ATTRIBUTEID_MAGICRESISTANCE ) / 10);
	Tactics := ( GetAttributeBaseValue( chr, ATTRIBUTEID_TACTICS ) / 10);
	Snooping := ( GetAttributeBaseValue( chr, ATTRIBUTEID_SNOOPING ) / 10);
	Musicianship := ( GetAttributeBaseValue( chr, ATTRIBUTEID_MUSICIANSHIP ) / 10);
	Poisoning := ( GetAttributeBaseValue( chr, ATTRIBUTEID_POISONING ) / 10);
	Archery := ( GetAttributeBaseValue( chr, ATTRIBUTEID_ARCHERY ) / 10);
	SpiritSpeak := ( GetAttributeBaseValue( chr, ATTRIBUTEID_SPIRITSPEAK ) / 10);
	Stealing := ( GetAttributeBaseValue( chr, ATTRIBUTEID_STEALING ) / 10);
	Tailoring := ( GetAttributeBaseValue( chr, ATTRIBUTEID_TAILORING ) / 10);
	AnimalTaming := ( GetAttributeBaseValue( chr, ATTRIBUTEID_TAMING ) / 10);
	TasteIdentification := ( GetAttributeBaseValue( chr, ATTRIBUTEID_TASTEID ) / 10);
	Tracking := ( GetAttributeBaseValue( chr, ATTRIBUTEID_TRACKING ) / 10);
	Veterinary := ( GetAttributeBaseValue( chr, ATTRIBUTEID_VETERINARY ) / 10);
	Swordsmanship := ( GetAttributeBaseValue( chr, ATTRIBUTEID_SWORDSMANSHIP ) / 10);
	Macefighting := ( GetAttributeBaseValue( chr, ATTRIBUTEID_MACEFIGHTING ) / 10);
	Fencing := ( GetAttributeBaseValue( chr, ATTRIBUTEID_FENCING ) / 10);
	Wrestling := ( GetAttributeBaseValue( chr, ATTRIBUTEID_WRESTLING ) / 10);
	Lumberjacking := ( GetAttributeBaseValue( chr, ATTRIBUTEID_LUMBERJACKING ) / 10);
	Mining := ( GetAttributeBaseValue( chr, ATTRIBUTEID_MINING ) / 10);
	Meditation := ( GetAttributeBaseValue( chr, ATTRIBUTEID_MEDITATION ) / 10);
	Stealth := ( GetAttributeBaseValue( chr, ATTRIBUTEID_STEALTH ) / 10);
	RemoveTrap := ( GetAttributeBaseValue( chr, ATTRIBUTEID_REMOVETRAP ) / 10);
	Foresinc := ( GetAttributeBaseValue( chr, ATTRIBUTEID_FORENSICS ) / 10);
	Tinker := ( GetAttributeBaseValue( chr, ATTRIBUTEID_TINKERING ) / 10);


        WriteHTML ("<p>Skills:");
        WriteHTML ("<table cellpadding==2>");
        WriteHTML ("<tr><td>AnimalTaming: " + AnimalTaming + "</td></tr>");
        WriteHTML ("<tr><td>Stealing: " + Stealing + "</td></tr>");
        WriteHTML ("<tr><td>Tailoring: " + Tailoring + "</td></tr>");
        WriteHTML ("<tr><td>TasteIdentification: " + TasteIdentification + "</td></tr>");
        WriteHTML ("<tr><td>Tracking: " + Tracking + "</td></tr>");
        WriteHTML ("<tr><td>Veterinary: " + Veterinary + "</td></tr>");
        WriteHTML ("<tr><td>Swordsmanship: " + Swordsmanship + "</td></tr>");
        WriteHTML ("<tr><td>Macefighting: " + Macefighting + "</td></tr>");
        WriteHTML ("<tr><td>Fencing: " + Fencing + "</td></tr>");
        WriteHTML ("<tr><td>Wrestling: " + Wrestling + "</td></tr>");
        WriteHTML ("<tr><td>Lumberjacking: " + Lumberjacking + "</td></tr>");
        WriteHTML ("<tr><td>Mining: " + Mining + "</td></tr>");
        WriteHTML ("<tr><td>Meditation: " + Meditation + "</td></tr>");
        WriteHTML ("<tr><td>Stealth: " + Stealth + "</td></tr>");
        WriteHTML ("<tr><td>RemoveTrap: " + RemoveTrap + "</td></tr>");
        WriteHTML ("<tr><td>Foresinc: " + Foresinc + "</td></tr>");
        WriteHTML ("<tr><td>Tinker: " + Tinker + "</td></tr>");
        WriteHTML ("</table>");

return;
endfunction

