use cfgfile;
use uo;
use os;
use util;
include "include/client";
include "include/attributes";
include "include/string";
include "include/objtype";
include "include/canAccess";
include "include/dist";
include "include/toolWear";
include "include/noto";

var bowcraftconfigfile := ReadConfigFile("bowcraft");

program use_blade(who, blade)
  EraseObjProperty(who, "IsMeditating");
  EraseObjProperty(who, "HealTimer");
  if(!can_access(who, blade))
    return;
  endif
  if(!ReserveItem(blade))
    return;
  endif
  SendSysMessage(who, "What would you like to use that on, " + who.name + "?");
  var use_on := TargetCoordinates(who);
  if(!use_on)
    return;
  endif
  if(use_on.item)
    if(!can_access(who, use_on.item))
      return;
    endif
  endif
  var checkme := use_on.item.objtype;
  if((checkme == UOBJ_LOGS) || (checkme == 0x1bd7))
    CarveLogs( who, blade, use_on.item );
  elseif((checkme > 0x7050) and (checkme < 0x7058))
    CarveColouredLogs( who, blade, use_on.item );
  elseif(use_on.mobile.npctemplate == "sheep")
    process_wool(who, blade, use_on.mobile);
  elseif(use_on.item.objtype == 0x2006)
    ReleaseItem(blade);
    Carve_Corpse(who, use_on.item);
  elseif(is_fish(checkme))
    CarveFish(who, blade, use_on.item);
  elseif (is_tree(use_on.objtype ))
  var tree := use_on;
  var distt := coordist( who.x, who.y, use_on.x, use_on.y );
  if(distt > 1 )
    if(!tree.item.container)
      SendSysMessage(who, "That is too far away");
      return 0;
    endif
  endif
    CarveTree(who, use_on);
  else
    SendSysMessage(who, "I don't know how to use those items together.");
  endif
endprogram

function process_wool(who, blade, sheep)
  if((!CheckLineOfSight(who, sheep)) or (dist(who, sheep) > 2))
    SendSysMessage(who, "You cannot use that");
    return;
  endif
  if(sheep.graphic == 207)
    sheep.graphic := 223;
    CreateItemInContainer(who.backpack, 0xf125, 3);
  else
    SendSysMessage(who,"That sheep is not yet ready to be shorn.");
  endif
endfunction

function is_tree(theobj)

        if ((theobj >= 0x0c99) and (theobj <= 0x0c9d))		// Small palm
                return 0x705a;
        elseif (theobj = 0x0c9e)				// Small tree
                return 0x705f;
        elseif ((theobj >= 0x0c9f) and (theobj <= 0x0ca5))	// Plants and flowers
                return 0x705a;
        elseif (theobj = 0x0ca6)				// Ponytail palm
                return 0x705f;
        elseif ((theobj = 0x0ca7) or (theobj = 0x0ca9))		// Plants and flowers
                return 0x705a;
        elseif ((theobj = 0x0ca8) or (theobj = 0x0caa) or (theobj = 0x0cab)) // Banana
                return 0x705f;
        elseif ((theobj >= 0x0cac) and (theobj <= 0x0cc8))	// Plants and flowers
                return 0x705a;
        elseif ((theobj >= 0x0cc9) and (theobj <= 0x0cd5))	// Normal tree and leaves
                return 0x705a;
        elseif ((theobj >= 0x0cd6) and (theobj <= 0x0cd9))	// Cedar
                return 0x705b;
        elseif ((theobj >= 0x0cda) and (theobj <= 0x0cdf))	// Oak
                return 0x705c;
        elseif ((theobj >= 0x0ce0) and (theobj <= 0x0ce5))	// Walnut
                return 0x705c;
        elseif ((theobj >= 0x0ce6) and (theobj <= 0x0ce8))	// Willow
                return 0x705a;
        elseif ((theobj >= 0x0ce9) and (theobj <= 0x0cea))	// Sapling
                return 0x705f;
        elseif ((theobj >= 0x0cf3) and (theobj <= 0x0cf7))	// Fallen log
                return 0x705b;
        elseif ((theobj >= 0x0cf8) and (theobj <= 0x0cf9))	// Cyprus
                return 0x705f;
        elseif ((theobj >= 0x0cfa) and (theobj <= 0x0d03))	// Cypress
                return 0x705f;
        elseif ((theobj >= 0x0d37) and (theobj <= 0x0d38))	// Yucca
                return 0x705f;
        elseif ((theobj >= 0x0d41) and (theobj <= 0x0d93))	// Big tropical tree and leaves
                return 0x705e;
        elseif ((theobj >= 0x0d94) and (theobj <= 0x0d9b))	// Apple
                return 0x705e;
        elseif ((theobj >= 0x0d9c) and (theobj <= 0x0da3))	// Peach
                return 0x705e;
        elseif ((theobj >= 0x0da4) and (theobj <= 0x0dab))	// Pear
                return 0x705e;
        elseif ((theobj >= 0x12b6) and (theobj <= 0x12c7))	// Yew tree
                return 0x705d;
        else
                return 0;
        endif
endfunction

function is_fish(theobj)
  if((theobj >= UOBJ_FISH_START) && (theobj <= UOBJ_FISH_END) )
    return 1;
  elseif ((theobj >= UOBJ_SFISH_START) && (theobj <= UOBJ_SFISH_END))
    return 1;
  else
    return 0;
  endif
endfunction

function CarveTree(user, tree)
	var wood_amount := HarvestResource ("wood", tree.x, tree.y, 2, 3);
        var theobj := tree.objtype;
        var carving := UOBJ_KINDLING;
	if (!wood_amount)
		SendSysmessage (user, "There's no kindling left.");
		return 0;
	endif
        if ((theobj >= 0x0cf3) and (theobj <= 0x0cf7))	// Fallen log
                carving := UOBJ_DEAD_WOOD;
        endif
                
	var skill := GetAttribute (user, ATTRIBUTEID_LUMBERJACKING);
	wood_amount := RandomInt(CINT(skill/33)) + CINT(skill/33) + 1;
	if (!wood_amount)
		wood_amount := 1;
	endif

	CreateItemInBackpack (user, carving, wood_amount);
	SendSysmessage (user, "You chip off some kindling and put it in your backpack");
endfunction

function CarveFish(who, blade, use_on)
  if((!Accessible(who, use_on)) or (!CheckLineOfSight(who, use_on)) or (dist(who, use_on) > 2))
    SendSysMessage(who, "You cannot use that");
    return;
  endif
  if((!ReserveItem(use_on)) || (use_on.movable == 0))
    SendSysMessage(who, "You cannot use that.");
    return;
  endif
  var num_steaks := (4 * use_on.amount);
  PlaySoundEffect(who, SFX_57);
  if(DestroyItem(use_on))
    CreateItemInBackpack(who, UOBJ_FISHSTEAK, num_steaks);
    SendSysMessage(who, "You carve the fish steaks and put them in your backpack");
  endif
  sleep(1);
endfunction

function CreatableObjects( who, blade, logs )
  var objtypes := GetMenuObjTypes( "BowcraftCarving" );
  objtypes := ApplyConstraint( objtypes, bowcraftconfigfile, "material", GetAmount(logs) );
  return objtypes;
endfunction

function Carve_Corpse(who, cadaver)
  Detach();
  var part;
  var conf := ReadConfigFile("corpses");
  var c_type := cadaver.corpsetype;
  var elem := conf[c_type];
  if((!Accessible(who, cadaver)) or (!CheckLineOfSight(who, cadaver)))
    SendSysMessage(who, "You cannot use that");
    return;
  endif
  if(Distance(who, cadaver) > 2)
    SendSysMessage(who, "You are not close enough");
    return;
  endif
var cdserial := CInt(GetObjProperty(cadaver, "ghostserial"));
var gantiloot := GetGlobalProperty("gantiloot");
if((gantiloot == 1) && ((c_type == 400) or (c_type == 401)))
  if(cdserial != who.serial)
    SendSysMessage(who, "You feel sick by just trying to carve the corpse.");
    return 0;
  endif
endif
var corpseguildid := GetObjProperty(cadaver, "guild_id");
var corpseguild := FindGuild(corpseguildid);
var lootersguildid := GetObjProperty(who, "guild_id");
var looterguild := FindGuild(lootersguildid);
var flagging := GetObjProperty(cadaver, "flaggings");

var lootable := 0;

if ((corpseguildid) && (lootersguildid))
      if ( (corpseguildid = lootersguildid) ||
(corpseguild.isallyguild(looterguild)) || (corpseguild.isenemyguild
(looterguild)))
        // Player is either in the same guild, an allied guild, or a warring guild
        lootable := 1;
      endif
endif


if(Cint(GetObjProperty(cadaver, "ghostserial")) <> who.serial and lootable = 0)
  if(flagging = "blue")
    SendSysMessage(who, "You have carved a blue corpse and have been flagged criminal. Guards can now be called on you.");
    who.SetCriminal(1);
  endif
  if(GetObjProperty(cadaver, "cut") == "1")
    SendSysMessage( who, "You cannot get any more from this corpse." );
    foreach thing in EnumerateItemsInContainer(cadaver)
      if ((thing.objtype = 0xFF02) || (thing.graphic = 0x203B))
        DestroyItem(thing);
      else
        MoveItemToLocation(thing, cadaver.x, cadaver.y, cadaver.z, MOVEITEM_FORCELOCATION);
      endif
    endforeach
    part := CreateItemAtLocation(cadaver.x-1, cadaver.y, cadaver.z, 0x1da0, 1);
    SetObjProperty(part, "serial", GetObjProperty(cadaver, "serial"));
    SetObjProperty(part, "serial", GetObjProperty(cadaver, "serial"));
    var aname := cadaver.name;
    aname["A corpse of"] := "";
    part.name := "The head of " + aname;
    DestroyItem(cadaver);
  elseif((c_type == 400) || (c_type == 401))
    foreach thing in EnumerateItemsInContainer(cadaver)
      if ((thing.objtype = 0xFF02) || (thing.graphic = 0x203B))
        DestroyItem(thing);
      else
        MoveItemToLocation(thing, cadaver.x, cadaver.y, cadaver.z, MOVEITEM_FORCELOCATION);
      endif
    endforeach
    var partsarray := {};
    part := CreateItemAtLocation(cadaver.x-1, cadaver.y, cadaver.z, 0x1da0, 1);
    partsarray.append(part);
    SetObjProperty(part, "serial", GetObjProperty(cadaver, "serial"));
    var aname := cadaver.name;
    aname["A corpse of"] := "";
    part.name := "The head of " + aname;
    part := CreateItemAtLocation(cadaver.x-1, cadaver.y, cadaver.z, 0x1da1, 1);
    partsarray.append(part);
    part := CreateItemAtLocation(cadaver.x-1, cadaver.y+1, cadaver.z, 0x1da2, 1);
    partsarray.append(part);
    part := CreateItemAtLocation(cadaver.x+1, cadaver.y, cadaver.z, 0x1da3, 1);
    partsarray.append(part);
    part := CreateItemAtLocation(cadaver.x+1, cadaver.y+1, cadaver.z, 0x1da4, 1);
    partsarray.append(part);
    part := CreateItemAtLocation(cadaver.x, cadaver.y, cadaver.z, 0x1d9f, 1);
    partsarray.append(part);
    var blood := CreateItemAtLocation(cadaver.x, cadaver.y, cadaver.z, 0x122a, 1);
    blood.movable := 0;
    DestroyItem(cadaver);
    sleep(40);
    foreach thing in partsarray
      if(!thing.container)
        DestroyItem(thing);
      endif
    endforeach
    sleep(20);
    DestroyItem(blood);
  else
    SetObjProperty(cadaver, "cut","1");
    if(c_type == 223)
      CreateItemInContainer(cadaver, 0x9f1, 2);
      SendSysMessage(who, "You place the items on the corpse.");
      var theblood := CreateItemAtLocation(cadaver.x, cadaver.y, cadaver.z, UOBJ_BLOOD, 1);
      Detach();
      sleep(30);
      DestroyItem(cadaver);
      sleep(30);
      DestroyItem(theblood);
    else
      var item1 := GetConfigString(elem, "item1");
      var amount1 := GetConfigInt(elem, "amount1");
      var item2 := GetConfigString(elem, "item2");
      var amount2 := GetConfigInt(elem, "amount2");
      if(amount1)
        CreateItemInContainer(cadaver, item1, amount1);
        SendSysMessage(who, "You place the items on the corpse.");
      endif
      if(amount2)
        CreateItemInContainer(cadaver, item2, amount2);
      endif
      var theblood := CreateItemAtLocation(cadaver.x, cadaver.y, cadaver.z, UOBJ_BLOOD, 1);
      sleep(30);
      DestroyItem(cadaver);
      sleep(30);
      DestroyItem(theblood);
    endif
  endif
endif

endfunction

function CarveLogs(who, blade, logs)
  var x:= who.x;
  var y:= who.y;
  var auto := GetObjProperty(who,"autoBowcraft");
  var creatable := CreatableObjects(who, blade, logs);
  var selection := SelectMenuItem2(who, "BowcraftCarving");
  if(!selection)
    return;
  endif
  var what := selection.objtype;
  var objectconfig := FindConfigElem(bowcraftconfigfile, what);
  if(!objectconfig)
    return;
  endif
  while((who.x = x) and (who.y = y))
    if(logs.movable == 0)
      SendSysMessage(who, "You cannot use those logs.");
      return;
    endif
    if((!Accessible(who, logs)) or (!CheckLineOfSight(who, logs)) or (dist(who, logs) > 2))
      SendSysMessage(who, "You cannot use that");
      return;
    endif
    if(!logs.container)
      if(Distance(who, logs) > 2)
        SendSysMessage(who, "That is too far away");
        return;
      endif
    endif
    if(!Accessible(who, logs))
      SendSysMessage(who, "I can't access the logs to make that.");
      return;
    endif
    var material := CInt(GetElemProperty(objectconfig, "Material"));
    if(material > logs.amount)
      SendSysMessage(who, "You don't have enough logs to make that.");
      return;
    endif
    var difficulty := GetConfigInt(objectconfig, "Difficulty");
    var pointvalue := GetConfigInt(objectconfig, "PointValue");
    var bow := 0;
    Detach();
    PlaySoundEffect(who, 0x5a);
    PerformAction(who, 0x021);
    sleep(2);
    PlaySoundEffect(who, 0x5a);
    PerformAction(who, 0x021);
    sleep(2);
    PlaySoundEffect(who, 0x5a);
    PerformAction(who, 0x021);
    sleep(2);
    PlaySoundEffect(who, 0x5a);
    PerformAction(who, 0x021);
    sleep(2);
    if(CheckSkill(who, SKILLID_BOWCRAFT, difficulty, pointvalue))
      if(what == UOBJ_SHAFTS)
        var amt := logs.amount;
        if(DestroyItem(logs))
          CreateItemInBackpack(who, what, amt);
          CheckToolWear (who, blade, SKILLID_BOWCRAFT);
          SendSysMessage(who, "You create some shafts and place them in your pack." );
        endif
      elseif (what == UOBJ_BOW)
        if(SubtractAmount(logs, material))
          bow := CreateItemInBackpack(who, what);
          CheckToolWear (who, blade, SKILLID_BOWCRAFT);
          SendSysMessage(who, "You create a bow and place it in your pack.");
          SetName(bow, "Bow");
        endif
      elseif (what == UOBJ_XBOW)
        if(SubtractAmount(logs, material))
          bow := CreateItemInBackpack(who, what);
          CheckToolWear (who, blade, SKILLID_BOWCRAFT);
          SendSysMessage(who, "You create a crossbow and place it in your pack.");
          SetName(bow, "Crossbow");
        endif
      elseif (what == UOBJ_HEAVY_XBOW)
        if(SubtractAmount(logs, material))
          bow := CreateItemInBackpack(who, what);
          CheckToolWear (who, blade, SKILLID_BOWCRAFT);
          SendSysMessage(who, "You create a heavy crossbow and place it in your pack.");
          SetName(bow, "Heavy Crossbow");
        endif
      else
        SendSysMessage(who, "I don't know how to make that.");
        return;
      endif
      if((RandomInt(CInt(GetEffectiveSkill(who,SKILLID_BOWCRAFT)) + 1) > (difficulty + 20)) && (bow != 0))
        setquality(who, bow);
//      var skill := GetEffectiveSkill(who, SKILLID_BOWCRAFT);
//      ExceptionalFameMod(who, skill, difficulty, pointvalue);
      endif
    else
      SubtractAmount(logs, (RandomInt(5) + 1));
      SendSysMessage(who, "You destroy some logs.");
    endif
    if(!auto)
      break;
    endif
  endwhile
endfunction

function ExceptionalFameMod(who, skill, diff, points)
  if(skill > (diff - 20))
    if((skill - diff) <= 5)
      points := points;
    elseif((skill - diff) <= 10)
      points := (points * 3) / 4;
    elseif((skill - diff) <= 15)
      points := points / 2;
    elseif((skill - diff) <= 15)
      points := points / 4;
    else
      points := 0;
    endif
    points := Cint(points);
    var fame := Cint(GetObjProperty(who, "Fame"));
    var famegain := fame + points;
    SetObjProperty(who, "Fame", famegain);
    var msgtext := "You have ";
    if(points < 0)
      msgtext := msgtext + "lost ";
      points := Abs(points);
    else
      msgtext := msgtext + "gained ";
    endif
    if(points > 150)
      msgtext := msgtext + "a great amount of ";
    elseif(points > 125)
      msgtext := msgtext + "alot of ";
    elseif(points > 75)
      msgtext := msgtext + "a good amount of ";
    elseif(points > 30)
      msgtext := msgtext + "some ";
    elseif(points > 0)
      msgtext := msgtext + "a little ";
    else
      return 0;
    endif
    msgtext := msgtext + "Fame.";
    SendSysMessage(who, msgtext);
    var karma := Cint(GetObjProperty(who, "Karma"));
    var kmod := GetKarmaLevel(karma);
    var fmod := GetFameLevel(famegain);
    var newtitle := nototitles[ (kmod) ];
    newtitle := "The " + CStr(newtitle[fmod]) + " ";
    if(newtitle["None"])
      newtitle := "";
    endif
    if(fmod == 5)
      if(who.gender == 1)
        newtitle := newtitle + "Lady ";
      else
        newtitle := newtitle + "Lord ";
      endif
    endif
    if(newtitle != who.title_prefix)
      who.title_prefix := newtitle;
      SendSysMessage(who, "you are now known as " + newtitle + who.name);
    endif
    SetNotoTitle(who, karma, fame);
  endif
endfunction

function setquality(who, bow)
  var tname := TruncateArticle(bow.name);
  if(CInt(GetEffectiveSkill(who, SKILLID_BOWCRAFT)) >= 99)
    bow.name := "An Exceptional " + tname + " [Crafted by " + who.name + "]";
  else
    bow.name := "An Exceptional " + tname;
  endif
  bow.quality := bow.quality + 0.3;
  bow.hp := bow.maxhp;
  SendSysMessage(who, "You created an exceptional item.");
endfunction

function CarveColouredLogs(who, blade, logs)

  var x:= who.x;
  var y:= who.y;
  var auto:= GetObjProperty(who,"autoBowcraft");
  var logname, logvalue;
  var logbow, logcolor;
  var logcrossbow;
  var logheavycrossbow;
  var bowspeed;
  var xbowspeed;
  var heavyxbowspeed;
  var logot := 0;
  case(logs.objtype)

	0x7051:		logname:= "Elven";
			logbow:= 0x7058;
			logcrossbow:= 0x705f;
			logheavycrossbow:= 0x7066;
                        logvalue := 2;
                        logcolor := logs.color;
			break;
	0x7052:		logname:= "Moonbeam";
			logbow:= 0x7059;
			logcrossbow:= 0x7060;
			logheavycrossbow:= 0x7067;
                        logcolor := logs.color;
                        logvalue := 4;
			break;
	0x7053:		logname:= "Oak";
			logbow:= 0x705a;
			logcrossbow:= 0x7061;
			logheavycrossbow:= 0x7068;
                        logcolor := logs.color;
                        logvalue := 6;
			break;
	0x7054:		logname:= "Willow";
			logbow:= 0x705b;
			logcrossbow:= 0x7062;
			logheavycrossbow:= 0x7069;
                        logcolor := logs.color;
                        logvalue := 8;
			break;
	0x7055:		logname:= "Silver";
			logbow:= 0x705c;
			logcrossbow:= 0x7063;
			logheavycrossbow:= 0x706a;
                        logcolor := logs.color;
                        logvalue := 10;
                        logot := 1;
			break;
	0x7056:		logname:= "Jungle";
			logbow:= 0x705d;
			logcrossbow:= 0x7064;
			logheavycrossbow:= 0x706b;
                        logcolor := logs.color;
                        logvalue := 12;
			break;
	0x7057:		logname:= "Avatar";
			logbow:= 0x705e;
			logcrossbow:= 0x7065;
			logheavycrossbow:= 0x706c;
                        logcolor := logs.color;
                        logvalue := 14;
			break;

  endcase
  
    if(logs.movable == 0)
      SendSysMessage(who, "Cancelled. You cannot use those logs.");
      return;
    endif
    if((!Accessible(who, logs)) or (!CheckLineOfSight(who, logs)) or (dist(who, logs) > 2))
      SendSysMessage(who, "Cancelled. You cannot use that.");
      return;
    endif
    if(!logs.container)
      if(Distance(who, logs) > 2)
        SendSysMessage(who, "Cancelled. That is too far away.");
        return;
      endif
    endif
  if(!CheckSkillForLogs(who, logs))
    SendSysMessage(who, "You have no chance to successfully work with this wood.");
    return;
  endif
    var creatable := CreatableObjects(who, blade, logs);
    var selection := SelectMenuItem2(who, "ColouredLogs");
    if(!selection)
      return;
    endif
    var what := selection.objtype;
  while((who.x = x) and (who.y = y))
    if(!Accessible(who, logs))
      SendSysMessage(who, "Cancelled. I can't access the logs to make that.");
      return;
    endif
    var objectconfig := FindConfigElem(bowcraftconfigfile, what);
    if(!objectconfig)
      return;
    endif
    var material := CInt(GetElemProperty(objectconfig, "Material"));
    if(material > logs.amount)
      SendSysMessage(who, "Cancelled. You don't have enough logs to make that.");
      return;
    endif
    var difficulty := GetConfigInt(objectconfig, "Difficulty");
    var pointvalue := GetConfigInt(objectconfig, "PointValue");
    pointvalue := pointvalue + logvalue;
    var bow := 0;
    Detach();
    PlaySoundEffect(who, 0x5a);
    PerformAction(who, 0x021);
    sleep(2);
    PlaySoundEffect(who, 0x5a);
    PerformAction(who, 0x021);
    sleep(2);
    PlaySoundEffect(who, 0x5a);
    PerformAction(who, 0x021);
    sleep(2);
    PlaySoundEffect(who, 0x5a);
    PerformAction(who, 0x021);
    sleep(2);
    if(CheckSkill(who, SKILLID_BOWCRAFT, difficulty, pointvalue))
      if (what == UOBJ_BOW)
        if(SubtractAmount(logs, material))
          bow := CreateItemInBackpack(who, logbow);
          CheckToolWear (who, blade, SKILLID_BOWCRAFT);
          SendSysMessage(who, "You create a bow and place it in your pack.");
          SetName(bow, logname +" Bow");
          if(logot == 1)
            SetObjProperty(bow, "SilverHit", 1);
          endif
          bow.color:= logcolor;
          bow.speed := bowspeed;
        endif
      elseif (what == UOBJ_XBOW)
        if(SubtractAmount(logs, material))
          bow := CreateItemInBackpack(who, logcrossbow);
          CheckToolWear (who, blade, SKILLID_BOWCRAFT);
          SendSysMessage(who, "You create a crossbow and place it in your pack.");
          SetName(bow, logname +" Crossbow");
          if(logot == 1)
            SetObjProperty(bow, "SilverHit", 1);
          endif
          bow.color:= logcolor;
          bow.speed:= xbowspeed;
        endif
      elseif (what == UOBJ_HEAVY_XBOW)
        if(SubtractAmount(logs, material))
          bow := CreateItemInBackpack(who, logheavycrossbow);
          CheckToolWear (who, blade, SKILLID_BOWCRAFT);
          SendSysMessage(who, "You create a heavy crossbow and place it in your pack.");
          SetName(bow, logname +" Heavy Crossbow");
          if(logot == 1)
            SetObjProperty(bow, "SilverHit", 1);
          endif
          bow.color:= logcolor;
          bow.speed:= heavyxbowspeed;
        endif
      else
        SendSysMessage(who, "I don't know how to make that.");
        return;
      endif
      if((RandomInt(CInt(GetEffectiveSkill(who,SKILLID_BOWCRAFT)) + 1) > (difficulty + 20)) && (bow != 0))
        setquality(who, bow);
//      var skill := GetEffectiveSkill(who, SKILLID_BOWCRAFT);
//      ExceptionalFameMod(who, skill, difficulty, pointvalue);
      endif
    else
      SubtractAmount(logs, (RandomInt(5) + 1));
      SendSysMessage(who, "You destroy some logs.");
    endif
    if(!auto)
      break;
    endif
  endwhile
endfunction

function CheckSkillForLogs(who, log)
  case( log.objtype )

    0x7051:   return(checkhisskill(who, 35));
    0x7052:   return(checkhisskill(who, 45));
    0x7053:   return(checkhisskill(who, 55));
    0x7054:   return(checkhisskill(who, 65));
    0x7055:   return(checkhisskill(who, 75));
    0x7056:   return(checkhisskill(who, 85));
    0x7057:   return(checkhisskill(who, 95));

default:  SendSysMessage(who, "You can't work with that.");
  endcase
endfunction

function checkhisskill(who, skill)
  var his_skill := GetEffectiveSkill(who, SKILLID_BOWCRAFT);
  if(his_skill >= skill)
    return 1;
  else
    return 0;
  endif
endfunction
