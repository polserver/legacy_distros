Use npc;
Use os;
Use uo;

include "util/bank";
include "include/randname";
include "include/eventid";
include "include/vetement";

var bank;
var me := Self();

if( me.name["<random>"] )
		SetName ( me , RandomName( me ) );
	   set_priority(50);
       Habille( me , "banker" );
       set_priority(1);
endif
start_script("NPCKeeper", me);
program banker();

	EnableEvents( EVID_SPEECH, 4 );

	while (1)
    		var ev;
    		ev := os::wait_for_event( 120 );
    		if (ev)
                    if ( CheckLineOfSight(me, ev.source) )
         		if ( ev.text["bank"] )
				OpenBank(ev.source);
			endif

         		if ( ev.text["balance"] )
				Balance(ev.source);
			endif

         		if ( ev.text["withdraw"] )
				Withdraw(ev.source);
			endif

			if ( ev.text["statement"] )
				Balance(ev.source);
                        endif
                    endif
		endif
	endwhile

endprogram

function OpenBank(you)

	TurnToward(you);
	var bankbox := FindBankBox( you );
	if (GetObjProperty(you,"toadmode"))
		say("*ribbit*");
	else
		if (bankbox)
			SendOpenSpecialContainer( you, bankbox );
		else
			say("You don't seem to have a bank box, "+ you.name);
		endif
	endif

endfunction

function Balance(you)

  var myamt := 0;
  TurnToward(you);

  foreach item in EnumerateItemsInContainer(FindBankBox( you ))
   if ((item.graphic = 0xEED) or (item.graphic = 0xEEE)  or
    (item.graphic = 0xEEF))
     myamt := myamt + item.amount;
    endif
  endforeach

  If (Myamt > 0)
   Say("Thy current bank balance is "+Myamt+" gold.");
    else
   Say("You have no gold in thy bank box.");
  endif

endfunction

// stolen OSI shit :)
// npc buy phrase : ... The total of thy purchase is xx gold. My thanks for the patronage.


function WithDraw(who)
var amount := CInt(RequestInput( who, who.backpack, "How much?"));
if(!amount or amount < 0)
    SendSysMessage(who, "You must enter an amount to withdraw.");
    return;
endif
var box := FindBankBox(who);
if(ConsumeSubstance(box, 0xEED, amount))
    if(amount <= 60000)
        CreateItemInBackpack(who, 0xEED, amount);
    else
        var stacks:=  CInt(amount/60000);
        var remainer:=CInt(amount%60000);
        var i;
        for(i:=0; i<stacks; i:=i+1)
            CreateItemInBackpack(who, 0xEED, 60000);
        endfor
        CreateItemInBackpack(who, 0xEED, remainer);
    endif
    SendSysMessage(who, "Thou hast withdrawn "+ amount +" gold from thy account.");
else
    SendSysMessage(who, "Not enough gold!");
endif
endfunction

function WriteCheck(who)
          TurnToward(who);
          var bankbox := FindBankBox(who);
          var contents := EnumerateItemsInContainer(bankbox);
          var amt := 0;
          Say("How much do thy wish to write thy check for?");
	  var check := CInt(RequestInput( who, who.backpack, "How much do you wish to write the check for?"));
          foreach item in contents
            if(item.objtype == 0xeed)
              amt := (amt + item.amount);
            endif
          endforeach
	  if(check < 5000)
	      SendSysMessage(who, "Checks must be at least 5000 in value");
	  elseif(check > 1000000)
	      SendSysMessage(who, "Checks must be for no more than 1 million gold!");
	  elseif(amt >= check)
	      ConvertGold(who,amt,check);
	      var checkdeed := CreateItemInBackpack(who, 0xeee, 1);
	      SetObjProperty(checkdeed, "value", check);
	      checkdeed.name := "check for "+check+" gold";
	      PrintTextAbovePrivate(me,"A check for "+check+" gold has been placed in your pack.",who);
	  else
	    SendSysMessage(who, "You do not have enough gold for this check");
	  endif

endfunction

function ConvertGold(who, gold, check)
var bankbox := FindBankBox(who);
var contents := EnumerateItemsInContainer(bankbox);
var pile := 0;
while(check)
if(check>60000)
 foreach item in contents
  if((item.objtype == 0xeed) && (item.amount == 60000))
   pile := item;
   SubtractAmount(pile,60000);
   check := (check - 60000);
   break;
  endif
 endforeach
else
 foreach item in contents
  if((item.objtype == 0xeed) && (item.amount >= check))
   pile := item;
   SubtractAmount(pile,check);
   check := 0;
   break;
  endif
 endforeach
endif
endwhile
endfunction
