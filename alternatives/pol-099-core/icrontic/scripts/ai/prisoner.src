//////////////////////////////////////////////////////////////////////////////////////////////////
// Prisioner v1.0
// by GM Scull
// AI for prisoners, can be rescued by player typing rescue and taking em to a town in checkcity.inc
//
// 1.0
//  Took out virtue
//  Rewrote command handeling
//  Rewrote detect close monster code
//  Rewrote master code
//  Optimised Some functions
//  Took out some useless stuff like telling a prisoner to stop
// 0.8
//  Various optimisations
//  Fixed massive lag problems (caused by prisoners checking for monsters)
//  Fixed some long sentences.
//  Got rid of useless cprops
//
// 0.7
//  Got rid of some useless code
//  Prisoners giving out items now works correctly
//  Prisoners now have beards and hats
//
// BUGS:
//	None Known
//
//////////////////////////////////////////////////////////////////////////////////////////////////

use uo;
use os;
use npc;

include "include/eventid";
include "include/randname";
include "include/npcbackpacks";
include "include/checkcity";
include "include/client";
include "include/anchors";
include "include/vetement";
include "include/noto";
//include "ai/main/loot";

// * Edit this stuff *

const GIVES_ITEM := 5;           //Does the have a chance to give an item instead of gold? (eg (1/GIVES_ITEM) chance)
const SAVIORGOLD := 843;         //Amount Player Will recive if gold is given
const RANDOM_SAVIORGOLD := 200;  //Amount of extra gold player might get (ie 0-100)
const MONSTERAVOID := 5;         //Distance monsters have to be from prisoner in order for it to move

const DONT_WANTER_TO_MUCH := 1;  //The prisoner can only wander 5 squares if this is on





const UOBJ_GOLDCOIN := 0xeed;

var configfile := ReadConfigFile("::npcdesc");
var me := Self();

var master;
var saviorname := 0;    //used to check if we are saved, and to hold the saviors name
var last_complain := ReadGameClock(); //used for complaing when monsters are around
var last_distance := 0; //used to check if the player recaled out
var terror;				//monster prisoner is currently afraid of

program Prisoner()

	if( me.name["<random>"] )
		Setmeup();
	endif

	master := 0;
	me.SetMaster(0);

	if (getobjproperty(me, "frozen"))
		me.frozen := 1;
	endif

	if (DONT_WANTER_TO_MUCH)
		SetAnchor( me.x, me.y, 4, 100 );
		Drop_Anchor();
	endif

	SetWarMode( 0 );

	var ev;
	var next_wander := ReadGameClock()+10;
    var wanders := 9;
	var next_cry := ReadGameClock()+10;

	EnableMainEvents();

	if (!master)
		EnableEvents(EVID_SPEECH,8);
	else
		EnableEvents(EVID_SPEECH,4);
	endif


	while (1)

		if (saviorname)
			
			ev := (wait_for_event(30));
			Wanderaroundlikeanidiot(ev, next_wander);//wander around like an idiot, and when theres no one around, die
			Sleep(3);

		else

			if ((ReadGameClock() >= next_cry) and (!master))
				Cryforhelp();
				next_cry := readgameclock()+25;
			endif

			ev := Movement(wanders, next_wander);

			if (ev)
				if (!master)
					ProcessSaviorlessEvents(ev, wanders, next_wander);
				else
					ProcessSaviorEvents(ev);
				endif
			endif

		endif

	endwhile

endprogram



function ProcessSaviorlessEvents(byref ev, byref wanders, byref next_wander)

	case (ev.type)
	EVID_SPEECH:

		wanders := 0;
		next_wander := readgameclock()+10;
		var evtext := lower(ev.text);
	
		if ((evtext["rescue"]) or (evtext["follow"]) or (evtext["save"])) //the player must take me to a guarded area

			if (CheckLineOfSight( me, ev.source ))
			
				TurnToward(ev.source);
				say("Please take me to the nearest city " + ev.source.name + "!" );

				master := ev.source;
				me.SetMaster(ev.source);
			else
				say("I can hear, but cannot see thee! Save me!");
			endif


		elseif ((evtext["help"]) or (evtext["yo"]) or (evtext["hail"])) //say what player must do
			TurnToward(ev.source);
			say( ev.source.name + "! Get me the hell out of here!" );
		endif


	EVID_ENGAGED:
	EVID_DAMAGED:
		wanders := 0;
		next_wander := readgameclock()+20;
		say("Help! Anyone! " + ev.source.name + " is attacking me!");
		flee(ev.source);
	EVID_ENTEREDAREA:
		if (!ev.source.npctemplate)
			Cryforhelp();
		endif
	EVID_LEFTAREA:
		if (Randomint(4) = 1)
			say(ev.source.name + " dont leave me here!");
		endif
	endcase


endfunction




function ProcessSaviorEvents(byref ev)

	case (ev.type)
	EVID_SPEECH:
		if (ev.source = master)
			case(lower(ev.text))
				"release":
					TurnToward(master);
					say("You're leaving me to die here? nooooo!!");
					Release();
				"help":
					TurnToward(master);
					say("Escort me to a city so I can be free again! Ye shalt be paid lots of money too");
			endcase
		endif 
	EVID_ENGAGED:
	EVID_DAMAGED:
		say("Help! " + master.name + "! " + ev.source.name + " is attacking me!");
		flee(ev.source);

	EVID_ENTEREDAREA:

		if (MONSTERAVOID)

			if (terror)
				if (ev.source = master)
					say (master.name + " Help! I cant follow until " + terror.name + " is gone!");
				endif
				return;
			endif

			var elem:= configfile[ev.source.npctemplate];
			if (elem) 
				if ((elem.script != "tamed") and (elem.alignment != "good"))
					terror:=ev.source;
					say (master.name + " Help! I cant follow until " + ev.source.name + " is gone!");
					return;
				endif
			endif
		endif
	
	EVID_LEFTAREA:
		if (ev.source==terror)
			say("That was close!");
			terror := 0;
		endif
	endcase

endfunction



function Movement(byref wanders, byref next_wander)

	if (ReadGameClock() > next_wander)

		if ((CheckCity(me, me)) and (!saviorname))
			if (!master)
				say("Hooray, I am out of that wretched place");
				saviorname := me.name;
			else
				reward_savior(master);
				saviorname := master.name;
			endif

			me.title_suffix := " the Townsperson";
			wanders:=0;
			Release(1);
			return (wait_for_event(5));
		endif

		if (master)
			next_wander := 10;
		endif

	endif


	if (!master)

		if ( ReadGameClock() >= next_wander )

			if (DONT_WANTER_TO_MUCH)
				SetAnchor( me.x, me.y, 5, 0 );
			endif

//			grabloot();

			wanders:=wanders+1;
			wander();
			next_wander := ReadGameClock() + 10;
			if (wanders>60)
				wanders := 0;
				return (sleepmode());
			else
				return (wait_for_event(5));
			endif
		else
			return (wait_for_event(6));
		endif
	else

		if (master.dead)
			say("Oh no, my savior has been killed in battle!");
			Release();
		endif

		SetAnchor( me.x, me.y, 20, 0 );
		Follow();
		return (wait_for_event(1));
	endif

endfunction

function reward_savior(who)

	TurnToward(who);
		
	//AddVirtue(who,RandomInt(2)+1);

	var goldtogive := SAVIORGOLD + randomInt( RANDOM_SAVIORGOLD );

	if (!GIVES_ITEM)
		say("I am safe! Thankthy " + who.name + ", accept " + goldtogive + " gold coins as my gratitude"); //gold
		CreateItemInBackpack( who, UOBJ_GOLDCOIN, goldtogive );
                RescueFameMod(who);
	else
		if (randomint(GIVES_ITEM)=0)
			var item := RandomItem();
			say("I am safe! Thankthy " + who.name + ", accept " + cint(item[2]) + " of these as my gratitude"); //random item
			CreateItemInBackpack(who, item[1], item[2] );
                        RescueFameMod(who);
		else
			say("I am safe! Thankthy " + who.name + ", accept " + goldtogive + " gold coins as my gratitude"); //gold
			CreateItemInBackpack( who, UOBJ_GOLDCOIN, goldtogive );
                        RescueFameMod(who);
		endif
	endif


endfunction



function sleepmode()

	say("No one will ever find me down here!");

	var ev;
	while (1)
		ev := os::wait_for_event( 120 );
		repeat
		if (ev)
		case (ev.type)
            EVID_ENGAGED:
			EVID_DAMAGED:
				return ev;
			EVID_ENTEREDAREA:
			EVID_SPEECH:
				if (!ev.source.npctemplate)
					return ev;
				endif
		endcase
		Cryforhelp();
		endif

		until (! (ev := os::wait_for_event(120)) );
	endwhile      

endfunction  

function Follow()

	if ( (me.frozen) )
		sleep(10);
		return;
	endif

	if (terror)
		if (ReadGameClock() > last_complain)
			last_complain := ReadGameClock() + 15;
			say (master.name + " Help! I cant follow until " + terror.name + " is gone!");
		endif

		sleep(3);
		return;
	endif

	if (!master)
		return;
		Release();
	endif



	var d := Distance( me, master );

	if (d < 3)
		sleep(2);
	elseif (d < 5)
		WalkToward(master);
	elseif (d < 25)
		RunToward(master);
	elseif ( d > 200 ) //the player has gated or recalled

		if (last_distance < 25)
			foreach item in listitemsnearlocation(me.x,me.y,me.z,8)
				if ((item.objtype = UOBJ_BLUE_MOONGATE) or (item.objtype = 0x6200))

					var tx := GetObjProperty( item, "DestX");
					var ty := GetObjProperty( item, "DestY");
					var tz := GetObjProperty( item, "DestZ");

					if (inpoint(tx,ty))
						MoveCharacterToLocation( me, tx, ty, tz, MOVECHAR_FORCELOCATION );
						sleep(2);
						return;
					endif
				endif
			endforeach
		endif

		say ("I cant find my way out, Help!");
		SendSysMessage(master, "You have left a prisoner behind.");
		release();

	else
		say ("I cant find my way out, Help!");
		SendSysMessage(master, "You have left a prisoner behind.");
		release();
	endif

	last_distance := d;

endfunction


function inpoint(yoink_x,yoink_y)

	if ( (master.x > yoink_x - 6 and master.x < yoink_x + 6) and (master.y > yoink_y - 6 and master.y < yoink_y + 6) )
	  return 1;
	else
	  return 0;
	endif

endfunction


function Release(restart:=1)
	me.setmaster( 0 );
	master := 0;
	if (!restart)
		RestartScript(me);
	endif
endfunction


function Cryforhelp()

	//fixme-do a random dungeon sound

	var player;
	foreach critter in ListMobilesNearLocation( me.x,me.y,me.z, 4 ) //make the player feel special
		if (!critter.npctemplate)
			player := critter;
		endif
	endforeach

	sleep(1);


	case (randomInt( 9 ))  //random cry for help
		default:
			if (!player.name) say("Someone helpme!"); else Turntoward(player); say( player.name + " helpme!"); endif
		2:
			say("Ahhhhh!");
		3:
			say("Nooooo!");
		4:
			if (!player.name) say("Someone rescue me!"); else Turntoward(player); say("Please " + player.name + " rescue me!"); endif
		5:
			say("Im Dooooomed!");
		6:
			if (!player.name) say("I Dont want to Die!"); else Turntoward(player); say(player.name + "! I Dont want to Die!"); endif
		7:
			if (!player.name) say("Someone get me out of here!"); else Turntoward(player); say(player.name + " get me out of here!"); endif
		8:
			if (!player.name) say("Help!"); else Turntoward(player); say( player.name + " help!"); endif

	endcase

	case (randomInt( 6 ))  //random action
		1:
			PerformAction( me, 0x0006 ); //stammer
			sleep(3);
		2:
			PerformAction( me, 0x0005 ); //look around
			sleep(3);
		3:
			PerformAction( me, 0x00011 ); //spellcast upwards
			sleep(3);
	endcase



endfunction


function Setmeup()

	me.gender := RandomInt(2);
	me.graphic := 400 + me.gender;
	me.name := RandomName( me );
	me.title_suffix := " the Prisoner";

	if (!me.backpack)
		var newbackpack := CreateItemAtLocation(me.x, me.y, me.z, 0xe75,1);
		if (!EquipItem(me, newbackpack)) DestroyItem(newbackpack); endif
	endif

	if (GetObjProperty(me,"equipt"))
		Habille( me, GetObjProperty(me,"equipt") );
	endif

	if (!me.gender)
		var beard := 0;
		case (RandomInt(10))
			1:	beard := 0x203e;//longbeard
			2:	beard := 0x203f;//shorbeard
			3:	beard := 0x204b;//shortbeardnstache
			4:	beard := 0x204c;//longbeardnstache
			5:	beard := 0x204b;//shortbeardnstache
		endcase
		if (beard)
			CreateAndEquip(me,beard,(RandomInt(46)+1102));
		endif
	endif

	case (RandomInt(4))
		0:	CreateAndEquip(me,0x153F,RandomInt(54)+1301);		//Bandana
		1:	CreateAndEquip(me,0x1543,RandomInt(54)+1301);		//Skullcap
	endcase

	master := 0;

endfunction



function Wanderaroundlikeanidiot(ev, next_wander) //till all players are outa site

	if (ev)
		case (ev.type)
			EVID_SPEECH:
				next_wander := ReadGameClock()+10;
				var evtext := lower(ev.text);
				if ((evtext["hail"]))
					say("Hail " + ev.source.name + "!");
					TurnToward(ev.source);
				elseif ((evtext["prison"]) or (evtext["dungeon"]))
					say("Aye, I have been to one of those, dark, orrible places");
					TurnToward(ev.source);
				elseif ((evtext["savior"]) or (evtext["rescue"]) or (evtext["save"]))
					say("Aye! " + saviorname + " saved me from a prison. Praise " + saviorname + "!");
					TurnToward(ev.source);
				elseif ((evtext[saviorname]))
					say("Long Live " + saviorname + "!");
					TurnToward(ev.source);
				endif
			EVID_ENGAGED:
				say("Why do u wish to battle me? I was a prisoner once you know.");
			EVID_DAMAGED:
				next_wander := ReadGameClock()+20;
				say("Help! Guards! " + ev.source.name + " is attacking me!");
				flee(ev.source);
		endcase
	endif

	if (ReadGameClock() >= next_wander)
		next_wander := ReadGameClock()+25;
		wander();

		if (randomInt(20)=1)
			say("Long Live " + saviorname + "!");
		elseif (randomInt(300)=1)
			say("Long Live GM Scull!!");
		endif

		foreach critter in ListMobilesNearLocation( me.x,me.y,me.z, 14 )
			if (!critter.npctemplate) //must be a player
				return;
			endif
		endforeach

		say ("akk, I feel death coming upon me");
		RevokePrivilege( me, "invul" );
		setobjproperty(me, "guardkill", 1);
		Damage( me, me.hp );
	endif


endfunction



function EnableMainEvents()

    DisableEvents( EVID_DISENGAGED + EVID_OPPONENT_MOVED );
    EnableEvents( EVID_ENGAGED + EVID_DAMAGED );
    EnableEvents( EVID_ENTEREDAREA + EVID_LEFTAREA,MONSTERAVOID );

endfunction

function DisableMainEvents()

    DisableEvents( EVID_SPEECH + EVID_ENGAGED + EVID_DAMAGED + EVID_ENTEREDAREA + EVID_LEFTAREA);

endfunction

function CloseDistance( opponent )
    case Distance( me, opponent )
        1:              // the most likely, so first 
        0:
            return 1;
        default:
            RunToward( opponent );
            return 0;
    endcase
endfunction

function flee(opponent)

	EraseObjProperty(me,"killme");

	if ( (me.script = "immobile") or (me.script = "immobilespell") or (me.frozen) or (me.paralyzed) )
		sleep(1);
		return;
	endif

	var numflees := getobjproperty(me,"#flees");

	if (numflees)
		if ( numflees > 5 )
			MoveCharacterToLocation(me,5288,1176,0,MOVECHAR_FORCELOCATION);
			SetObjProperty(me,"guardkill",1);
			damage( me, me.maxhp + 3 );
		else
			numflees := numflees + 1;
		endif
	else
		numflees := 1;
	endif

	setobjproperty(me,"#flees",numflees);

	var runs := 0;
	var ev, sleepdelay;

	while ( (distance(me, opponent) < 10) and (runs < 25) )
	        sleepdelay := 300 - (CInt(me.dexterity) * 1.5);
  		if (sleepdelay < 0) sleepdelay := 0; endif
		runawayfrom(opponent);
		Sleepms(sleepdelay);

		runs := runs +1;
		ev := wait_for_event(0);
	endwhile

endfunction

function RandomItem()

	UnloadConfigFile( "::prisonreward" );

	var locationcfg := ReadConfigFile( "::prisonreward" );
	var elem := locationcfg[1];
	var rewardarray := GetConfigStringArray(elem , "itemid" );

	var splitter := splitwords(rewardarray[randomInt(len(rewardarray))+1]);
	var item := { };
	item[1] := cint(splitter[1]); //what it is
	item[2] := randomInt(cint(splitter[2]))+1; //how many

    return item;

endfunction

function CreateAndEquip(me,item,color)

	if (item)
		var theitem := CreateItemAtLocation(5288,1176, 0,item,1);
		if (theitem)
			if (EquipItem(me,theitem))
				theitem.color := color;
			else
				DestroyItem(theitem);
			endif
		endif
	endif

endfunction

function RescueFameMod(who)
    var savior := who;
    var points := 200;
    var fame := Cint(GetObjProperty(savior, "Fame"));
    var famegain := fame + points;
    SetObjProperty(savior, "Fame", famegain);
    var msgtext := "You have ";
    if(points < 0)
      msgtext := msgtext + "lost ";
      points := Abs(points);
    else
      msgtext := msgtext + "gained ";
    endif
    if(points > 150)
      msgtext := msgtext + "a great amount of ";
    elseif(points > 125)
      msgtext := msgtext + "alot of ";
    elseif(points > 75)
      msgtext := msgtext + "a good amount of ";
    elseif(points > 30)
      msgtext := msgtext + "some ";
    elseif(points > 0)
      msgtext := msgtext + "a little ";
    else
      return 0;
    endif
    msgtext := msgtext + "Fame.";
    SendSysMessage(savior, msgtext);
    var karma := Cint(GetObjProperty(savior, "Karma"));
    var kmod := GetKarmaLevel(Karma);
    var fmod := GetFameLevel(Famegain);
    var newtitle := nototitles[ (kmod) ];
    newtitle := "The " + CStr(newtitle[fmod]) + " ";
    if(newtitle["None"])
      newtitle := "";
    endif
    if(fmod == 5)
      if(savior.gender == 1)
        newtitle := newtitle + "Lady ";
      else
        newtitle := newtitle + "Lord ";
      endif
    endif
    if(newtitle != who.title_prefix)
      who.title_prefix := newtitle;
      SendSysMessage(savior, "you are now known as " + newtitle + savior.name);
    endif
    SetNotoTitle(savior, Karma, Fame);
endfunction
