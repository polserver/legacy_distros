use os;
use uo;
include "include/gumps";
include "include/client";
include "include/math";
include "include/attributes";


var skill;
var me;
var vet3;
var vet2;
var vet1;

var count_com;
var count_lor;
var	count_mis;
var	count_act;

program txtcmd_skill(who, text)
  if(text == "clear")
    EraseObjProperty(who, "skill");
    return;
  endif
        var pos;
		
	skill := GetObjProperty( who, "skill" );
	
	if(!skill)
	
	skill := array;
	
		for i := 1  to 50
		
		        pos := len(skill) + 1;
		          if(!pos)
		            pos := 1;
		          endif
			skill[pos] := 1;
			
		endfor
		
		SetObjProperty( who, "skill", skill );
		
	endif
	
	if ( !GetObjProperty(who, "#SkillGump") )
		SetObjProperty( who, "#SkillGump", 1 );
		gump_skillcap(who);
		EraseObjProperty( who, "#SkillGump");	
	endif
	
endprogram

function gump_skillcap( who )
	var total;
	var status,page;
	var gump := array;
        
        skill := GetObjProperty( who, "skill" );
	
	status := main(who);
	//sendsysmessage(who, "Status: " + status + "");
	page:=0;
	
	while(1)
	        //sendsysmessage(who, "Status: " + status + "");
		if( (status = 1025) and (page = 0) )
			status := mis1(who);
			page := 11;
		elseif (status = 0)
			break;
		elseif( (status = 1026) and (page = 0) )
			status := com1(who);
			page := 21;
		elseif( (status = 1027) and (page = 0) )
			status := act1(who);
			page := 31;
		elseif( (status = 1028) and (page = 0) )
			status := lor1(who);
			page := 41;
		elseif( (status = 1026) and (page = 11) )
			exchange("ALCHEMY");
			status := mis1(who);
			page := 11;
		elseif( (status = 1028) and (page = 11) )
			exchange("BLACKSMITHY");
			status := mis1(who);
			page := 11;
		elseif( (status = 1028) and (page = 99)  )
			break;
		elseif( (status = 1029) and (page != 99))
			break;
		elseif( (status = 1029) and (page = 99) )
			status := main(who);
			page := 0;
		elseif( (status = 1030) and (page = 0) )
			status := help(who);
			page := 99;
		elseif( (status = 1030) and (page = 11) )
			exchange("BOWCRAFT");
			status := mis1(who);
			page := 11;
		elseif( (status = 1032) and (page = 11) )
			exchange("CARPENTRY");
			status := mis1(who);
			page := 11;
		elseif( (status = 1034) and (page = 11) )
			exchange("COOKING");
			status := mis1(who);
			page := 11;
		elseif( (status = 1036) and (page = 11) )
			exchange("FISHING");
			status := mis1(who);
			page := 11;
		elseif( (status = 1037) and (page = 11) )
			status := main(who);
			page := 0;
		elseif( (status = 1038) and (page = 11) )
			status := mis2(who);
			page := 12;
		elseif( (status = 1039) and (page = 11) )
			status := main(who);
			page := 0;
		elseif( (status = 1040) and (page = 11) )
			break;
		elseif( (status = 1026) and (page = 12) )
			exchange("HEALING");
			status := mis2(who);
			page := 12;
		elseif( (status = 1028) and (page = 12) )
			exchange("HERDING");
			status := mis2(who);
			page := 12;
		elseif( (status = 1030) and (page = 12) )
			exchange("LOCKPICKING");
			status := mis2(who);
			page := 12;
		elseif( (status = 1032) and (page = 12) )
			exchange("LUMBERJACKING");
			status := mis2(who);
			page := 12;
		elseif( (status = 1034) and (page = 12) )
			exchange("MAGERY");
			status := mis2(who);
			page := 12;
		elseif( (status = 1036) and (page = 12) )
			exchange("MEDITATION");
			status := mis2(who);
			page := 12;
		elseif( (status = 1037) and (page = 12) )
			status := mis1(who);
			page := 11;
		elseif( (status = 1038) and (page = 12) )
			status := mis3(who);
			page := 13;
		elseif( (status = 1039) and (page = 12) )
			status := main(who);
			page := 0;
		elseif( (status = 1040) and (page = 12) )
			break;	
		elseif( (status = 1026) and (page = 13) )
			exchange("MINING");
			status := mis3(who);
			page := 13;
		elseif( (status = 1028) and (page = 13) )
			exchange("MUSICIANSHIP");
			status := mis3(who);
			page := 13;
		elseif( (status = 1030) and (page = 13) )
			exchange("REMOVETRAP");
			status := mis3(who);
			page := 13;
		elseif( (status = 1032) and (page = 13) )
			exchange("MAGICRESISTANCE");
			status := mis3(who);
			page := 13;
		elseif( (status = 1034) and (page = 13) )
			exchange("SNOOPING");
			status := mis3(who);
			page := 13;
		elseif( (status = 1036) and (page = 13) )
			exchange("STEALING");
			status := mis3(who);
			page := 13;
		elseif( (status = 1037) and (page = 13) )
			status := mis2(who);
			page := 12;
		elseif( (status = 1038) and (page = 13) )
			status := mis4(who);
			page := 14;
		elseif( (status = 1039) and (page = 13) )
			status := main(who);
			page := 0;
		elseif( (status = 1040) and (page = 13) )
			break;
		elseif( (status = 1026) and (page = 14) )
			exchange("STEALTH");
			status := mis4(who);
			page := 14;
		elseif( (status = 1028) and (page = 14) )
			exchange("TAILORING");
			status := mis4(who);
			page := 14;
		elseif( (status = 1030) and (page = 14) )
			exchange("TINKERING");
			status := mis4(who);
			page := 14;
		elseif( (status = 1032) and (page = 14) )
			exchange("VETERINARY");
			status := mis4(who);
			page := 14;
		elseif( (status = 1033) and (page = 14) )
			status := mis3(who);
			page := 13;
		elseif( (status = 1034) and (page = 14) )
			status := mis1(who);
			page := 11;
		elseif( (status = 1035) and (page = 14) )
			status := main(who);
			page := 0;
		elseif( (status = 1036) and (page = 14) )
			break;
		elseif( (status = 1026) and (page = 21) )
			exchange("ARCHERY");
			status := com1(who);
			page := 21;
		elseif( (status = 1028) and (page = 21) )
			exchange("FENCING");
			status := com1(who);
			page := 21;
		elseif( (status = 1030) and (page = 21) )
			exchange("MACEFIGHTING");
			status := com1(who);
			page := 21;
		elseif( (status = 1032) and (page = 21) )
			exchange("BATTLE_DEFENSE");
			status := com1(who);
			page := 21;
		elseif( (status = 1034) and (page = 21) )
			exchange("SWORDSMANSHIP");
			status := com1(who);
			page := 21;
		elseif( (status = 1036) and (page = 21) )
			exchange("TACTICS");
			status := com1(who);
			page := 21;
		elseif( (status = 1037) and (page = 21) )
			status := main(who);
			page := 0;
		elseif( (status = 1038) and (page = 21) )
			status := com2(who);
			page := 22;
		elseif( (status = 1039) and (page = 21) )
			status := main(who);
			page := 0;
		elseif( (status = 1040) and (page = 21) )
			break;
		elseif( (status = 1026) and (page = 22) )
			exchange("WRESTLING");
			status := com2(who);
			page := 22;
		elseif( (status = 1027) and (page = 22) )
			status := com1(who);
			page := 21;
		elseif( (status = 1028) and (page = 22) )
			status := main(who);
			page := 0;
		elseif( (status = 1029) and (page = 22) )
			status := main(who);
			page := 0;
		elseif( (status = 1030) and (page = 22) )
			break;	
		elseif( (status = 1026) and (page = 31) )
			exchange("TAMING");
			status := act1(who);
			page := 31;
		elseif( (status = 1028) and (page = 31) )
			exchange("BEGGING");
			status := act1(who);
			page := 31;
		elseif( (status = 1030) and (page = 31) )
			exchange("CAMPING");
			status := act1(who);
			page := 31;
		elseif( (status = 1032) and (page = 31) )
			exchange("CARTOGRAPHY");
			status := act1(who);
			page := 31;
		elseif( (status = 1034) and (page = 31) )
			exchange("DETECTINGHIDDEN");
			status := act1(who);
			page := 31;
		elseif( (status = 1036) and (page = 31) )
			exchange("ENTICEMENT");
			status := act1(who);
			page := 31;
		elseif( (status = 1037) and (page = 31) )
			status := main(who);
			page := 0;
		elseif( (status = 1038) and (page = 31) )
			status := act2(who);
			page := 32;
		elseif( (status = 1039) and (page = 31) )
			status := main(who);
			page := 0;
		elseif( (status = 1040) and (page = 31) )
			break;
		elseif( (status = 1026) and (page = 32) )
			exchange("HIDING");
			status := act2(who);
			page := 32;
		elseif( (status = 1028) and (page = 32) )
			exchange("INSCRIPTION");
			status := act2(who);
			page := 32;
		elseif( (status = 1030) and (page = 32) )
			exchange("PEACEMAKING");
			status := act2(who);
			page := 32;
		elseif( (status = 1032) and (page = 32) )
			exchange("POISONING");
			status := act2(who);
			page := 32;
		elseif( (status = 1034) and (page = 32) )
			exchange("PROVOCATION");
			status := act2(who);
			page := 32;
		elseif( (status = 1036) and (page = 32) )
			exchange("SPIRITSPEAK");
			status := act2(who);
			page := 32;
		elseif( (status = 1037) and (page = 32) )
			status := act1(who);
			page := 31;
		elseif( (status = 1038) and (page = 32) )
			status := act3(who);
			page := 33;
		elseif( (status = 1039) and (page = 32) )
			status := main(who);
			page := 0;
		elseif( (status = 1040) and (page = 32) )
			break;	
		elseif( (status = 1026) and (page = 33) )
			exchange("TRACKING");
			status := act3(who);
			page := 33;
		elseif( (status = 1027) and (page = 33) )
			status := act2(who);
			page := 32;
		elseif( (status = 1028) and (page = 33) )
			status := main(who);
			page := 0;
		elseif( (status = 1029) and (page = 33) )
			status := main(who);
			page := 0;
		elseif( (status = 1030) and (page = 33) )
			break;

		elseif( (status = 1026) and (page = 41) )
			exchange("ANATOMY");
			status := lor1(who);
			page := 41;
		elseif( (status = 1028) and (page = 41) )
			exchange("ANIMALLORE");
			status := lor1(who);
			page := 41;
		elseif( (status = 1030) and (page = 41) )
			exchange("ARMSLORE");
			status := lor1(who);
			page := 41;
		elseif( (status = 1032) and (page = 41) )
			exchange("EVALINT");
			status := lor1(who);
			page := 41;
		elseif( (status = 1034) and (page = 41) )
			exchange("FORENSICS");
			status := lor1(who);
			page := 41;
		elseif( (status = 1036) and (page = 41) )
			exchange("ITEMID");
			status := lor1(who);
			page := 41;
		elseif( (status = 1037) and (page = 41) )
			status := main(who);
			page := 0;
		elseif( (status = 1038) and (page = 41) )
			status := lor2(who);
			page := 42;
		elseif( (status = 1039) and (page = 41) )
			status := main(who);
			page := 0;
		elseif( (status = 1040) and (page = 41) )
			break;	
		elseif( (status = 1026) and (page = 42) )
			exchange("TASTEID");
			status := lor2(who);
			page := 42;
		elseif( (status = 1027) and (page = 42) )
			status := lor1(who);
			page := 41;
		elseif( (status = 1028) and (page = 42) )
			status := main(who);
			page := 0;
		elseif( (status = 1029) and (page = 42) )
			status := main(who);
			page := 0;
		elseif( (status = 1030) and (page = 42) )
			break;
		
		
		
		
		endif
		
		
		if (status = 0)
			break;
		endif
	endwhile

	make_skill(who);
	
endfunction

function skill_count( chr )
   
	var Alchemy;
	var Anatomy;
	var AnimalLore;
	var ItemId;
	var ArmsLore;
	var Parry;
	var Begging;
	var Blacksmithy;
	var Bowcraft;
	var Peacemaking;
	var Carpentry;
	var Cartography;
	var Cooking;
	var Enticement;
	var Healing;
	var Fishing;
	var Herding;
	var Hiding;
	var Provocation;
	var Inscription;
	var Lockpicking;
	var Magery;
	var MagicResistance;
	var Tactics;
	var Snooping;
	var Musicianship;
	var Poisoning;
	var Archery;
	var SpiritSpeak;
	var Stealing;
	var Tailoring;
	var AnimalTaming;
	var TasteIdentification;
	var Tracking;
	var Veterinary;
	var Swordsmanship;
   	var Macefighting;
   	var Fencing;
	var Wrestling;
	var Lumberjacking;
	var Mining;
	var Meditation;
	var Stealth;
	var RemoveTrap;
	var Camping;
	var DetectingHidden;
	var EvaluatingIntelligence;
	var Foresinc;
	var Tinker;
	
	
	Alchemy := ( GetAttributeBaseValue( chr, ATTRIBUTEID_ALCHEMY ) );
	Anatomy := ( GetAttributeBaseValue( chr, ATTRIBUTEID_ANATOMY ) );
	AnimalLore := ( GetAttributeBaseValue( chr, ATTRIBUTEID_ANIMALLORE ) );
	ItemId := ( GetAttributeBaseValue( chr, ATTRIBUTEID_ITEMID ) );
	ArmsLore := ( GetAttributeBaseValue( chr, ATTRIBUTEID_ARMSLORE ) );
	Parry := ( GetAttributeBaseValue( chr, ATTRIBUTEID_PARRY ) );
	Begging := ( GetAttributeBaseValue( chr, ATTRIBUTEID_BEGGING ) );
	Blacksmithy := ( GetAttributeBaseValue( chr, ATTRIBUTEID_BLACKSMITHY ) );
	Bowcraft := ( GetAttributeBaseValue( chr, ATTRIBUTEID_BOWCRAFT ) );
	Peacemaking := ( GetAttributeBaseValue( chr, ATTRIBUTEID_PEACEMAKING ) );
	Camping := ( GetAttributeBaseValue( chr, ATTRIBUTEID_CAMPING ) );
	Carpentry := ( GetAttributeBaseValue( chr, ATTRIBUTEID_CARPENTRY ) );
	Cartography := ( GetAttributeBaseValue( chr, ATTRIBUTEID_CARTOGRAPHY ) );
	Cooking := ( GetAttributeBaseValue( chr, ATTRIBUTEID_COOKING ) );
	DetectingHidden := ( GetAttributeBaseValue( chr, ATTRIBUTEID_DETECTINGHIDDEN ) );
	Enticement := ( GetAttributeBaseValue( chr, ATTRIBUTEID_ENTICEMENT ) );
	EvaluatingIntelligence := ( GetAttributeBaseValue( chr, ATTRIBUTEID_EVALINT ) );
	Healing := ( GetAttributeBaseValue( chr, ATTRIBUTEID_HEALING ) );
	Fishing := ( GetAttributeBaseValue( chr, ATTRIBUTEID_FISHING ) );
	Herding := ( GetAttributeBaseValue( chr, ATTRIBUTEID_HERDING ) );
	Hiding := ( GetAttributeBaseValue( chr, ATTRIBUTEID_HIDING ) );
	Provocation := ( GetAttributeBaseValue( chr, ATTRIBUTEID_PROVOCATION ) );
	Inscription := ( GetAttributeBaseValue( chr, ATTRIBUTEID_INSCRIPTION ) );
	Lockpicking := ( GetAttributeBaseValue( chr, ATTRIBUTEID_LOCKPICKING ) );
	Magery := ( GetAttributeBaseValue( chr, ATTRIBUTEID_MAGERY ) );
	MagicResistance := ( GetAttributeBaseValue( chr, ATTRIBUTEID_MAGICRESISTANCE ) );
	Tactics := ( GetAttributeBaseValue( chr, ATTRIBUTEID_TACTICS ) );
	Snooping := ( GetAttributeBaseValue( chr, ATTRIBUTEID_SNOOPING ) );
	Musicianship := ( GetAttributeBaseValue( chr, ATTRIBUTEID_MUSICIANSHIP ) );
	Poisoning := ( GetAttributeBaseValue( chr, ATTRIBUTEID_POISONING ) );
	Archery := ( GetAttributeBaseValue( chr, ATTRIBUTEID_ARCHERY ) );
	SpiritSpeak := ( GetAttributeBaseValue( chr, ATTRIBUTEID_SPIRITSPEAK ) );
	Stealing := ( GetAttributeBaseValue( chr, ATTRIBUTEID_STEALING ) );
	Tailoring := ( GetAttributeBaseValue( chr, ATTRIBUTEID_TAILORING ) );
	AnimalTaming := ( GetAttributeBaseValue( chr, ATTRIBUTEID_TAMING ) );
	TasteIdentification := ( GetAttributeBaseValue( chr, ATTRIBUTEID_TASTEID ) );
	Tracking := ( GetAttributeBaseValue( chr, ATTRIBUTEID_TRACKING ) );
	Veterinary := ( GetAttributeBaseValue( chr, ATTRIBUTEID_VETERINARY ) );
	Swordsmanship := ( GetAttributeBaseValue( chr, ATTRIBUTEID_SWORDSMANSHIP ) );
	Macefighting := ( GetAttributeBaseValue( chr, ATTRIBUTEID_MACEFIGHTING ) );
	Fencing := ( GetAttributeBaseValue( chr, ATTRIBUTEID_FENCING ) );
	Wrestling := ( GetAttributeBaseValue( chr, ATTRIBUTEID_WRESTLING ) );
	Lumberjacking := ( GetAttributeBaseValue( chr, ATTRIBUTEID_LUMBERJACKING ) );
	Mining := ( GetAttributeBaseValue( chr, ATTRIBUTEID_MINING ) );
	Meditation := ( GetAttributeBaseValue( chr, ATTRIBUTEID_MEDITATION ) );
	Stealth := ( GetAttributeBaseValue( chr, ATTRIBUTEID_STEALTH ) );
	RemoveTrap := ( GetAttributeBaseValue( chr, ATTRIBUTEID_REMOVETRAP ) );
	Foresinc := ( GetAttributeBaseValue( chr, ATTRIBUTEID_FORENSICS ) );
	Tinker := ( GetAttributeBaseValue( chr, ATTRIBUTEID_TINKERING ) );

	count_com := (Archery+Fencing+Macefighting+Parry+Swordsmanship+Tactics+Wrestling)/10;
	count_lor := (Anatomy+AnimalLore+ArmsLore+EvaluatingIntelligence+ItemId+TasteIdentification+Foresinc)/10;
	count_mis := (Alchemy+Blacksmithy+Bowcraft+Carpentry+Cooking+Fishing+Healing+Herding+Lockpicking+Lumberjacking+Magery+Meditation+Mining+Musicianship+RemoveTrap+MagicResistance+Snooping+Stealing+Stealth+Tailoring+Tinker+Veterinary)/10;
	count_act := (AnimalTaming+Begging+Camping+Cartography+DetectingHidden+Enticement+Hiding+Inscription+Peacemaking+Poisoning+Provocation+SpiritSpeak+Tracking)/10;

endfunction


function hfunc(num)

	if (num = 1) return cint(0x15e0); // up
	elseif (num = 2) return cint(0x15e2); // down
	else return 2092; // lock
	endif
endfunction

function skillprio(name)
	var num;
	
	num := skillnum(name);

	return hfunc(skill[num+1]);
endfunction

function exchange(name)
	var num;
	
	num := skillnum(name);
	if(skill[num+1]=0) skill[num+1]:=1;
	elseif (skill[num+1]=1) skill[num+1]:=2;
	else skill[num+1]:=0;
	endif	

	return 0;
endfunction

function skillnum(name)

	if (name="ALCHEMY") return 0;
	elseif (name="ANATOMY") return 1;
	elseif (name="ANIMALLORE") return 2; 
	elseif (name="ITEMID") return 3;
	elseif (name="ARMSLORE") return 4;
	elseif (name="BATTLE_DEFENSE") return 5;
	elseif (name="BEGGING") return 6;
	elseif (name="BLACKSMITHY") return 7;
	elseif (name="BOWCRAFT") return 8;	
	elseif (name="PEACEMAKING") return 9;
	elseif (name="CAMPING") return 10;
	elseif (name="CARPENTRY") return 11;
	elseif (name="CARTOGRAPHY") return 12;
	elseif (name="COOKING") return 13;
	elseif (name="DETECTINGHIDDEN") return 14;
	elseif (name="ENTICEMENT") return 15;
	elseif (name="EVALINT") return 16;
	elseif (name="HEALING") return 17;
	elseif (name="FISHING") return 18;
	elseif (name="FORENSICS") return 19;
	elseif (name="HERDING") return 20;
	elseif (name="HIDING") return 21;
	elseif (name="PROVOCATION") return 22;
	elseif (name="INSCRIPTION") return 23;
	elseif (name="LOCKPICKING") return 24;
	elseif (name="MAGERY") return 25;
	elseif (name="MAGICRESISTANCE") return 26;
	elseif (name="TACTICS") return 27;
	elseif (name="SNOOPING") return 28;
	elseif (name="MUSICIANSHIP") return 29;
	elseif (name="POISONING") return 30;
	elseif (name="ARCHERY") return 31;
	elseif (name="SPIRITSPEAK") return 32;
	elseif (name="STEALING") return 33;
	elseif (name="TAILORING") return 34;
	elseif (name="TAMING") return 35;
	elseif (name="TASTEID") return 36;
	elseif (name="TINKERING") return 37;
	elseif (name="TRACKING") return 38;
	elseif (name="VETERINARY") return 39;
	elseif (name="SWORDSMANSHIP") return 40;
	elseif (name="MACEFIGHTING") return 41;
	elseif (name="FENCING") return 42;
	elseif (name="WRESTLING") return 43;
	elseif (name="LUMBERJACKING") return 44;
	elseif (name="MINING") return 45;
	elseif (name="MEDITATION") return 46;
	elseif (name="STEALTH") return 47;
	elseif (name="REMOVETRAP") return 48;
	endif
endfunction

function make_skill(who)

	SetObjProperty( who.serial, "skill",skill );
	
endfunction

function main(who)
	var total :=0;
	var p1,p2,p3,p4,p5,p6;
        
        var skillbonus := GetObjProperty(who,"SkillBonus");
        var SKILLCAP := (700 + skillbonus);
        
	skill_count(who);

	GFInitGump();
	//GFSetRef( 50, 50 );
	//GFGumpPic( 0, 0, 0x007 );
	GFResizePic(0, 0, 2600, 350, 200);
	
	GFGumpPic(100, 18, 50);
	GFGumpPic(100, 28, 50);
	GFTextLine(105, 18, 5, "Skill Manager 1.0");
	
	GFTextLine( 65, 53, 55, "Miscellaneous" );
	GFTextLine( 220, 53, 5, count_mis );	
	GFButtonID( 40, 55, 0x845, 0x846, 1 );
    
	GFTextLine( 65, 73, 55, "Combat Ratings" );
	GFTextLine( 220, 73, 5, count_com );
	GFButtonID( 40, 75, 0x845, 0x846, 1 );
    
    
	GFTextLine( 65, 93, 55, "Actions" );
	GFTextLine( 220, 93, 5, count_act );		
	GFButtonID( 40, 95, 0x845, 0x846, 1 );

	GFTextLine( 65, 113, 55, "Lore & Knowledge" );
	GFTextLine( 220, 113, 5, count_lor );
	GFButtonID( 40, 115, 0x845, 0x846, 1 );
	
	
	total:=count_act+count_mis+count_com+count_lor;
	
	if(total > SKILLCAP)GFTextLine( 220, 133, 32, count_act+count_mis+count_com+count_lor );
	else GFTextLine( 220, 133, 71, count_act+count_mis+count_com+count_lor );
	endif
	
	GFTextLine( 40, 133, 55, "Actual cap :" );
	GFTextLine( 128, 133, 71, SKILLCAP );
	GFTextLine( 168, 133, 55, "Total :" );
	GFButtonID( 100, 160, 0x81c, 0x81b, 1 );//Okay
	GFButtonID( 160, 160, 0x844, 0x843, 1 );//Help
	
	var gump := GFSendGump(who);
	return gump[0];
endfunction

function mis1(who)
	var status;
	
	GFInitGump();
	//GFSetRef( 50, 50 );
	//GFGumpPic( 0, 0, 0x007 );
	GFResizePic(0, 0, 2600, 350, 200);
	
	GFGumpPic(100, 18, 50);
	GFGumpPic(100, 28, 50);
	GFTextLine(105, 18, 5, "Skill Manager 1.0");
	
	
	GFTextLine( 90, 35, 55, "Alchemy" );
	status := Skillprio("ALCHEMY");
	GFButtonID( 250, 40 , status, status, 0 );
	GFButtonID( 55, 37, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 55, 55, "Blacksmithy" );
	status := Skillprio("BLACKSMITHY");
	GFButtonID( 250, 60 , status, status, 0 );
	GFButtonID( 55, 57, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 75, 55, "Bowcraft" );
	status := Skillprio("BOWCRAFT");
	GFButtonID( 250, 80 , status, status, 0 );
	GFButtonID( 55, 77, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 95, 55, "Carpentry" );
	status := Skillprio("CARPENTRY");
	GFButtonID( 250, 100 , status, status, 0 );
	GFButtonID( 55, 97, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 115, 55, "Cooking" );
	status := Skillprio("COOKING");
	GFButtonID( 250, 120 ,status, status, 0 );
	GFButtonID( 55, 117, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 135, 55, "Fishing" );
	status := Skillprio("FISHING");
	GFButtonID( 250, 140 , status, status, 0 );
	GFButtonID( 55, 137, 0x845, 0x846, 1 );

	GFButtonID(50, 160, 0xfaf, 0xfb0, 1 );
	GFButtonID(275, 160, 0xfa6, 0xfa7, 1 );
	GFButtonID(50, 15, 0xfa9, 0xfaa, 1 );
	GFButtonID(275, 15, 0xfa3, 0xfa4, 1 );
	
	var gump := GFSendGump(who);
	return gump[0];
endfunction

function mis2(who)
	var status;
	
	GFInitGump();
	//GFSetRef( 50, 50 );
	//GFGumpPic( 0, 0, 0x007 );
	GFResizePic(0, 0, 2600, 350, 200);
	
	GFGumpPic(100, 18, 50);
	GFGumpPic(100, 28, 50);
	GFTextLine(105, 18, 5, "Skill Manager 1.0");
			
	GFTextLine( 90, 35, 55, "Healing" );
	status := Skillprio("HEALING");
	GFButtonID( 250, 40 , status, status, 0 );
	GFButtonID( 55, 37, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 55, 55, "Herding" );
	status := Skillprio("HERDING");
	GFButtonID( 250, 60 , status, status, 0 );
	GFButtonID( 55, 57, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 75, 55, "Lockpicking" );
	status := Skillprio("LOCKPICKING");
	GFButtonID( 250, 80 , status, status, 0 );
	GFButtonID( 55, 77, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 95, 55, "Lumberjacking" );
	status := Skillprio("LUMBERJACKING");
	GFButtonID( 250, 100 , status, status, 0 );
	GFButtonID( 55, 97, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 115, 55, "Magery" );
	status := Skillprio("MAGERY");
	GFButtonID( 250, 120 ,status, status, 0 );
	GFButtonID( 55, 117, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 135, 55, "Meditation" );
	status := Skillprio("MEDITATION");
	GFButtonID( 250, 140 , status, status, 0 );
	GFButtonID( 55, 137, 0x845, 0x846, 1 );

	GFButtonID(50, 160, 0xfaf, 0xfb0, 1 );
	GFButtonID(275, 160, 0xfa6, 0xfa7, 1 );
	GFButtonID(50, 15, 0xfa9, 0xfaa, 1 );
	GFButtonID(275, 15, 0xfa3, 0xfa4, 1 );

	var gump := GFSendGump(who);
	return gump[0];
endfunction

function mis3(who)
	var status;
	
	GFInitGump();
	//GFSetRef( 50, 50 );
	//GFGumpPic( 0, 0, 0x007 );
	GFResizePic(0, 0, 2600, 350, 200);
	
	GFGumpPic(100, 18, 50);
	GFGumpPic(100, 28, 50);
	GFTextLine(105, 18, 5, "Skill Manager 1.0");

	GFTextLine( 90, 35, 55, "Mining" );
	status := Skillprio("MINING");
	GFButtonID( 250, 40 , status, status, 0 );
	GFButtonID( 55, 37, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 55, 55, "Musicianship" );
	status := Skillprio("MUSICIANSHIP");
	GFButtonID( 250, 60 , status, status, 0 );
	GFButtonID( 55, 57, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 75, 55, "Remove trap" );
	status := Skillprio("REMOVETRAP");
	GFButtonID( 250, 80 , status, status, 0 );
	GFButtonID( 55, 77, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 95, 55, "Resisting Spell" );
	status := Skillprio("MAGICRESISTANCE");
	GFButtonID( 250, 100 , status, status, 0 );
	GFButtonID( 55, 97, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 115, 55, "Snooping" );
	status := Skillprio("SNOOPING");
	GFButtonID( 250, 120 ,status, status, 0 );
	GFButtonID( 55, 117, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 135, 55, "Stealing" );
	status := Skillprio("STEALING");
	GFButtonID( 250, 140 , status, status, 0 );
	GFButtonID( 55, 137, 0x845, 0x846, 1 );


	GFButtonID(50, 160, 0xfaf, 0xfb0, 1 );
	GFButtonID(275, 160, 0xfa6, 0xfa7, 1 );
	GFButtonID(50, 15, 0xfa9, 0xfaa, 1 );
	GFButtonID(275, 15, 0xfa3, 0xfa4, 1 );

	var gump := GFSendGump(who);
	return gump[0];
endfunction

function mis4(who)
	var status;
	
	GFInitGump();
	//GFSetRef( 50, 50 );
	//GFGumpPic( 0, 0, 0x007 );
	GFResizePic(0, 0, 2600, 350, 200);
	
	GFGumpPic(100, 18, 50);
	GFGumpPic(100, 28, 50);
	GFTextLine(105, 18, 5, "Skill Manager 1.0");

	GFTextLine( 90, 35, 55, "Stealth" );
	status := Skillprio("STEALTH");
	GFButtonID( 250, 40 , status, status, 0 );
	GFButtonID( 55, 37, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 55, 55, "Tailoring" );
	status := Skillprio("TAILORING");
	GFButtonID( 250, 60 , status, status, 0 );
	GFButtonID( 55, 57, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 75, 55, "Tinkering" );
	status := Skillprio("TINKERING");
	GFButtonID( 250, 80 , status, status, 0 );
	GFButtonID( 55, 77, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 95, 55, "Veterinary" );
	status := Skillprio("VETERINARY");
	GFButtonID( 250, 100 , status, status, 0 );
	GFButtonID( 55, 97, 0x845, 0x846, 1 );
	
	GFButtonID(50, 160, 0xfaf, 0xfb0, 1 );
	GFButtonID(275, 160, 0xfa6, 0xfa7, 1 );
	GFButtonID(50, 15, 0xfa9, 0xfaa, 1 );
	GFButtonID(275, 15, 0xfa3, 0xfa4, 1 );

	var gump := GFSendGump(who);
	return gump[0];
endfunction

function com1(who)
	var status;
	
	GFInitGump();
	//GFSetRef( 50, 50 );
	//GFGumpPic( 0, 0, 0x007 );
	GFResizePic(0, 0, 2600, 350, 200);
	
	GFGumpPic(100, 18, 50);
	GFGumpPic(100, 28, 50);
	GFTextLine(105, 18, 5, "Skill Manager 1.0");
	
	GFTextLine( 90, 35, 55, "Archery" );
	status := Skillprio("ARCHERY");
	GFButtonID( 250, 40 , status, status, 0 );
	GFButtonID( 55, 37, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 55, 55, "Fencing" );
	status := Skillprio("FENCING");
	GFButtonID( 250, 60 , status, status, 0 );
	GFButtonID( 55, 57, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 75, 55, "Mace fighting" );
	status := Skillprio("MACEFIGHTING");
	GFButtonID( 250, 80 , status, status, 0 );
	GFButtonID( 55, 77, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 95, 55, "Parrying" );
	status := Skillprio("BATTLE_DEFENSE");
	GFButtonID( 250, 100 , status, status, 0 );
	GFButtonID( 55, 97, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 115, 55, "Swordsmanship" );
	status := Skillprio("SWORDSMANSHIP");
	GFButtonID( 250, 120 ,status, status, 0 );
	GFButtonID( 55, 117, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 135, 55, "Tactics" );
	status := Skillprio("TACTICS");
	GFButtonID( 250, 140 , status, status, 0 );
	GFButtonID( 55, 137, 0x845, 0x846, 1 );

	GFButtonID(50, 160, 0xfaf, 0xfb0, 1 );
	GFButtonID(275, 160, 0xfa6, 0xfa7, 1 );
	GFButtonID(50, 15, 0xfa9, 0xfaa, 1 );
	GFButtonID(275, 15, 0xfa3, 0xfa4, 1 );
	
	var gump := GFSendGump(who);
	return gump[0];
endfunction

function com2(who)
	var status;
	
	GFInitGump();
	//GFSetRef( 50, 50 );
	//GFGumpPic( 0, 0, 0x007 );
	GFResizePic(0, 0, 2600, 350, 200);
	
	GFGumpPic(100, 18, 50);
	GFGumpPic(100, 28, 50);
	GFTextLine(105, 18, 5, "Skill Manager 1.0");
	
	GFTextLine( 90, 35, 55, "Wrestling" );
	status := Skillprio("WRESTLING");
	GFButtonID( 250, 40 , status, status, 0 );
	GFButtonID( 55, 37, 0x845, 0x846, 1 );

	GFButtonID(50, 160, 0xfaf, 0xfb0, 1 );
	GFButtonID(275, 160, 0xfa6, 0xfa7, 1 );
	GFButtonID(50, 15, 0xfa9, 0xfaa, 1 );
	GFButtonID(275, 15, 0xfa3, 0xfa4, 1 );
	
	var gump := GFSendGump(who);
	return gump[0];
endfunction

function act1(who)
	var status;
	
	GFInitGump();
	//GFSetRef( 50, 50 );
	//GFGumpPic( 0, 0, 0x007 );
	GFResizePic(0, 0, 2600, 350, 200);
	
	GFGumpPic(100, 18, 50);
	GFGumpPic(100, 28, 50);
	GFTextLine(105, 18, 5, "Skill Manager 1.0");
	
	GFTextLine( 90, 35, 55, "Animal Taming" );
	status := Skillprio("TAMING");
	GFButtonID( 250, 40 , status, status, 0 );
	GFButtonID( 55, 37, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 55, 55, "Begging" );
	status := Skillprio("BEGGING");
	GFButtonID( 250, 60 , status, status, 0 );
	GFButtonID( 55, 57, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 75, 55, "Camping" );
	status := Skillprio("CAMPING");
	GFButtonID( 250, 80 , status, status, 0 );
	GFButtonID( 55, 77, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 95, 55, "Cartography" );
	status := Skillprio("CARTOGRAPHY");
	GFButtonID( 250, 100 , status, status, 0 );
	GFButtonID( 55, 97, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 115, 55, "Detecting hidden" );
	status := Skillprio("DETECTINGHIDDEN");
	GFButtonID( 250, 120 ,status, status, 0 );
	GFButtonID( 55, 117, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 135, 55, "Enticement" );
	status := Skillprio("ENTICEMENT");
	GFButtonID( 250, 140 , status, status, 0 );
	GFButtonID( 55, 137, 0x845, 0x846, 1 );

	GFButtonID(50, 160, 0xfaf, 0xfb0, 1 );
	GFButtonID(275, 160, 0xfa6, 0xfa7, 1 );
	GFButtonID(50, 15, 0xfa9, 0xfaa, 1 );
	GFButtonID(275, 15, 0xfa3, 0xfa4, 1 );
	
	var gump := GFSendGump(who);
	return gump[0];
endfunction

function act2(who)
	var status;
	
	GFInitGump();
	//GFSetRef( 50, 50 );
	//GFGumpPic( 0, 0, 0x007 );
	GFResizePic(0, 0, 2600, 350, 200);
	
	GFGumpPic(100, 18, 50);
	GFGumpPic(100, 28, 50);
	GFTextLine(105, 18, 5, "Skill Manager 1.0");
			
	GFTextLine( 90, 35, 55, "Hiding" );
	status := Skillprio("HIDING");
	GFButtonID( 250, 40 , status, status, 0 );
	GFButtonID( 55, 37, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 55, 55, "Inscription" );
	status := Skillprio("INSCRIPTION");
	GFButtonID( 250, 60 , status, status, 0 );
	GFButtonID( 55, 57, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 75, 55, "Peacemaking" );
	status := Skillprio("PEACEMAKING");
	GFButtonID( 250, 80 , status, status, 0 );
	GFButtonID( 55, 77, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 95, 55, "Poisoning" );
	status := Skillprio("POISONING");
	GFButtonID( 250, 100 , status, status, 0 );
	GFButtonID( 55, 97, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 115, 55, "Provocation" );
	status := Skillprio("PROVOCATION");
	GFButtonID( 250, 120 ,status, status, 0 );
	GFButtonID( 55, 117, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 135, 55, "Spirit Speak" );
	status := Skillprio("SPIRITSPEAK");
	GFButtonID( 250, 140 , status, status, 0 );
	GFButtonID( 55, 137, 0x845, 0x846, 1 );

	GFButtonID(50, 160, 0xfaf, 0xfb0, 1 );
	GFButtonID(275, 160, 0xfa6, 0xfa7, 1 );
	GFButtonID(50, 15, 0xfa9, 0xfaa, 1 );
	GFButtonID(275, 15, 0xfa3, 0xfa4, 1 );

	var gump := GFSendGump(who);
	return gump[0];
endfunction

function act3(who)
	var status;
	
	GFInitGump();
	//GFSetRef( 50, 50 );
	//GFGumpPic( 0, 0, 0x007 );
	GFResizePic(0, 0, 2600, 350, 200);
	
	GFGumpPic(100, 18, 50);
	GFGumpPic(100, 28, 50);
	GFTextLine(105, 18, 5, "Skill Manager 1.0");
	
	GFTextLine( 90, 35, 55, "Tracking" );
	status := Skillprio("TRACKING");
	GFButtonID( 250, 40 , status, status, 0 );
	GFButtonID( 55, 37, 0x845, 0x846, 1 );

	GFButtonID(50, 160, 0xfaf, 0xfb0, 1 );
	GFButtonID(275, 160, 0xfa6, 0xfa7, 1 );
	GFButtonID(50, 15, 0xfa9, 0xfaa, 1 );
	GFButtonID(275, 15, 0xfa3, 0xfa4, 1 );
	
	var gump := GFSendGump(who);
	return gump[0];
endfunction

function lor1(who)
	var status;
	
	GFInitGump();
	//GFSetRef( 50, 50 );
	//GFGumpPic( 0, 0, 0x007 );
	GFResizePic(0, 0, 2600, 350, 200);
	
	GFGumpPic(100, 18, 50);
	GFGumpPic(100, 28, 50);
	GFTextLine(105, 18, 5, "Skill Manager 1.0");
	
	GFTextLine( 90, 35, 55, "Anatomy" );
	status := Skillprio("ANATOMY");
	GFButtonID( 250, 40 , status, status, 0 );
	GFButtonID( 55, 37, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 55, 55, "Animal Lore" );
	status := Skillprio("ANIMALLORE");
	GFButtonID( 250, 60 , status, status, 0 );
	GFButtonID( 55, 57, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 75, 55, "Arms Lore" );
	status := Skillprio("ARMSLORE");
	GFButtonID( 250, 80 , status, status, 0 );
	GFButtonID( 55, 77, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 95, 55, "Evaluating Intelligence" );
	status := Skillprio("EVALINT");
	GFButtonID( 250, 100 , status, status, 0 );
	GFButtonID( 55, 97, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 115, 55, "Forensic" );
	status := Skillprio("FORENSICS");
	GFButtonID( 250, 120 ,status, status, 0 );
	GFButtonID( 55, 117, 0x845, 0x846, 1 );
	
	GFTextLine( 90, 135, 55, "Item Identification" );
	status := Skillprio("ITEMID");
	GFButtonID( 250, 140 , status, status, 0 );
	GFButtonID( 55, 137, 0x845, 0x846, 1 );

	GFButtonID(50, 160, 0xfaf, 0xfb0, 1 );
	GFButtonID(275, 160, 0xfa6, 0xfa7, 1 );
	GFButtonID(50, 15, 0xfa9, 0xfaa, 1 );
	GFButtonID(275, 15, 0xfa3, 0xfa4, 1 );
	
	var gump := GFSendGump(who);
	return gump[0];
endfunction

function lor2(who)
	var status;
	
	GFInitGump();
	//GFSetRef( 50, 50 );
	//GFGumpPic( 0, 0, 0x007 );
	GFResizePic(0, 0, 2600, 350, 200);
	
	GFGumpPic(100, 18, 50);
	GFGumpPic(100, 28, 50);
	GFTextLine(105, 18, 5, "Skill Manager 1.0");
	
	GFTextLine( 90, 35, 55, "Taste Identification" );
	status := Skillprio("TASTEID");
	GFButtonID( 250, 40 , status, status, 0 );
	GFButtonID( 55, 37, 0x845, 0x846, 1 );

	GFButtonID(50, 160, 0xfaf, 0xfb0, 1 );
	GFButtonID(275, 160, 0xfa6, 0xfa7, 1 );
	GFButtonID(50, 15, 0xfa9, 0xfaa, 1 );
	GFButtonID(275, 15, 0xfa3, 0xfa4, 1 );
	
	var gump := GFSendGump(who);
	return gump[0];
endfunction

function help(who)

	GFInitGump();
	//GFSetRef( 50, 50 );
	//GFGumpPic( 0, 0, 0x007 );
	GFResizePic(0, 0, 2600, 350, 430);
	
	GFGumpPic(100, 18, 50);
	GFGumpPic(100, 28, 50);
	GFTextLine(105, 18, 5, "Skill Manager 1.0");
	
	GFTextLine( 35, 53, 55, "This command is designed for an easily" );
	GFTextLine( 35, 68, 55, "management of your skills." );
	GFTextLine( 35, 83, 55, "You can set every single skill in 3 " );
        GFTextLine( 35, 98, 55, "different status :" );
        GFButtonID( 35, 125 , cint(0x15e0), cint(0x15e0), 0 );//Up
        GFTextLine( 60, 122, 5, "UP" );
        GFTextLine( 35, 140, 55, "- To let your skill grow normally." );
	GFButtonID( 35, 165 , 2092, 2092, 0 );//Lock
	GFTextLine( 60, 162, 5, "LOCKED" );
	GFTextLine( 35, 180, 55, "- To lock your skill, no gain but " );
	GFTextLine( 35, 195, 55, "  no lower at the skillcap." );
	GFButtonID( 35, 220 , cint(0x15e2), cint(0x15e2), 0 );//Down
	GFTextLine( 60, 218, 5, "DOWN" );
	GFTextLine( 35, 236, 55, "- To lower your skill when you hit " );
	GFTextLine( 35, 251, 55, "  the skill cap(-1%)." );
	GFTextLine( 35, 280, 55, "Remember that if you hit the cap without" );
        GFTextLine( 35, 295, 55, "any skill DOWN,the skillcap will lower" );
        GFTextLine( 35, 310, 55, "all your skill (any status they have)" );
        GFTextLine( 35, 325, 55, "proportionally. Also if the skills DOWN" );
        GFTextLine( 35, 340, 55, "aren't enough to go under the skillcap the " );
        GFTextLine( 35, 355, 55, "system will lower them and get the rest" );
        GFTextLine( 35, 370, 55, "from the others proportionally." );
        
        
        
	GFButtonID( 100, 390, 0x81c, 0x81b, 1 );//Okay
	GFButtonID( 160, 390, 0x914, 0x913, 1 );//Help
	
	var gump := GFSendGump(who);
	return gump[0];
endfunction
