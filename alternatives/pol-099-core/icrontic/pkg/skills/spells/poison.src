use os;
use uo;
use cfgfile;

include "include/spellRestrictions";
include "include/attributes";

program cast_poison(parms)
  var circle := 3;
  var delivery := "direct";
  var noto := "harmful";
  var result := maincast(parms, delivery, circle, noto, 20);
  if(result == 0)
    return;
  endif
  var caster := result[1];
  var cast_on := result[2];
  if((!GetStrength(cast_on)) || (cast_on.dead))
    SendSysMessage(caster, "You cannot poison that.");
    return;
  endif
  SetObjProperty(cast_on, "LastHit", {caster.name,caster.serial, "poison spell" });
  if(Reflected(cast_on))
	cast_on := caster;
  endif
  PlaySoundEffect(cast_on, 0x206);
  PlayObjectCenteredEffect(cast_on, FX_CURSE_EFFECT, 0x0a,0x1e);
  if(cast_on.dead)
    return;
  endif
  var p_level :=  0;
  var skil := GetEffectiveSkill(caster, SKILLID_POISONING);
  if(skil <= 55)
    p_level := 1;
  elseif(skil <= 70)
    p_level := 2;
  elseif(skil < 100)
    p_level := 3;
  else
    p_level := 4;
  endif
  var poison_level := CInt(GetObjProperty(cast_on, "poison_level"));
  var passparms := { cast_on, caster, "poison spell" };
  var newamt;
  if(cast_on.isA(POLCLASS_NPC))
    var element := npccfg[cast_on.npctemplate].elemental;
    if(element == "poison")
      HealDamage(cast_on, (p_level * 50));
    else
      newamt := poisonresist(circle, caster, cast_on, p_level);
      if(newamt > 0)
        SetObjProperty(cast_on, "poison_level", newamt);
        SendSysMessage(cast_on, "You have been poisoned by " + caster.name +"!");
        Detach();
        SetObjProperty(cast_on,"PoisonStamp", ReadGameClock());
        start_script(":spells:poisonDamage", passparms);
        SetObjProperty(cast_on, "LastHit", {caster.name, caster.serial, "poisonspell" });
      endif
    endif
  else
    newamt := poisonresist(circle, caster, cast_on, p_level);
    if(!randomint(p_level))
      p_level := p_level - 1;
    endif
    if(newamt > 0)
      SetObjProperty(cast_on, "poison_level", newamt);
      SendSysMessage(cast_on, "You have been poisoned by " + caster.name +"!");
      Detach();
      SetObjProperty(cast_on,"PoisonStamp", ReadGameClock());
      start_script(":spells:poisonDamage", passparms);
      SetObjProperty(cast_on, "LastHit", {caster.name, caster.serial, "poison spell" });
    endif
  endif
endprogram

function poisonresist(circle, caster, cast_on, amt)
  var magery := CInt(GetEffectiveSkill(caster, SKILLID_MAGERY));
  var evalint := CInt(GetEffectiveSkill(caster, SKILLID_EVALINT));
  var resist := CInt(GetEffectiveSkill(cast_on, SKILLID_MAGICRESISTANCE));
  var chk1 := (resist / 5);
  var chk2 := resist - (((magery - 20) / 5) + (circle * 5));
  if(chk1 < 1)
    chk1 := 1;
  endif
  if(chk2 < 1)
    chk2 := 1;
  endif
  var diff := 0;
  if(chk1 > chk2)
    diff := chk1;
  else
    diff := chk2;
  endif
  var points := getResistForPoison(circle, cast_on, SKILLID_MAGICRESISTANCE);
  if(cast_on.dead)
    return 0;
  endif
  if((RandomInt(99) + 1) <= diff)
    SendSysMessage(cast_on, "You feel yourself resisting magical energy!");
    PlaySoundEffect(cast_on, SFX_SPELL_WEAKEN);
    PlayObjectCenteredEffect(cast_on, FX_CURSE_EFFECT, 5,5);
    AwardRawSkillPoints(cast_on, SKILLID_MAGICRESISTANCE, points);
    amt := (amt * 0.5);
    if(amt < 1)
      amt := 1;
    endif
  endif
  amt := resistclothing (cast_on, amt);
  var modamt := 1;
  amt := (amt * modamt);
  if(amt > 4)
    amt := 4;
  endif
  return CInt(amt);

endfunction

function getResistForPoison (c, victim, skillid)
  var points;
  var diff;
  case(c)
    1:   points :=  20; diff := 20;
    2:   points :=  40; diff := 30;
    3:   points := 140; diff := 40;
    4:   points := 100; diff := 50;
    5:   points := 120; diff := 60;
    6:   points := 140; diff := 70;
    7:   points := 160; diff := 86;
    8:   points := 180; diff := 100;
  endcase
  var skill := GetEffectiveSkill(victim, skillid);
  if(skill > (diff - 20))
    if((skill - diff) <= 5)
      points := points;
    elseif((skill - diff) <= 10)
      points := (points * 3) / 4;
    elseif((skill - diff) <= 15)
      points := points / 2;
    elseif((skill - diff) <= 15)
      points := points / 4;
    else
      points := 0;
    endif
  endif
  return points;
endfunction
