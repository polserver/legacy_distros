use uo;
use basic;
use os;

include "include/client";
include "include/attributes";
include "include/skillPoints";
include "include/packets";

LISTEX_FLAG_HIDDEN := 0x02;

program track(who)
  EraseObjProperty(who, "IsMeditating");
  EraseObjProperty(who, "HealTimer");
  UnloadConfigFile(":tracking:tracking");
  if(CheckSkill(who, SKILLID_TRACKING, -1, (GetEffectiveSkill(who, SKILLID_TRACKING) + 30)))
    var tracker := ReadGameClock();
    var holder := 0;
    SetObjProperty(who, "TrackingCounter", tracker);
    var range := CInt((GetEffectiveSkill(who, SKILLID_TRACKING)/3));
    var nearby := ListMobilesNearLocation(who.x, who.y, who.z, range);
    if(len(nearby) == 1)
      SendSysMessage(who, "There don't seem to be any creatures nearby");
      return;
    endif
    var track_list := CreateMenu("Select a category.");
    var track_menu := CreateMenu("Select a creature.");
    var critter_ids := array;
    var menucount := 0;
    var config := ReadConfigFile("tracking");
    var typearray := {};
    var animal, creature, mount, person, player, tiletype;
    if (GetEffectiveSkill(who, SKILLID_TRACKING) >= 100)
      var rangehide := CInt((GetEffectiveSkill(who, SKILLID_TRACKING)/4));
      foreach mobile in ListMobilesNearLocationEx(who.x, who.y, who.z, rangehide, LISTEX_FLAG_NORMAL + LISTEX_FLAG_HIDDEN);
        if(mobile.hidden == 1)
          mobile.hidden := 0;
          holder := holder + 1;
          PrintTextAbovePrivate( mobile, "You have been tracked down!", mobile );
        endif
      endforeach
      if(holder >= 1)
        PrintTextAbovePrivate(who, "You have found traces of something.", who);
      endif
    endif
    foreach mobile in nearby
      if((mobile != who) && (!mobile.dead) && !mobile.acctname)
        var elem := FindConfigElem(config, mobile.graphic);
        if(elem)
          tiletype := GetConfigString(elem, "type");
          case(tiletype)
            "Animal"  : animal   := 1;
            "Monster" : creature := 1;
            "Mount"   : mount    := 1;
            "Person"  : person   := 1;
          endcase
        endif
      elseif((mobile != who) && (!mobile.dead) && mobile.acctname)
        var elem := FindConfigElem(config, mobile.graphic);
        if(elem)
          tiletype := GetConfigString(elem, "type");
          if(mobile.acctname)
            tiletype := "Player";
          endif
          case(tiletype)
            "Animal"  : animal   := 1;
            "Monster" : creature := 1;
            "Mount"   : mount    := 1;
            "Person"  : person   := 1;
            "Player"  : player   := 1;
          endcase
        endif
      endif
    endforeach
    if(animal == 1)
      AddMenuItem(track_list, 0x20cf, "Animals");
    endif
    if(creature == 1)
      AddMenuItem(track_list, 0x20d9, "Creatures");
    endif
    if(mount == 1)
      AddMenuItem(track_list, 0x211f, "Mounts");
    endif
    if(person == 1)
      AddMenuItem(track_list, 0x2008, "People");
    endif
    if(player == 1)
      AddMenuItem(track_list, 0x2009, "Players");
    endif
    var thetarget := SelectMenuItem2(who, track_list);
    var listtype := {};
    case(thetarget[1])
      8200: listtype := "Person";
      8399: listtype := "Animal";
      8409: listtype := "Monster";
      8479: listtype := "Mount";
      8201: listtype := "Player";
    endcase
    var ttype;
    foreach mobile in nearby
      if((mobile != who) && (!mobile.dead))
        var elem := FindConfigElem(config, mobile.graphic);
        if(elem && mobile.acctname)
          ttype := "Player";
        elseif(elem && !mobile.acctname)
          ttype := GetConfigString(elem, "type");
        endif
        if(ttype == listtype)
          menucount := menucount + 1;
          critter_ids[menucount] := mobile;
          tiletype := GetConfigInt(elem, "tile");
          AddMenuItem(track_menu, tiletype, mobile.name);
        endif
      endif
    endforeach
    if(menucount > 0)
      thetarget := SelectMenuItem2(who, track_menu);
      if(!thetarget)
        SendSysMessage(who, "Targetting cancelled.");
        return;
      endif
      var critter := critter_ids[thetarget.index];
      SetObjProperty( who, "#trackingtimeout", ReadGameClock()+40 );
      Detach();
      var timer := 0;
      while((Distance(who, critter) <= range) && (critter.dead == 0) && (timer <= 12)&& (tracker == GetObjProperty(who,"TrackingCounter")))
        timer := timer + 1;
        var dir := Get_direction(who, critter);
        if(dir == "nearby")
          SendSysMessage(who, critter.name + " is " + dir);
        else
          SendSysMessage(who, critter.name + " is to the " + dir);
        endif
        sleep(3);
      endwhile
      SendSysMessage(who, "You have lost your quarry.");
      SetQuestArrow( who, 0, 0, 0 );
      EraseObjProperty(who, "#trackingtimeout");
    endif
  else
    SendSysMessage(who, "You fail to find any creatures nearby");
  endif
endprogram

function Get_direction(who, critter)
  var ns_desc := "";
  var ew_desc := "";
  var thedesc;
  var quarryx := critter.x;
  var quarryy := critter.y;
  if(critter.y < who.y)
    ns_desc := "north";
  elseif(critter.y > who.y)
    ns_desc := "south";
  endif
  if(critter.x < who.x)
    ew_desc := "west";
  elseif(critter.x > who.x)
    ew_desc := "east";
  endif
  if(ns_desc == "" && ew_desc == "")
    thedesc := "nearby";
  else
    thedesc := ns_desc + ew_desc;
  endif
  SetQuestArrow( who, 1, quarryx, quarryy);
  return thedesc;
endfunction
