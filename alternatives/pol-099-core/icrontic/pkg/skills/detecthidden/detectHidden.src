use uo;
use os;
use util;
use cfgfile;

include "include/client";
include "include/attributes";
include "include/listex";
include "include/skillPoints";
include "include/objtype";

var thepoints;
var item_cfg;

const FX_POISON_GAS := 0x113a;
const TRAP := "hiddentrap";

program detect_hidden ( who )
  EraseObjProperty(who, "IsMeditating");
  EraseObjProperty(who, "HealTimer");
    thepoints := get_default_points(SKILLID_DETECTINGHIDDEN );
    item_cfg := ReadConfigFile( "::itemdesc" );
    SendSysMessage(who,"Checking the area for hidden *things*");
    var targ := who;
    var range := getDetectRange( GetEffectiveSkill( who, SKILLID_DETECTINGHIDDEN  ) );
    var hiders := ListMobilesNearLocationEx( cint(targ.x), cint(targ.y), cint(targ.z), range, LIST_HIDDEN );
    var items  := ListItemsNearLocation( cint(targ.x), cint(targ.y), cint(targ.z), range );
    var elem;
    var data;
    var prop;
    var dtct;
    var skil;
    var foundany := 0;
    foreach mobile in hiders
      if( Found( who,  mobile) )
        mobile.hidden := 0;
        foundany := 1;
        PrintTextAbovePrivate( mobile, "You have been discovered!", mobile );
        PrintTextAbovePrivate( mobile, "You have found someone!!", who );
      endif
      disguiseCheck (who, mobile);
    endforeach
    if (!foundany)
      SendSysMessage( who, "You didn't find anyone." );
    endif

    if((GetEffectiveSkill(who, SKILLID_DETECTINGHIDDEN)) >= 100);
      foreach mobile in ListMobilesNearLocation( cint(targ.x), cint(targ.y), cint(targ.z), range);
        disguiseCheck (who, mobile);
      endforeach
    endif
    
    foreach item in items
	 elem := FindConfigElem( item_cfg, item.objtype );
     data := GetConfigString( elem, "WalkOnScript" );
     prop := GetObjProperty(item,"trap_type");
	 dtct := GetObjProperty(item, "trapped");
     var trapstrength := GetObjProperty(item,"trap_strength");
     thepoints := trapstrength *5;
	 if( dtct )
        if(CheckSkill( who, SKILLID_DETECTINGHIDDEN, -1, thepoints ))
	      PrintTextAbovePrivate( item, "*Trapped*", who);
        else
          var results := RandomInt(9) + 1;
          if (results < 4) // critical failure
            case (prop)
              "1" :   PlaySoundEffect(who, SFX_224);
                      var dmg := (RandomInt(20) + CInt(trapstrength));
                      SendSysMessage(who, "You set off a needle trap!");
                      ApplyDamage(who, dmg);
                      item.usescript := "";
		              EraseObjProperty( item, "trap_type" );
		              EraseObjProperty( item, "trap_strength" );
              "2" :   PlaySoundEffect(who, SFX_232);
                      PrintTextAbovePrivate(who, "You set off a poison trap!", who);
                      PlayStationaryEffect( item.x, item.y, item.z, FX_POISON_GAS, 10,10);
                      var plevel := CInt(GetObjProperty(who, "poison_level"));
                      var poisoned := GetObjProperty(who, "#poisonisrunning");
                      if (poisoned)
                        if ((plevel < trapstrength) || (!plevel))
                          SetObjProperty(who,"poison_level", trapstrength);
                          return;
                        endif
                      else
		                SetObjProperty(who, "#poisonisrunning",1);
                        SetObjProperty(who, "poison_level",CStr( trapstrength));
		                var passparms := { who, who, "poison trap" };
		                start_script(":spells:poisonDamage", passparms);
                      endif
                      item.usescript := "";
		              EraseObjProperty( item, "trap_type" );
		              EraseObjProperty( item, "trap_strength" );
              "3" :   PlaySoundEffect(who, SFX_208);
                      SendSysMessage(who, "You set off an explosion trap!");
                      PlayStationaryEffect( item.x, item.y, item.z, FX_EXPLODE_3, 10,10);
                      var dmg := (RandomInt(20) + CInt(trapstrength));
                      ApplyRawDamage(who, dmg);
                      item.usescript := "";
		              EraseObjProperty( item, "trap_type" );
		              EraseObjProperty( item, "trap_strength" );
                      ApplyRawDamage(who, dmg);
            endcase
            break;
          endif
        endif
      elseif( data == TRAP)
        if(CheckSkill( who, SKILLID_DETECTINGHIDDEN, -1, thepoints ))
	      PrintTextAbovePrivate( item, "Trap", who );
          SetObjProperty( item, "trapped", 1 );
        else
          var results := RandomInt(9) + 1;
          if (results < 4) // critical failure
            case (prop)
              "1" :   PlaySoundEffect(who, SFX_224);
                      var dmg := (RandomInt(20) + CInt(trapstrength));
                      SendSysMessage(who, "You set off a needle trap!");
                      ApplyDamage(who, dmg);
                      item.usescript := "";
		              EraseObjProperty( item, "trap_type" );
		              EraseObjProperty( item, "trap_strength" );
              "2" :   PlaySoundEffect(who, SFX_232);
                      PrintTextAbovePrivate(who, "You set off a poison trap!", who);
                      PlayStationaryEffect( item.x, item.y, item.z, FX_POISON_GAS, 10,10);
                      var plevel := CInt(GetObjProperty(who, "poison_level"));
                      var poisoned := GetObjProperty(who, "#poisonisrunning");
                      if (poisoned)
                        if ((plevel < trapstrength) || (!plevel))
                          SetObjProperty(who,"poison_level", trapstrength);
                          return;
                        endif
                      else
		                SetObjProperty(who, "#poisonisrunning",1);
                        SetObjProperty(who, "poison_level",CStr( trapstrength));
		                var passparms := { who, who, "poison trap" };
		                start_script(":spells:poisonDamage", passparms);
                      endif
                      item.usescript := "";
		              EraseObjProperty( item, "trap_type" );
		              EraseObjProperty( item, "trap_strength" );
              "3" :   PlaySoundEffect(who, SFX_208);
                      SendSysMessage(who, "You set off an explosion trap!");
                      PlayStationaryEffect( item.x,item.y,item.z, FX_EXPLODE_3, 10,10);
                      var dmg := (RandomInt(20) + CInt(trapstrength));
                      ApplyRawDamage(who, dmg);
                      item.usescript := "";
		              EraseObjProperty( item, "trap_type" );
		              EraseObjProperty( item, "trap_strength" );
                      ApplyRawDamage(who, dmg);
            endcase
            break;
          endif
        endif
     elseif( prop )
        if(CheckSkill( who, SKILLID_DETECTINGHIDDEN, -1, thepoints ))
	      PrintTextAbovePrivate( item, "Trapped", who);
	      SetObjProperty( item, "trapped", 1 );
        else
          var results := RandomInt(9) + 1;
          if (results < 4) // critical failure
            case (prop)
              "1" :   PlaySoundEffect(who, SFX_224);
                      var dmg := (RandomInt(20) + CInt(trapstrength));
                      SendSysMessage(who, "You set off a needle trap!");
                      ApplyDamage(who, dmg);
                      item.usescript := "";
		              EraseObjProperty( item, "trap_type" );
		              EraseObjProperty( item, "trap_strength" );
              "2" :   PlaySoundEffect(who, SFX_232);
                      PrintTextAbovePrivate(who, "You set off a poison trap!", who);
                      PlayStationaryEffect( item.x,item.y,item.z, FX_POISON_GAS, 10,10);
                      var plevel := CInt(GetObjProperty(who, "poison_level"));
                      var poisoned := GetObjProperty(who, "#poisonisrunning");
                      if (poisoned)
                        if ((plevel < trapstrength) || (!plevel))
                          SetObjProperty(who,"poison_level", trapstrength);
                          return;
                        endif
                      else
		                SetObjProperty(who, "#poisonisrunning",1);
                        SetObjProperty(who, "poison_level",CStr( trapstrength));
		                var passparms := { who, who, "poison trap" };
		                start_script(":spells:poisonDamage", passparms);
                      endif
                      item.usescript := "";
		              EraseObjProperty( item, "trap_type" );
		              EraseObjProperty( item, "trap_strength" );
              "3" :   PlaySoundEffect(who, SFX_208);
                      SendSysMessage(who, "You set off an explosion trap!");
                      PlayStationaryEffect( item.x,item.y,item.z, FX_EXPLODE_3, 10,10);
                      var dmg := (RandomInt(20) + CInt(trapstrength));
                      ApplyRawDamage(who, dmg);
                      item.usescript := "";
		              EraseObjProperty( item, "trap_type" );
		              EraseObjProperty( item, "trap_strength" );
                      ApplyRawDamage(who, dmg);
            endcase
            break;
          endif
        endif
     endif
   endforeach
endprogram


function Found( finder, hider ) //FIXME: should not be 100% certain to find a hider if your skill is greater
  var hide_skill := GetEffectiveSkill( hider, SKILLID_HIDING );
  if (CheckSkill( finder, SKILLID_DETECTINGHIDDEN, (hide_skill - 5), thepoints ) )
    return 1;
  else
    return 0;
  endif
endfunction

function getDetectRange( skill )
    if( skill >= 100 )
        return 15;
    elseif( skill >= 90 )
        return 9;
    elseif( skill >= 80 )
        return 8;
    elseif( skill >= 70 )
        return 7;
    elseif( skill >= 60 )
        return 6;
    elseif( skill >= 50 )
        return 5;
    elseif( skill >= 30 )
        return 4;
    elseif( skill >= 10 )
        return 3;
    else
        return 1;
    endif
endfunction

function disguiseCheck (who, mobile)
if (getobjproperty(mobile, "dc")) // ohh, found some disguised freak!
        mobile.color := getobjproperty(mobile, "dc");

        mobile.graphic := getobjproperty(mobile, "dg");

        mobile.name := getobjproperty(mobile, "dn");
        eraseobjproperty(mobile, "dn");
        var storage := FindSA(mobile);
        var hair := getequipmentbylayer(mobile, LAYER_HAIR );
        destroyitem(hair);
        hair := getequipmentbylayer(mobile, LAYER_BEARD );
        destroyitem(hair);
        var it;
        eraseobjproperty(who, "dc");
        eraseobjproperty(who, "dg");
        foreach it in enumerateitemsincontainer(storage)
                equipitem(mobile, it);
        endforeach
        sendsysmessage(who, "You discovered someone in disguise!");
        return;
endif
if (!GetObjProperty( mobile, "realname"))
  return;
else
  SetName( mobile, GetObjProperty( mobile, "realname" ) );
  EraseObjProperty( mobile, "realname" );
  sendsysmessage(who, "You discovered someone using an alias!");
  return;
endif

endfunction

function FindSA ( character )
    var worldbank := DisguiseSA();

    var bank_obj_name := "Disguises of " + character.serial;
    var bankbox := FindRootItemInStorageArea( worldbank, bank_obj_name );

    if (!bankbox)
        bankbox := CreateRootItemInStorageArea( worldbank, bank_obj_name, UOBJ_BANKBOX );
    endif

        // should never happen.  FIXME make sure and document that fact
    if (!bankbox)
        print( "Unable to find or create disguise area for " + character.serial );
    endif

    return bankbox;
endfunction

function DisguiseSA()
    var bank := FindStorageArea( "Disguise Storage" );
    if (!bank)
        bank := CreateStorageArea( "Disguise Storage" );
    endif

    if (!bank)
        print( "Unable to open or create disguise storage!" );
    endif
    return bank;
endfunction

