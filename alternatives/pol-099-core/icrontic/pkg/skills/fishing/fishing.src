use uo;
use cfgfile;
use os;
use util;
use math;

include "include/client";
include "include/attributes";
include "include/dist";
include "include/math";
include "include/objtype";
include "include/startEqp";
include "include/skillPoints";
include "include/canAccess";
include "include/toolWear";

program use_fishpole(who, fishingpole)
  if(!can_access(who, fishingpole))
    return;
  endif
  EraseObjProperty(who, "IsMeditating");
  EraseObjProperty(who, "HealTimer");
  if(fishingpole.movable == 0)
    SendSysMessage(who, "You cannot use that.");
    return;
  endif
  if(!ReserveItem(fishingpole))
    return;
  endif
  if(! IsFishingPoleEquipped(who, fishingpole))
    SendSysMessage(who, "You have to equip that to go fishing!");
    return;
  endif
  var targetsquare := TargetCoordinates(who);
  if(!targetsquare)
	return;
  endif
  var px := who.x, py := who.y;
  var locinfo:= GetMapInfo( targetsquare.x, targetsquare.y );
  if(IsValidTarget(who, targetsquare, locinfo))
  	while (1)
  		if ((px != who.x) or (py != who.y))
  			SendSysMessage(who,"You move and therefore stop fishing");
  			return 1;
  		endif
	    PerformAction(who, 0x9);
	    var newsplash := CreateItemAtLocation(targetsquare.x, targetsquare.y, targetsquare.z,  0x352d, 1);
	    newsplash.movable := 0;
	    PlaySoundEffect(who, 0x240);
	    sleepms(400);
	    set_critical(1);
	    DestroyItem(newsplash);
	    set_critical(0);
	    newsplash := CreateItemAtLocation(targetsquare.x, targetsquare.y, targetsquare.z,  0x352e, 1);
	    newsplash.movable := 0;
	    sleepms(400);
	    set_critical(1);
	    DestroyItem(newsplash);
	    set_critical(0);
	    newsplash := CreateItemAtLocation(targetsquare.x, targetsquare.y, targetsquare.z,  0x352f, 1);
	    newsplash.movable := 0;
	    sleepms(400);
	    set_critical(1);
	    DestroyItem(newsplash);
	    set_critical(0);
	    newsplash := CreateItemAtLocation(targetsquare.x, targetsquare.y, targetsquare.z,  0x3530, 1);
	    newsplash.movable := 0;
	    sleepms(400);
	    set_critical(1);
	    DestroyItem(newsplash);
	    set_critical(0);
	    sleepms(800);
  		if ((px != who.x) or (py != who.y))
  			SendSysMessage(who,"You move and therefore stop fishing");
  			return 1;
  		endif
		var rand:= RandomInt(200);
		if(rand == 0)
		  SendSysMessage(who,"Your dreams of a good catch have been answered!");
		  CreateItemInBackpack(who,0xd587);
		endif
	    if(! isSOS(who, targetsquare))
	      var difficulty;
	      if(targetsquare.objtype)
	        difficulty := GetHarvestDifficulty("fish", targetsquare.x, targetsquare.y, targetsquare.objtype);
	      else
	        difficulty := GetHarvestDifficulty("fish", targetsquare.x, targetsquare.y, locinfo.landtile);
	      endif
	      if(difficulty == error)
	        SendSysMessage(who, "There doesn't seem to be any fish here");
	        return 0;
	      endif
	      var successrate := CheckSkill(who, SKILLID_FISHING, difficulty, 0);
              if(RandomInt(200)+GetEffectiveSkill(who,SKILLID_FISHING)<150)
                successrate:=0;
              endif
	      if(successrate > 0)
	        var fishreturned := HarvestResource("fish", targetsquare.x, targetsquare.y, 1, 1);
	        if(!fishreturned)
	          SendSysMessage(who, "Oops, you let that one get away!");
	          return 0;
	        endif
	        var catchtype := GetTheCatch(who);
                var createit := CreateItemInContainer(who.backpack, catchtype, 1);
	        if(createit)
	          CheckToolWear (who, fishingpole, SKILLID_FISHING);
                  if(isFish(catchtype))
                    CarveThem(who, createit);
                  endif
	          skillgain(who, difficulty * 10);
	        endif
	      else
	        if(RandomInt(100)==0)
	          CriticalFailure(who, targetsquare);
	        else
	          SendSysMessage(who, "They don't seem to be biting today");
	        endif
	      endif
    	endif
    	if (!GetObjProperty(who,"autoFishing"))
	    	SendSysMessage(who, "You stop Fishing.");
    		return 1;
    	endif
    endwhile
  endif
  return 1;
endprogram

function skillgain(who, points)
  var diff := points / 10;
  var skill := GetEffectiveSkill(who, SKILLID_FISHING);
  if(skill > (diff - 20))
    if((skill - diff) <= 5)
      points := points;
    elseif((skill - diff) <= 10)
      points := (points * 3) / 4;
    elseif((skill - diff) <= 15)
      points := points / 2;
    elseif((skill - diff) <= 15)
      points := points / 4;
    else
      points := 0;
    endif
  endif
  AwardRawSkillPoints(who, SKILLID_FISHING, points);
endfunction

function IsInRange(who, x, y, z)
  var xd, yd, zd;
  var retval := 1;
  xd := Abs(who.x - x);
  yd := Abs(who.y - y);
  if((xd > 6)||(yd > 6))
    retval := 0;
  endif
  return retval;
endfunction

function IsWater(thistile, locinfo)
  if(thistile.objtype)
    if((thistile.objtype >= 0x1797)&&(thistile.objtype <= 0x179c))
      return 1;
    elseif((thistile.objtype >= 0x346e)&&(thistile.objtype <= 0x3485))
      return 1;
    elseif((thistile.objtype >= 0x3490)&&(thistile.objtype <= 0x34ab))
      return 1;
    elseif((thistile.objtype >= 0x34b5)&&(thistile.objtype <= 0x34d5))
      return 1;
    endif
  else
    if((locinfo.landtile >= 0x00a8)&&(locinfo.landtile <= 0x00ab))
      return 1;
    elseif((locinfo.landtile >= 0x0136)&&(locinfo.landtile <= 0x0137))
      return 1;
    elseif((locinfo.landtile >= 0x3ff0)&&(locinfo.landtile <= 0x3ff3))
      return 1;
    endif
  endif
  return 0;
endfunction

function IsValidTarget(who, targetsquare, locinfo)
  var retval := 1;
  if(!IsWater(targetsquare, locinfo))
    SendSysMessage(who, "You can't fish there!");
    retval := 0;
  elseif(!IsInRange(who, targetsquare.x, targetsquare.y, targetsquare.z))
    SendSysMessage(who, "That is too far away");
    retval := 0;
  elseif(!CheckLosAt(who, targetsquare.x, targetsquare.y, targetsquare.z))
       SendSysMessage(who, "That location is not in your line of sight!");
    retval := 0;
  endif
  return retval;
endfunction

function GetTheCatch(who)
  var itemcfg:=ReadConfigFile(":*:itemdesc");
  var skill:=GetEffectiveSkill(who, SKILLID_FISHING);
  var chance:={0,0,0,0,0};
  var fishtypes:={
    (RandomInt((UOBJ_FISH_END - UOBJ_FISH_START) + 1) + UOBJ_FISH_START),  // Normal fish
    RandomInt(0x1711 - 0x170b)+ 0x170b,				  // Shoes
    RandomInt(8)+ 0xa368,					  // Magic fish
    GetTmap(who),						  // Tmap
    "sosbottle"							  // SOS
  };
  var msg:={
    "You catch a nice fish!",
    "You catch some soggy footwear!",
    "You catch mess of small fish!",
    "You find an old tattered map!",
    "You find a message in a bottle!"
  };
  var total:=0;
  var current:=0;
  chance[1]:=1000;			// Normal fish
  chance[2]:=CInt((1200-(skill*14)));	// Shoes
  if(chance[2]<0)
    chance[2]:=0;
  endif
  if(skill>=80)
    chance[3]:=50;			// Magic fish
  endif
  if(skill>=95)
    chance[4]:=10;			// Tmap
  endif
  if(skill>=100)
    chance[5]:=1;			// SOS
  endif
  for i:= 1 to 5
    total:=total+chance[i];
  endfor
  total:=RandomInt(total);
  for i:= 1 to 5
    current:=current+chance[i];
    if(current>total)
      SendSysMessage(who,msg[i]);
      return fishtypes[i];
    endif
  endfor
  print("/pkg/skills/fishing/fishing.ecl: Unable to determine fishtype.");
endfunction

function GetTmap(who)
	var iNum := RandomInt(100) + 1;
	if (iNum < 50)
		return "level1map";
	elseif (iNum < 25)
		return "level2map";	
	elseif (iNum < 15)
		return "level3map";
	elseif (iNum < 5)
		return "level4map";	
	else
		return "level5map";	
	endif
endfunction

function CriticalFailure(who, targetsquare)
  var tnum := RandomInt(4);
  var it := CreateNpcFromTemplate("seaserpent", targetsquare.x, targetsquare.y, targetsquare.z);
  if(!it.errortext)
    SendSysMessage(who, "Oops, that's not a fish!");
  endif
endfunction

function IsFishingPoleEquipped(who, fishingpole)
  if((!Accessible(who, fishingpole))||(Distance(who, fishingpole)> 1))
    return 0;
  endif
  foreach item in ListEquippedItems(who)
    if(fishingpole.serial == item.serial)
      return 1;
    endif
  endforeach
  return EquipItem(who, fishingpole);
endfunction

function GetSOSTreasure(who, targetsquare, sosmsg)
  var spot;
  if(CheckSkill(who, SKILLID_FISHING, 80, 200))
    var itemcfg := ReadConfigFile(":*:itemdesc");
    var it, oldname;
    if(RandomInt(100)< 75)
      var newitem;
      var artarray;
      case(RandomInt(3))
        0: newitem := RandomInt(0x0fcc - 0x0fc4)+ 0x0fc4;
        1: artarray := array(0xea4, 0xea8, 0xea7, 0xe9f, 0xea0, 0xea3, 0xea6);
           newitem := artarray[RandomInt(10) + 1];
        2: artarray := array(0x1397, 0x13a4, 0x13a5, 0x13a6, 0x13a7, 0x13a8, 0x13a9, 0x13ab, 0x13ac, 0x13ad, 0x13ae, 0x163a, 0x163b, 0x163c);
           newitem := artarray[RandomInt(14) + 1];
      endcase
      it := CreateItemInBackpack(who, newitem, 1);
      oldname := it.name;
      if((!oldname) || (oldname == ""))
        oldname := itemcfg[newitem].desc;
      endif
      it.name := oldname + " [Recovered from a shipwreck]";
      it.movable := 1;
      SendSysMessage(who, "You caught something interesting!");
    else
      SendSysMessage(who, "You catch a sunken treasure!");
      var chest := CreateItemInBackpack(who, 0x9e40, 1);
      case(RandomInt(4) + 1)
        1: chest.graphic := 0xe40;
        2: chest.graphic := 0xe41;
        3: chest.graphic := 0xe7c;
        4: chest.graphic := 0x9ab;
      endcase
      chest.name := "metal chest [Recovered from a shipwreck]";
      chest.movable := 1;
      MakeLoot(chest, RandomInt(3) + 5);
      DestroyItem(sosmsg);
    endif
  else
    SendSysMessage(who, "Something big just slipped off your hook!");
  endif
  return 0;
endfunction

function isSOS(who, targetsquare)
  var packitems;
  packitems := EnumerateItemsInContainer(who.backpack);
  var i, sosx, sosy;
  for(i := 1; i <= len(packitems); i := i + 1)
    sleepms(1);
    if((packitems[i].objtype == 0xa363))
      sosx := GetObjProperty(packitems[i], "tileX");
      sosy := GetObjProperty(packitems[i], "tileY");
      var xd, yd;
      xd := Abs(targetsquare.x - sosx);
      yd := Abs(targetsquare.y - sosy);
      if((xd <= 6)&&(yd <= 6))
        GetSOSTreasure(who, targetsquare, packitems[i]);
        return 1;
      endif
    endif
endfor
return 0;
endfunction

function isFish(item)
  if((item >= UOBJ_FISH_START) && (item <= UOBJ_FISH_END) )
    return 1;
  else
    return 0;
  endif
endfunction

function CarveThem(who, use_on)

  var num_steaks := (4 * use_on.amount);

  foreach thingie in ListEquippedItems(who)
    if(thingie.objtype == 0xf51)
      PlaySoundEffect(who, SFX_57);
      if(DestroyItem(use_on))
        CreateItemInBackpack(who, UOBJ_FISHSTEAK, num_steaks);
        SendSysMessage(who, "You carve the fish steaks and put them in your backpack");
      endif
      sleep(1);
      break;
    endif
  endforeach
  
  return;

endfunction
