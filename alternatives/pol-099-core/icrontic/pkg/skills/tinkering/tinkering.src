use uo;
use cfgfile;
use os;
use util;

include "include/attributes";
include "include/client";
include "include/objtype";
include "include/skillPoints";
include "util/key";
include "include/canAccess";
include "include/toolWear";
include "../../foundations/gumps/gumps";
include "MagicJewel";
include "tinkering";

const EXCEPTIONAL_SOUND  	:= 0x1ed;
const EXCEPTIONALCHANCE 	:= 2;  // Chance of creating exceptional item (era 2)
const EXCEPTIONALCHANCE2 	:= 5;  // Chance of creating exceptional item (era 2)
const MAX_X		        := 480;
const MAX_Y		        := 390;

var keys := {0x100e, 0x100f, 0x100f, 0x1012, 0x1013};
var tinker_cfg:= ReadConfigFile("tinker");
var itemcfg := ReadConfigFile("itemdesc");

program MakeTinkerItems(who, item)
  EraseObjProperty(who, "IsMeditating");
  EraseObjProperty(who, "HealTimer");
  if(!can_access(who, item))
    return;
  endif
  if(item.movable == 0)
    SendSysMessage(who, "You cannot use that.");
    return;
  endif
  SendSysMessage( who, "Select your material.");
  var trg := Target(who);
  if(!trg)
    SendSysMessage( who, "Targetting cancelled" );
    return;
  endif
  if(!can_access(who, trg))
    return;
  endif
  if (!Accessible( who, trg))
    SendSysMessage( who, "You can't reach that!" );
    return;
  endif
  if (!ReserveItem(trg))
    SendSysMessage(who,"You can't use that!");
    return;
  endif
  if(trg.movable == 0)
    SendSysMessage(who, "You cannot use that.");
    return;
  endif
  GFInitGump(0, 0);
  GFNoDispose();
  GFNoClose();
  GFResizePic(10, 70, 3500, MAX_X, MAX_Y);
  GFPage(0);
  GFGumpPic(200, 380, 5582); // Tinker Orb
  GFTextLine(30,  415, 0x0480, "Icrontic: Lost Souls"); // Added In
  GFTextLine( 90, 380, 900, "Make Last");
  GFTextLine(300, 420, 900, "How Many?");
  GFGumpPic(390, 417, 2443);
  var sa := GetObjProperty(who, "#TinkerAmt");
  if(!sa)
    sa := 1;
  endif
  var ct := GFTextEntry(400, 420, 100, 30, 0, sa);
  var lastitm := GFButtonID( 70, 384,   3, 4, 99);
  var close   := GFButtonID(410, 380, 242, 241, 1);
  var elm          := FindConfigElem(tinker_cfg, item);
  var skillid      := elm.skillID;
  var skill2       := Cint(elm.skill2);
  if(ResourceCheck(who,trg,"wood",1))
    GFTextLine(110,  80, 900, "TINKERING SELECTION MENU");
    GFTextLine( 40, 121,   0, "Tools");
    GFTextLine(160, 121,   0, "Painting");
    GFTextLine(290, 121,   0, "Paper");
    GFTextLine(40, 351,   0, "Parts");
//  GFTextLine(320, 380, 900, "Repair Item");
//  var repair  := GFButtonID(300, 384,   3, 4, 97);
    GFButtonPage(90, 123, 5209, 5209, 2);
    GFButtonPage(230, 123, 5209, 5209, 3);
    GFButtonPage(340, 123, 5209, 5209, 4);
    GFButtonPage( 90, 353, 5209, 5209, 5);
    ComposeWoodSubMenu(who, item);
  elseif((ResourceCheck(who,trg,"metal",1)) || (trg.objtype = 0x1be9))
  	var sound;
  	if ((trg.objtype = 0xee19) || (trg.objtype >= 0x6309) && (trg.objtype <= 0x6315) || (trg.objtype = 0x1be9) ||
           (trg.objtype >= 0x631b) ||  (trg.objtype >= 0x631d) ||  (trg.objtype >= 0x631f))
	  	sound := SFX_43;
    GFTextLine(110,  80, 900, "TINKERING SELECTION MENU");
    GFTextLine( 30, 121,   0, "Containers");
    GFTextLine(150, 121,   0, "Tools");
    GFTextLine(260, 121,   0, "Parts");
    GFTextLine(370, 121,   0, "Kitchen");
    GFTextLine( 30, 351,   0, "Jewelry");
    GFTextLine(160, 351,   0, "Miscellaneous");
    GFTextLine(335, 351,   0, "More Parts");
//  GFTextLine(320, 380, 900, "Repair Item");
//  var repair  := GFButtonID(300, 384,   3, 4, 97);
    GFButtonPage(110, 123, 5209, 5209, 2);
    GFButtonPage(230, 123, 5209, 5209, 3);
    GFButtonPage(340, 123, 5209, 5209, 4);
    GFButtonPage(435, 123, 5209, 5209, 5);
    GFButtonPage( 90, 353, 5209, 5209, 6);
    GFButtonPage(260, 353, 5209, 5209, 7);
    GFButtonPage(430, 353, 5209, 5209, 8);
    ComposeSubMenu(who);
    endif
  elseif (trg.objtype = 0xee20)
  	var sound;
  	if (trg.objtype = 0xee20)
	  	sound := SFX_43;
    GFTextLine(110,  80, 900, "TINKERING SELECTION MENU");
    GFTextLine( 30, 121,   0, "Alchemy");
    GFTextLine(150, 121,   0, "Glasses");
    GFTextLine(260, 121,   0, "Miscellaneous");
    GFButtonPage(110, 123, 5209, 5209, 2);
    GFButtonPage(230, 123, 5209, 5209, 3);
    GFButtonPage(360, 123, 5209, 5209, 4);
    ComposeGlassSubMenu(who);
    endif
  elseif(trg.objtype = 0xee19)
  	var sound;
  	if (trg.objtype = 0xee19)
	  	sound := SFX_HAMMER;
    GFTextLine(110,  80, 900, "TINKERING SELECTION MENU");
    GFTextLine( 30, 121,   0, "Kitchen");
    GFTextLine(150, 121,   0, "Vases");
    GFTextLine(260, 121,   0, "Flowerpots");
    GFTextLine(370, 121,   0, "Statues");
    GFTextLine( 30, 351,   0, "Alchemy");
    GFTextLine(160, 351,   0, "Miscellaneous");
//  GFTextLine(320, 380, 900, "Repair Item");
//  var repair  := GFButtonID(300, 384,   3, 4, 97);
    GFButtonPage(110, 123, 5209, 5209, 2);
    GFButtonPage(230, 123, 5209, 5209, 3);
    GFButtonPage(340, 123, 5209, 5209, 4);
    GFButtonPage(435, 123, 5209, 5209, 5);
    GFButtonPage( 90, 353, 5209, 5209, 6);
    GFButtonPage(260, 353, 5209, 5209, 7);
    ComposeClaySubMenu(who);
  endif
  else
    SendSysMessage(who, "You cannot make anything out of that.");
    return;
  endif
  var res := GFSendGump(who);
  var split := SplitWords(res[ct.keyid]);
  ct := split[2];
  SetObjProperty(who, "#TinkerAmt", Cint(ct));   
  if((res[0] == 999) || (res[0] == 0) || (res[0] = close[2]))
    SendSysMessage(who, "Cancelled");
    return;
  endif
  var objtype := CInt(res[0]);
  var jarray := { 4234, 4233, 4239, 4231, 4232, 4230};
  var tarray := { 4402, 4414, 4345};
  var lstitm := GetObjProperty(who, "LastTinkerItem");
  if(res[lastitm.keyid])
    if(lstitm in jarray)
      if(trg.objtype != 0x1be9)
      	SendSysMessage(who, "You need to use gold ingots to make jewelry");
      	return;
      endif
      make_jewelry(who, item, trg, lstitm, ct);
    elseif(lstitm in tarray)
      make_trap(who, item, lstitm, trg, ct);
    else
      make_something(who, item, lstitm, trg, ct);
    endif
  elseif((objtype == 0x10f9) || (objtype == 0x113e) || (objtype == 0x1132))
      make_trap(who, item, objtype, trg, ct);
  elseif(objtype in jarray)
	  if(trg.objtype != 0x1be9)
	  	SendSysMessage(who, "You need to use gold ingots to make jewelry");
	  	return;
	  endif
	  make_jewelry(who, item, trg, objtype, ct);
  else
      if(trg.objtype = 0x1be9)
      	SendSysMessage(who, "You can't use gold ingots for that");
      	return;
      endif
      make_something(who, item, objtype, trg, ct);
  endif
endprogram

function GFButtonIDC(x, y, release, press, close, retval)
    var line := "button " + CStr(gfref.x + Cint(x)) + " " + CStr(gfref.y + Cint(y));
    line := line + " " + CStr(Cint(release)) + " " + CStr(Cint(press)) + " ";
    line := line + "1 0 ";
    line := line + CStr(retval);
    gflayout.append( line );
endfunction

function ComposeSubMenu(who)
  var num := 2;
  var skill := (GetEffectiveSkill(who, SKILLID_TINKERING) + 20);
  var color := 0;
  while(num < 9)
    case(num)
       2: GFPage(2);        // Page 2
          if(skill >= Cint(tinker_cfg[4402]."skill"))
            color := 900;
            GFButtonIDC(120, 180, 210, 211, 1, 4402);
          endif
          GFTextLine( 70, 150, color, "Dart Trap");
          GFTilePic( 80, 180, 7164);
          color := 0;
          if(skill >= Cint(tinker_cfg[4414]."skill"))
            color := 900;
            GFButtonIDC(260, 180, 210, 211, 1, 4414);
          endif
          GFTextLine(190, 150, color, "Poison Trap");
          GFTilePic(210, 180, 4414);
          color := 0;
          if(skill >= Cint(tinker_cfg[4345]."skill"))
            color := 900;
            GFButtonIDC(330, 180, 210, 211, 1, 4345);
          endif
          GFTextLine(350, 150, color, "Explosion Trap");
          GFTilePic(340, 90, 14093);
          color := 0;
          if(skill >= Cint(tinker_cfg[3649]."skill"))
            color := 900;
            GFButtonIDC(110, 260, 210, 211, 1, 3649);
          endif
          GFTextLine( 60, 230, color, "Metal Chest North");
          GFTilePic( 70, 260, 3649);
          color := 0;
          if(skill >= Cint(tinker_cfg[3648]."skill"))
            color := 900;
            GFButtonIDC(280, 260, 210, 211, 1, 3648);
          endif
          GFTextLine(210, 230, color, "Metal Chest West");
          GFTilePic(230, 260, 3648);
          color := 0;
          if(skill >= Cint(tinker_cfg[3712]."skill"))
            color := 900;
            GFButtonIDC(350, 260, 210, 211, 1, 3712);
          endif
          GFTextLine(370, 230, color, "Metal Box");
          GFTilePic(360, 260, 3712);
          color := 0;
       3: GFPage(3);        // Page 3
          if(skill >= Cint(tinker_cfg[4325]."skill"))
            color := 900;
            GFButtonIDC(60, 180, 210, 211, 1, 4325);
          endif
          GFTextLine( 40, 150, color, "Froe");
          GFTilePic( 20, 180, 4325);
          color := 0;
          if(skill >= Cint(tinker_cfg[4027]."skill"))
            color := 900;
            GFButtonIDC(140, 180, 210, 211, 1, 4027);
          endif
          GFTextLine(105, 150, color, "Tongs");
          GFTilePic(90, 180, 4028);
          color := 0;
          if(skill >= Cint(tinker_cfg[3897]."skill"))
            color := 900;
            GFButtonIDC(220, 180, 210, 211, 1, 3897);
          endif
          GFTextLine(190, 150, color, "Shovel");
          GFTilePic(110, 170, 3898);
          color := 0;
          if(skill >= Cint(tinker_cfg[5091]."skill"))
            color := 900;
            GFButtonIDC(60, 240, 210, 211, 1, 5091);
          endif
          GFTextLine( 25, 210, color, "Smith Hammer");
          GFTilePic( 20, 240, 5091);
          color := 0;
          if(skill >= Cint(tinker_cfg[4138]."skill"))
            color := 900;
            GFButtonIDC(160, 240, 210, 211, 1, 4138);
          endif
          GFTextLine(135, 210, color, "Hammer");
          GFTilePic(120, 240, 4138);
          color := 0;
          if(skill >= Cint(tinker_cfg[4020]."skill"))
            color := 900;
            GFButtonIDC(260, 240, 210, 211, 1, 4020);
          endif
          GFTextLine(210, 210, color, "Sledge Hammer");
          GFTilePic(210, 240, 4021);
          color := 0;
          if(skill >= Cint(tinker_cfg[4326]."skill"))
            color := 900;
            GFButtonIDC(60, 310, 210, 211, 1, 4326);
          endif
          GFTextLine( 30, 280, color, "Inshave");
          GFTilePic( 20, 310, 4326);
          color := 0;
          if(skill >= Cint(tinker_cfg[3717]."skill"))
            color := 900;
            GFButtonIDC(140, 310, 210, 211, 1, 3717);
          endif
          GFTextLine(105, 280, color, "Pickaxe");
          GFTilePic(90, 310, 3718);
          color := 0;
          if(skill >= Cint(tinker_cfg[5371]."skill"))
            color := 900;
            GFButtonIDC(220, 310, 210, 211, 1, 5371);
          endif
          GFTextLine(190, 280, color, "Lockpick");
          GFTilePic(180, 310, 5371);
          color := 0;
       4: GFPage(4);        // Page 4 (Parts)
          if(skill >= Cint(tinker_cfg[4179]."skill"))
            color := 900;
            GFButtonIDC(60, 180, 210, 211, 1, 4179);
          endif
          GFTextLine( 40, 150, color, "Gears");
          GFTilePic( 20, 180, 4179);
          color := 0;
          if(skill >= Cint(tinker_cfg[4175]."skill"))
            color := 900;
            GFButtonIDC(140, 180, 210, 211, 1, 4175);
          endif
          GFTextLine(95, 150, color, "Clock Face");
          GFTilePic(100, 180, 4175);
          color := 0;
          if(skill >= Cint(tinker_cfg[4100]."skill"))
            color := 900;
            GFButtonIDC(200, 180, 210, 211, 1, 4100);
          endif
          GFTextLine(175, 150, color, "Keg Tap");
          GFTilePic(175, 180, 4100);
          color := 0;
          if(skill >= Cint(tinker_cfg[4189]."skill"))
            color := 900;
            GFButtonIDC(60, 240, 210, 211, 1, 4189);
          endif
          GFTextLine( 40, 210, color, "springs");
          GFTilePic( 20, 240, 4189);
          color := 0;
          if(skill >= Cint(tinker_cfg[4185]."skill"))
            color := 900;
            GFButtonIDC(140, 240, 210, 211, 1, 4185);
          endif
          GFTextLine(95, 210, color, "Sextant Parts");
          GFTilePic(105, 240, 4185);
          color := 0;
          if(skill >= Cint(tinker_cfg[4321]."skill"))
            color := 900;
            GFButtonIDC(400, 240, 210, 211, 1, 4321);
          endif
          GFTextLine(350, 210, color, "Barrel Hoops");
          GFTilePic(350, 240, 4321);
          color := 0;
          if(skill >= Cint(tinker_cfg[4181]."skill"))
            color := 900;
            GFButtonIDC(60, 310, 210, 211, 1, 4181);
          endif
          GFTextLine( 40, 280, color, "Hinge");
          GFTilePic( 20, 310, 4181);
          color := 0;
       5: GFPage(5);        //Page 5
          if(skill >= Cint(tinker_cfg[5110]."skill"))
            color := 900;
            GFButtonIDC(120, 180, 210, 211, 1, 5110);
          endif
          GFTextLine( 70, 150, color, "Butcher Knife");
          GFTilePic( 80, 180, 5110);
          color := 0;
          if(skill >= Cint(tinker_cfg[2553]."skill"))
            color := 900;
            GFButtonIDC(200, 180, 210, 211, 1, 2553);
            GFButtonIDC(260, 180, 210, 211, 1, 2552);
          endif
          GFTextLine(220, 150, color, "Spoons");
          GFTilePic(238, 180, 2552);
          GFTilePic(198, 180, 2553);
          color := 0;
/*          if(skill >= Cint(tinker_cfg[2519]."skill"))
            color := 900;
            GFButtonIDC(400, 180, 210, 211, 1, 2519);
          endif
          GFTextLine(370, 150, color, "Plate");
          GFTilePic(350, 180, 2519);
          color := 0; */
          if(skill >= Cint(tinker_cfg[3781]."skill"))
            color := 900;
            GFButtonIDC(120, 240, 210, 211, 1, 3781);
          endif 
          GFTextLine( 70, 210, color, "Skinning Knife");
          GFTilePic( 80, 240, 3781);
          color := 0;
          if(skill >= Cint(tinker_cfg[2549]."skill"))
            color := 900;
            GFButtonIDC(200, 240, 210, 211, 1, 2549);
            GFButtonIDC(260, 240, 210, 211, 1, 2548);
          endif
          GFTextLine(220, 210, color, "Forks");
          GFTilePic(220, 240, 2548);
          GFTilePic(210, 240, 2549);
          color := 0;
/*          if(skill >= Cint(tinker_cfg[2458]."skill"))
            color := 900;
            GFButtonIDC(400, 240, 210, 211, 1, 2458);
          endif
          GFTextLine(370, 210, color, "Goblet");
          GFTilePic(350, 240, 2458);
          color := 0; */
          if(skill >= Cint(tinker_cfg[3778]."skill"))
            color := 900;
            GFButtonIDC(120, 310, 210, 211, 1, 3778);
          endif
          GFTextLine( 100, 280, color, "Cleaver");
          GFTilePic( 80, 310, 3778);
          color := 0;
          if(skill >= Cint(tinker_cfg[2551]."skill"))
            color := 900;
            GFButtonIDC(200, 310, 210, 211, 1, 2551);
            GFButtonIDC(260, 310, 210, 211, 1, 2550);
          endif
          GFTextLine(220, 280, color, "Knives");
          GFTilePic(205, 310, 2551);
          GFTilePic(235, 310, 2550);
          color := 0;
/*          if(skill >= Cint(tinker_cfg[4096]."skill"))
            color := 900;
            GFButtonIDC(400, 310, 210, 211, 1, 4096);
          endif
          GFTextLine(370, 280, color, "Pewter Mug");
          GFTilePic(350, 310, 4096);
          color := 0; */
          if(skill >= Cint(tinker_cfg[2541]."skill"))
            color := 900;
            GFButtonIDC(360, 310, 210, 211, 1, 2541);
          endif
          GFTextLine(320, 280, color, "Kettle");
          GFTilePic(315, 310, 2541);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x097f]."skill"))
            color := 900;
            GFButtonIDC(360, 240, 210, 211, 1, 0x097f);
          endif
          GFTextLine(305, 210, color, "Frying Pan");
          GFTilePic(315, 240, 0x097f);
          color := 0;
          if(skill >= Cint(tinker_cfg[2420]."skill"))
            color := 900;
            GFButtonIDC(360, 180, 210, 211, 1, 2420);
          endif
          GFTextLine(350, 150, color, "Cauldron");
          GFTilePic(315, 140, 2420);
          color := 0;
       6: GFPage(6);        //Page 6
          if(skill >= Cint(tinker_cfg[4234]."skill"))
            color := 900;
            GFButtonIDC(120, 180, 210, 211, 1, 4234);
          endif
          GFTextLine( 70, 150, color, "Ring");
          GFTilePic( 80, 180, 4234);
          color := 0;
          if(skill >= Cint(tinker_cfg[4233]."skill"))
            color := 900;
            GFButtonIDC(260, 180, 210, 211, 1, 4233);
          endif
          GFTextLine(190, 150, color, "Necklace");
          GFTilePic(210, 180, 4233);
          color := 0;
          if(skill >= Cint(tinker_cfg[4239]."skill"))
            color := 900;
            GFButtonIDC(400, 180, 210, 211, 1, 4239);
          endif
          GFTextLine(370, 150, color, "Necklace");
          GFTilePic(350, 180, 4229);
          color := 0;
          if(skill >= Cint(tinker_cfg[4231]."skill"))
            color := 900;
            GFButtonIDC(120, 240, 210, 211, 1, 4231);
          endif
          GFTextLine( 70, 210, color, "Earrings");
          GFTilePic( 80, 240, 4231);
          color := 0;
          if(skill >= Cint(tinker_cfg[4232]."skill"))
            color := 900;
            GFButtonIDC(260, 240, 210, 211, 1, 4232);
          endif
          GFTextLine(220, 210, color, "Necklace");
          GFTilePic(210, 240, 4232);
          color := 0;
          if(skill >= Cint(tinker_cfg[4230]."skill"))
            color := 900;
            GFButtonIDC(400, 240, 210, 211, 1, 4230);
          endif
          GFTextLine(370, 210, color, "Bracelet");
          GFTilePic(350, 240, 4230);
          color := 0;
       7: GFPage(7);        //Page 7
          if(skill >= Cint(tinker_cfg[4113]."skill"))
            color := 900;
            GFButtonIDC(120, 180, 210, 211, 1, 4113);
          endif
          GFTextLine( 70, 150, color, "Keyring");
          GFTilePic( 80, 180, 4113);
          color := 0;
          if(skill >= Cint(tinker_cfg[2599]."skill"))
            color := 900;
            GFButtonIDC(260, 180, 210, 211, 1, 2599);
          endif
          GFTextLine(190, 150, color, "Candelabra");
          GFTilePic(210, 180, 2599);
          color := 0;
          if(skill >= Cint(tinker_cfg[6225]."skill"))
            color := 900;
            GFButtonIDC(400, 180, 210, 211, 1, 6225);
          endif
          GFTextLine(370, 150, color, "Scales");
          GFTilePic(350, 180, 6225);
          color := 0;
          if(skill >= Cint(tinker_cfg[4112]."skill"))
            color := 900;
            GFButtonIDC(120, 240, 210, 211, 1, 4112);
          endif
          GFTextLine( 70, 210, color, "Iron Key");
          GFTilePic( 80, 240, 4112);
          color := 0;
/*          if(skill >= Cint(tinker_cfg[4167]."skill"))
            color := 900;
            GFButtonIDC(260, 240, 210, 211, 1, 4167);
          endif
          GFTextLine(220, 210, color, "Globe");
          GFTilePic(210, 240, 4167);
          color := 0; */
          if(skill >= Cint(tinker_cfg[5365]."skill"))
            color := 900;
            GFButtonIDC(400, 240, 210, 211, 1, 5365);
          endif
          GFTextLine(370, 210, color, "Spy Glass");
          GFTilePic(350, 240, 5365);
          color := 0;
          if(skill >= Cint(tinker_cfg[2597]."skill"))
            color := 900;
            GFButtonIDC(120, 310, 210, 211, 1, 2597);
          endif
          GFTextLine( 70, 280, color, "Lantern");
          GFTilePic( 80, 310, 2584);
          color := 0;
          if(skill >= Cint(tinker_cfg[6217]."skill"))
            color := 900;
            GFButtonIDC(260, 240, 210, 211, 1, 6217);
          endif
          GFTextLine(220, 210, color, "Heating Stand");
          GFTilePic(210, 240, 6217);
          color := 0;
          if(skill >= Cint(tinker_cfg[4017]."skill"))
            color := 900;
            GFButtonIDC(260, 310, 210, 211, 1, 4017);
          endif
          GFTextLine(220, 280, color, "Forge");
          GFTilePic(210, 300, 4017);
          color := 0;
          if(skill >= Cint(tinker_cfg[4016]."skill"))
            color := 900;
            GFButtonIDC(400, 310, 210, 211, 1, 4016);
          endif
          GFTextLine(370, 280, color, "Anvil");
          GFTilePic(350, 310, 4016);
          color := 0;
       8: GFPage(8);        //Page 8
          if(skill >= Cint(tinker_cfg[3998]."skill"))
            color := 900;
            GFButtonIDC(120, 180, 210, 211, 1, 3998);
          endif
          GFTextLine( 70, 150, color, "Scissors");
          GFTilePic( 80, 180, 3998);
          color := 0;
          if(skill >= Cint(tinker_cfg[3739]."skill"))
            color := 900;
            GFButtonIDC(260, 180, 210, 211, 1, 3739);
          endif
          GFTextLine(190, 150, color, "Mortar & Pestle");
          GFTilePic(210, 180, 3739);
          color := 0;
          if(skill >= Cint(tinker_cfg[4327]."skill"))
            color := 900;
            GFButtonIDC(400, 180, 210, 211, 1, 4327);
          endif
          GFTextLine(370, 150, color, "Scorp");
          GFTilePic(350, 180, 4327);
          color := 0;
          if(skill >= Cint(tinker_cfg[7868]."skill"))
            color := 900;
            GFButtonIDC(120, 240, 210, 211, 1, 7868);
          endif
          GFTextLine( 70, 210, color, "Tinker's Tools");
          GFTilePic( 80, 240, 7868);
          color := 0;
          if(skill >= Cint(tinker_cfg[3907]."skill"))
            color := 900;
            GFButtonIDC(260, 240, 210, 211, 1, 3907);
          endif
          GFTextLine(220, 210, color, "Hatchet");
          GFTilePic(210, 240, 3907);
          color := 0;
          if(skill >= Cint(tinker_cfg[4324]."skill"))
            color := 900;
            GFButtonIDC(400, 240, 210, 211, 1, 4324);
          endif
          GFTextLine(370, 210, color, "Draw Knife");
          GFTilePic(350, 240, 4324);
          color := 0;
          if(skill >= Cint(tinker_cfg[3997]."skill"))
            color := 900;
            GFButtonIDC(120, 310, 210, 211, 1, 3997);
          endif
          GFTextLine( 70, 280, color, "Sewing Kit");
          GFTilePic( 80, 310, 3997);
          color := 0;
          if(skill >= Cint(tinker_cfg[4148]."skill"))
            color := 900;
            GFButtonIDC(260, 310, 210, 211, 1, 4148);
          endif
          GFTextLine(220, 280, color, "Saw");
          GFTilePic(210, 310, 4148);
          color := 0;
          if(skill >= Cint(tinker_cfg[4136]."skill"))
            color := 900;
            GFButtonIDC(400, 310, 210, 211, 1, 4136);
          endif
          GFTextLine(370, 280, color, "Dovetail Saw");
          GFTilePic(350, 310, 4136);
          color := 0;
    endcase
    num := num + 1;
  endwhile
  return;
endfunction

function createStuff(who,material,what,sound,item);
	var skill := tinker_cfg[what.objtype].skill;
	var mNeeded := tinker_cfg[what.objtype].material;
	var maxhp := tinker_cfg[what.objtype].maxhp;
        var mtype := tinker_cfg[what.objtype].type;
        var skill2 := tinker_cfg[what.objtype].skill2;
        var skillID := tinker_cfg[what.objtype].skillID;

  var sncfg     := ReadConfigFile(":hooks:skillsdef");
  var skillelem  := FindConfigElem(sncfg, skillID);
  var skillname := skillelem.name;
  var ignorecolor := checkMaterial(who, material);
  
  // Determine the material and skill required to make the item and inform the player
    if(!skillID)
      SendSysmessage (who, "(" + mNeeded + " " + mtype + " and " + skill + " Tinkering)");
    else
      SendSysmessage (who, "(" + mNeeded + " " + mtype + ")");
      SendSysmessage (who, "(" + skill + " Tinkering and " + skill2 + " " + skillname + ")");
    endif
    

    var thepoints := CInt(skill * 1.2);
    var x := who.x,y := who.y;
    var theitem;
    if (!ReserveItem(material))
    	SendSysMessage(who,"Someone else is already using that");
    	return;
    endif
    if(!ReserveItem(item))
    	SendSysMessage(who,"Someone else is already using that");
    	return;
    endif
    
    while (material.amount >= material)
        if((who.x != x) || (who.y != y))
	      SendSysMessage(who, "You stop Tinkering.");
    	  break;
	    endif
	    if(material.amount < mNeeded)
	      SendSysMessage(who, "You don't have enough material to make this!");
	      break;
	    endif
	    PlaySoundEffect(who, sound);
	    sleep(2);
	    PlaySoundEffect(who, sound);
	    sleep(2);
	    PlaySoundEffect(who, sound);
	    sleep(2);
		if (CheckSkill(who, SKILLID_TINKERING, skill, thepoints))
		    if (!SubtractAmount(material,mNeeded))
		        sendsysmessage(who, "Could not access the ingots.");
    		        break;
		    endif
                    if(ignoreit && (!isClay(who, use_on)))
			theitem := CreateItemInContainer(who.backpack, what[1]);
			CheckToolWear (who, item, SKILLID_TINKERING);
			theitem.movable := 1;
                    else
			theitem := CreateItemInContainer(who.backpack, what[1]);
			CheckToolWear (who, item, SKILLID_TINKERING);
                        theitem.color := material.color;
			theitem.movable := 1;
	        SendSysMessage( who, "You create the item and place it in your pack. ");
		else
			SubtractAmount(material, CInt(mNeeded/2));
			SendSysMessage(who, "You destroy some material.");
		endif
  endif
    	if (!GetObjProperty(who,"autoTinker"))
    		SendSysMessage(who, "You stop Tinkering.");
    		return 1;
    	endif
    endwhile
endfunction

function make_something( who, item, what, use_on, ct)
  ct := Cint(ct);
  SetObjProperty(who, "LastTinkerItem", what);
  var type      := tinker_cfg[what].type;
  var material  := CInt(tinker_cfg[what].material);
  var skill     := CInt(tinker_cfg[what].skill);
  var itemname  := tinker_cfg[what].Name;
  var thepoints := CInt(skill * 1.2);
  var metalname := tinker_cfg[Hex(use_on.objtype)].name;
  if (metalname)
  	metalname[1] := upper(metalname[1]);
  endif
  var counter := 0;
  var color := use_on.color;
  var x := who.x;
  var y := who.y;
  var theitem, lockid, thekey;

        var mtype := tinker_cfg[what].type;
        var skill2 := CInt(tinker_cfg[what].skill2);
        var skillID := CInt(tinker_cfg[what].skillID);

  var sncfg     := ReadConfigFile(":hooks:skillsdef");
  var skillelem  := FindConfigElem(sncfg, skillID);
  var skillname := skillelem.name;
  var ignorecolor := checkMaterial(who, use_on);
  // Determine the material and skill required to make the item and inform the player
    if(!skillID)
      SendSysmessage (who, "(" + material + " " + mtype + " and " + skill + " Tinkering)");
    else
      SendSysmessage (who, "(" + material + " " + mtype + ")");
      SendSysmessage (who, "(" + skill + " Tinkering and " + skill2 + " " + skillname + ")");
    endif

  while(counter < ct)
    if((who.x != x) || (who.y != y))
      SendSysMessage(who, "You stop Tinkering.");
      break;
    endif
    if((use_on.amount < material) or (!resourcecheck(who, use_on, type)))
      SendSysMessage(who, "You don't have enough material to make this!");
      break;
    endif
    PlaySoundEffect(who, SFX_HAMMER);
    sleep(2);
    PlaySoundEffect(who, SFX_HAMMER);
    sleep(2);
    PlaySoundEffect(who, SFX_HAMMER);
    sleep(2);
    if(CheckSkill(who, SKILLID_TINKERING, skill, thepoints))
      if(!SubtractAmount(use_on, material))
        sendsysmessage(who, "no sub");
        break;
      endif
      if(tinker_cfg[what].createitem)
	  	itemname := tinker_cfg[what].createname;
	  	theitem := CreateItemInBackpack( who, tinker_cfg[what].createitem, 1 );
	  else
	  	//could've been solved better but feel lazy
	  	if (what = 0xe41)
	  		theitem := CreateItemInContainer(who.backpack, CInt(0xe40), 1);
	  		theitem.graphic := 0xe41;
	  		SetName(theitem,"Metal Chest");
	  	elseif (what = 0xe40)
	  		theitem := CreateItemInContainer(who.backpack, CInt(0xe40), 1);
	  		SetName(theitem,"Metal Chest");
	  	else
		  	theitem := CreateItemInContainer(who.backpack, CInt(what), 1);
	  	endif
	  endif
	  if (!theitem)
	  	SendSysMessage(who,"Your backpack is full");
	  	return;
	  endif
      if(!ignorecolor && (!isClay(who, use_on)))
        theitem.color := color;
      else
        theitem.color := 0;
      endif
      CheckToolWear (who, item, SKILLID_TINKERING);
      theitem.movable := 1;
      SetObjProperty(theitem,"metalname",metalname);
      if(RandomInt(GetEffectiveSkill(who, SKILLID_TINKERING) + 5) > skill)
        theitem.quality := 1.2;
        theitem.buyprice := CInt(theitem.buyprice * theitem.quality);
        theitem.hp := theitem.maxhp;
        if(GetEffectiveSkill(who, SKILLID_TINKERING) >= 99)
          if (metalname)
	          SetName(theitem, "an Exceptional " + metalname + " " + itemname + " [Crafted by " + who.name + "]");
	      else
		      SetName(theitem, "an Exceptional " + itemname + " [Crafted by " + who.name + "]");
		  endif
		    PlayStationaryEffect(who.x,who.y,who.z,FX_SPARK_EFFECT,10);
        else
          if (metalname)
	          SetName(theitem, "an Exceptional " + metalname + " " + itemname);
	      else
		      SetName(theitem, "an Exceptional " + itemname);
		  endif
		    PlayStationaryEffect(who.x,who.y,who.z,FX_SPARK_EFFECT,10);
        endif
	    SetObjProperty(theitem,"MadeBy",who.name);
        SetObjProperty(theitem,"exceptional",1);
        SendSysMessage(who, "You make an exceptional item and put it in your pack");
      else
      	if (metalname)
        	SetName(theitem,metalname + " " + itemname );
        else
        	SetName(theitem, itemname );
       	endif
        SendSysMessage( who, "You create the item and place it in your pack." );
      endif
      if((theitem.graphic in array(0x9a8, 0x9a9, 0x9aa, 0x9ab, 0xa2c, 0xa30, 0xa34, 0xa38, 0xa4d, 0xa4f,
        0xa51, 0xa53, 0xe3c, 0xe3d, 0xe3e, 0xe3f, 0xe40, 0xe41, 0xe42, 0xe43, 0xe7c, 0xe7d, 0xe7e, 0xe80)))
        if(RandomInt(GetEffectiveSkill(who, SKILLID_TINKERING)) > 40)
          SetObjProperty(theitem, "lockable", "1");
          SetObjProperty(theitem, "trappable", "1");
          lockid := AllocLockId();
          theitem.locked := 0;
          thekey := CreateItemInBackpack(who, UOBJ_COPPER_KEY, 1);
          SetObjProperty(thekey, "lockid", lockid);
          SetObjProperty(theitem,"lockid", lockid);
          SetObjProperty(theitem,"LockPickDiff", GetEffectiveSkill(who, SKILLID_TINKERING));
          SendSysMessage(who, "You will find the key in your backpack.");
        endif
      endif
    else
      SubtractAmount(use_on, CInt(material/2));
      SendSysMessage(who, "You destroy some material.");
    endif
    counter := counter + 1;
  endwhile
endfunction

function make_jewelry(who, item, stuff, what, ct)
  ct := Cint(ct);
  SetObjProperty(who, "LastTinkerItem", what);
  var type      := tinker_cfg[what].type;
  var material  := tinker_cfg[what].material;
  var skill     := tinker_cfg[what].skill;
  var itemname  := tinker_cfg[what].Name;
  var thepoints := CInt(skill * 1.2);
  var ExecptionalBonus:=0;
  if (IsExceptional(item))
  	Execptionalbonus := 2;
  endif
  var counter := 0;
  var x := who.x;
  var y := who.y;
  var theitem;
  SendSysMessage(who, "Select the gems you wish to work with");
  var thegem := Target(who);
  if(!thegem)
    SendSysMessage(who, "Targetting cancelled.");
    return;
  endif
  if(!can_access(who, thegem))
    return;
  endif
  if((thegem.objtype >= 0x0f0f) && (thegem.objtype <= 0x0f30))
    if (!ReserveItem(thegem) or !thegem.movable)
      SendSysMessage(who,"that gem is not accessible");
      return;
    endif
  else
    SendSysMessage(who, "That is not a gem!");
    return;
  endif
  if(!Accessible(who, thegem))
    SendSysMessage(who, "You can't reach that!");
    return;
  endif
  if (!thepoints)
  	thepoints := get_default_points(SKILLID_TINKERING);
  endif
  while(counter < ct)
    if((who.x != x) || (who.y != y))
      SendSysMessage(who, "You stop Tinkering.");
      break;
    endif
    if(stuff.amount < material)
      SendSysMessage(who, "You don't have enough material to make this!");
      break;
    endif
    PlaySoundEffect(who, 0x22d);
    sleep(2);
    PlaySoundEffect(who, 0x22d);
    sleep(2);        
    PlaySoundEffect(who, 0x22d);
    sleep(2);        
    if(stuff.amount > material)
      if(!SubtractAmount(thegem, 1))
        break;
      endif
      if(CheckSkill(who, SKILLID_TINKERING, skill, thepoints))
        if(!SubtractAmount(stuff, material))
          break;
        endif
        theitem := CreateItemInBackpack(who, what, 1);
        if (!theitem)
        	SendSysMessage(who,"Your backpack is full");
        	return;
        endif
        CheckToolWear (who, item, SKILLID_TINKERING);
		if ((CheckSkill( who, SKILLID_TINKERING, 99, thepoints ))  and (randomint(200) < (EXCEPTIONALCHANCE2 + execptionalbonus)))
			if (CheckSkill(who, SKILLID_MAGERY, 50,150))
				//they make an exceptional item
                theitem.quality := 1.5;
                theitem.buyprice := CInt(theitem.buyprice * theitem.quality);
                theitem.hp := theitem.quality * theitem.max_hp;
                SetObjProperty(theitem, "type","t");
                SetObjProperty(theitem, "MadeBy",who.name);
                var nextmagic := GetObjProperty(who, "nextmagic");
                if( nextmagic < readgameclock() + 1 )
                  makeMagicJewel(theitem, who);        // MuadDib Changed
                  PlayStationaryEffect(who.x,who.y,who.z,FX_HEAL_EFFECT,10);
                endif
                If(GetObjProperty(theitem, "suffix"))
                  SetName(theitem, "a magic " + itemname);
                  SendSysmessage (who, "You make a magic item and put it in your pack", 3, 48);
		  playsoundEffect (who, EXCEPTIONAL_SOUND);
                else
		  SetName(theitem, itemname);
		  theitem.usescript := ":tinkering:resmeltjewelry";
		  SendSysMessage(who, "You create the item and place it in your pack.");
                endif
            endif
        else
			SetName(theitem, itemname);
			theitem.usescript := ":tinkering:resmeltjewelry";
			SendSysMessage(who, "You create the item and place it in your pack.");
        endif
      else
        SubtractAmount(stuff, CInt(material/2) );
        SendSysMessage(who, "You destroy some material.");
      endif
    else
      SendSysMessage(who, "You don't have enough material!");
      return;
    endif
    counter := counter + 1;
  endwhile
endfunction

function make_trap(who, item, traptype, ingot, ct)
  if(!resourcecheck(who, ingot, "metal"))
    return;
  endif
  ct := Cint(ct);
  case(traptype)
    4345:  SetObjProperty(who, "LastTinkerItem", 4345);
             explosion_trap(who, item, ingot, ct);
    4414:  SetObjProperty(who, "LastTinkerItem", 4414);
             poison_trap(who, item, ingot, ct);
    4402:  SetObjProperty(who, "LastTinkerItem", 4402);
             dart_trap(who, item, ingot, ct);
  endcase
endfunction

function dart_trap(who, item, ingot, ct)
  var counter := 0;
  var x := who.x;
  var y := who.y;
  var theitem;
  while(counter < ct)
    SendSysMessage(who,"select the container you wish to place a trap on");
    var chest := Target(who);
    if(!chest)
      SendSysMessage(who,"canceled");
      break;
    endif
    if(!can_access(who, chest))
      break;
    endif
    if(!Accessible(who, chest))
      SendSysMessage(who, "You can't reach that!");
      break;
    endif
    var trapable := GetObjProperty(chest, "trappable");;
    if(!trapable)
      SendSysMessage(who,"You can only trap crafted containers.");
      break;
    endif
    if ((chest.objtype == 0x7101) or (chest.objtype == 0x7100))
      SendSysMessage(who,"you cant trap bank boxes!");
      break;
    endif
    if((chest.objtype != 0x09aa) && (chest.objtype != 0x09a9) && (chest.objtype != 0x0e3c) && (chest.objtype != 0x0e3f) && (chest.objtype != 0x0e42))
      SendSysMessage(who, "You can only trap boxes.");
      return;
    endif
    if(!ReserveItem(chest))
      SendSysMessage(who,"you cant trap that");
      break;
    endif
    var checktrp := chest.usescript;
    if(checktrp == ":tinkering:tinkerTraps")
      SendSysMessage(who, "That chest is already trapped.");
      break;
    endif
    var resource_check := 0;
    foreach item in EnumerateItemsInContainer(who.backpack)
      if(item.graphic == 0x1bfb)
        if(ReserveItem(item))
          SubtractAmount(item, 1);
          resource_check := 1;
          break;
        endif
      endif
    endforeach
    if(resource_check == 0)
      SendSysMessage(who,"you dont have any bolts.");
      break;
    endif
    if(!SubtractAmount(ingot, 1))
      break;
    endif
    var points := GetEffectiveSkill(who, SKILLID_TINKERING);
    sleep(2);
    if(CheckSkill(who, SKILLID_TINKERING, -1, points/2))
      SetObjProperty(chest, "trap_type", "1");
      SetObjProperty(chest, "trap_strength", (points/3));
      SetObjProperty(chest, "oldscript", chest.usescript);
      SendSysMessage(who, "The carefully place the trap on the container");
      chest.usescript := ":tinkering:tinkerTraps";
      SetObjProperty(chest, "trapper", who.serial);
      CheckToolWear (who, item, SKILLID_TINKERING);
    else
      var results := RandomInt(9) + 1;
      if(results == 1)
        var the_damage := (RandomInt(19) + 1) + (points - 10);
        SendSysMessage(who, "You fail, and set off the trap!");
        PlaySoundEffect(who, SFX_225);
        ApplyRawDamage(who, the_damage);
      else
        SendSysMessage(who, "You failed to properly place the trap");
      endif
    endif   
    counter := counter + 1;
  endwhile
endfunction

function poison_trap(who, item, ingot, ct)
  var counter := 0;
  var x := who.x;
  var y := who.y;
  var theitem, chest, resource_check, points, strength, results, plevel, passparms;
  while(counter < ct)
    SendSysMessage(who,"select the container you wish to place a trap on");
    chest := Target(who);
    if(!chest)
      SendSysMessage(who,"canceled");
      break;
    endif
    if(!can_access(who, chest))
      break;
    endif
    if(!Accessible(who, chest))
      SendSysMessage(who, "You can't reach that!");
      break;
    endif
    var trapable := GetObjProperty(chest, "trappable");;
    if(!trapable)
      SendSysMessage(who,"You can only trap crafted containers.");
      break;
    endif
    if ((chest.objtype == 0x7101) or (chest.objtype == 0x7100))
      SendSysMessage(who,"you cant trap bank boxes!");
      break;
    endif
    if(!ReserveItem(chest))
      SendSysMessage(who,"you cant trap that");
      break;
    endif
    var checktrp := chest.usescript;
    if(checktrp == ":tinkering:tinkerTraps")
      SendSysMessage(who, "That chest is already trapped.");
      break;
    endif
    if((chest.objtype != 0x09aa) && (chest.objtype != 0x09a9) && (chest.objtype != 0x0e3c) && (chest.objtype != 0x0e3f) && (chest.objtype != 0x0e42))
      SendSysMessage(who, "You can only trap boxes.");
      return;
    endif
    if(GetObjProperty(chest, "trap_type"))
      SendSysMessage(who, "That chest is already trapped.");
      break;
    endif
    resource_check := 0;
    foreach item in EnumerateItemsInContainer(who.backpack)
      if(item.graphic == 0xf0a)
        if(ReserveItem(item))
          SubtractAmount(item, 1);
          resource_check := 1;
          break;
        endif
      endif
    endforeach
    if(resource_check == 0)
      SendSysMessage(who,"you dont have a poison potion.");
      break;
    endif
    if(!SubtractAmount(ingot, 1))
      break;
    endif
    points := GetEffectiveSkill(who, SKILLID_TINKERING);
    strength := points/5;
    if(CheckSkill(who, SKILLID_TINKERING, -1, points/2 ))
      SetObjProperty(chest, "trap_type", "2");
      SetObjProperty(chest, "trap_strength", strength);
      SetObjProperty(chest, "oldscript", chest.usescript);
      SendSysMessage(who, "The carefully place the trap on the container");
      chest.usescript := ":tinkering:tinkerTraps";
      SetObjProperty(chest, "trapper", who.serial);
      CheckToolWear (who, item, SKILLID_TINKERING);
    else
      results := RandomInt(9) + 1;
      if (results == 1)
        SendSysMessage(who, "You fail, and poison yourself!");
        plevel := CInt(GetObjProperty(who, "poison_level"));
        if(plevel)
          if((plevel < strength) || (!plevel))
            SetObjProperty(who,"poison_level", strength);
            break;
          endif
        else
          SetObjProperty(who, "poisonstamp", ReadGameClock());
          SetObjProperty(who, "poison_level", CStr(strength));
          passparms := { who, who, "poison trap" };
          start_script(":spells:poisonDamage", passparms); 
          break;
        endif
      else
        SendSysMessage(who,"you fail to properly place the trap");
      endif
    endif
    counter := counter + 1;
  endwhile
endfunction

function explosion_trap(who, item,  ingot, ct)
  var counter := 0;
  var x := who.x;
  var y := who.y;
  var chest, resource_check, points, results, the_damage;
  while(counter < ct)
    SendSysMessage(who,"select the container you wish to place a trap on");
    chest := Target(who);
    if (!chest)
      SendSysMessage(who,"canceled");
      return;
    endif
    if(!can_access(who, chest))
      return;
    endif
    if (!Accessible(who, chest))
      SendSysMessage(who, "You can't reach that!");
      return;
    endif
    var trapable := GetObjProperty(chest, "trappable");;
    if(!trapable)
      SendSysMessage(who,"You can only trap crafted containers.");
      break;
    endif
    if ((chest.objtype == 0x7101) or (chest.objtype == 0x7100))
      SendSysMessage(who,"you can't trap bank boxes!");
      break;
    endif
    if (!ReserveItem(chest))
      SendSysMessage(who,"you can't trap that");
      return;
    endif
    var checktrp := chest.usescript;
    if(checktrp == ":tinkering:tinkerTraps")
      SendSysMessage(who, "That chest is already trapped.");
      break;
    endif
    if((chest.objtype != 0x09aa) && (chest.objtype != 0x09a9) && (chest.objtype != 0x0e3c) && (chest.objtype != 0x0e3f) && (chest.objtype != 0x0e42))
      SendSysMessage(who, "You can only trap boxes.");
      return;
    endif
    if(GetObjProperty(chest, "trap_type"))
      SendSysMessage(who, "That chest is already trapped.");
      return;
    endif
    resource_check := 0;
    foreach item in EnumerateItemsInContainer(who.backpack)
      if (item.graphic == 0xf0d)
        if (ReserveItem(item))
          SubtractAmount(item, 1);
          resource_check := 1;
          break;
        endif
      endif
    endforeach
    if (resource_check == 0)
      SendSysMessage(who,"you dont have an explosion potion.");
      return;
    endif
    SubtractAmount(ingot, 1);
    points := GetEffectiveSkill(who, SKILLID_TINKERING);
    if (CheckSkill( who, SKILLID_TINKERING, -1, points/2 ))
      SetObjProperty(chest, "trap_type", "3");
      SetObjProperty(chest, "trap_strength", (points - 10));
      SetObjProperty(chest, "oldscript", chest.usescript);
      SendSysMessage(who, "The carefully place the trap on the container");
      chest.usescript := ":tinkering:tinkerTraps";
      SetObjProperty(chest, "trapper", who.serial);
      CheckToolWear (who, item, SKILLID_TINKERING);
    else
      results := RandomInt(9) + 1;
      if (results == 1)
        the_damage := (RandomInt(19) + 1) + (points - 10);
        SendSysMessage(who, "You fail, and set off the explosion!");
        PlayObjectCenteredEffect( who,  0x36b0,5,0 );
        PlaySoundEffect( who, 0x0208);
        ApplyRawDamage(who, the_damage);
      else
        SendSysMessage(who, "You failed to properly place the trap");
      endif
    endif
    counter := counter + 1;
  endwhile
endfunction

function resourcecheck(who, use_on, type,check := 0)
  var the_type;
  if((use_on.objtype >= 0x6309) && (use_on.objtype <= 0x6315) || (use_on.objtype = 0x1be9) ||
    (use_on.objtype = 0x631b) || (use_on.objtype = 0x631d) || (use_on.objtype = 0x631f))
  	the_type := "metal";
  endif
  if ((use_on.objtype = 0x1bdd) || (use_on.objtype = 0x1bd7) || (use_on.objtype >= 0x7051) && (use_on.objtype <= 0x7057))
  	the_type := "wood";
  endif
  if (use_on.objtype = 0xee19)
  	the_type := "clay";
  endif
  if (use_on.objtype = 0xee20)
  	the_type := "glass";
  endif
  if(the_type == type)
    return 1;
  elseif(check)
  	return 0;
  else
    if(type == "wood")
      SendSysMessage(who, "You cannot make wooden items out of other material.");
    elseif(type == "metal")
      SendSysMessage(who, "You cannot make metal items out of other material.");
    elseif(type == "clay")
      SendSysMessage(who, "You cannot make clay items out of other material.");
    elseif(type == "glass")
      SendSysMessage(who, "You cannot make glass items out of other material.");
    endif
    return 0;
  endif
endfunction

function ComposeClaySubMenu(who)
  var num := 2;
  var skill := (GetEffectiveSkill(who, SKILLID_TINKERING) + 20);
  var color := 0;
  while(num < 9)
    case(num)
       2: GFPage(2);        // Page 2 - Kitchenware
          if(skill >= Cint(tinker_cfg[0x1009]."skill"))
            color := 900;
            GFButtonIDC(120, 180, 210, 211, 1, 0x1009);
          endif
          GFTextLine( 70, 150, color, "Wash Basin");
          GFTilePic( 80, 180, 0x1009);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x09d7]."skill"))
            color := 900;
            GFButtonIDC(260, 180, 210, 211, 1, 0x09d7);
          endif
          GFTextLine(230, 150, color, "Plate");
          GFTilePic(210, 180, 0x09d7);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x9ad]."skill"))
            color := 900;
            GFButtonIDC(390, 180, 210, 211, 1, 0x9ad);
          endif
          GFTextLine(350, 150, color, "Clay Pitcher");
          GFTilePic(350, 180, 0x9ad);
          color := 0;
       3: GFPage(3);        // Page 3 - Vases
          if(skill >= Cint(tinker_cfg[0x0b46]."skill"))
            color := 900;
            GFButtonIDC(120, 180, 210, 211, 1, 0x0b46);
          endif
          GFTextLine( 70, 150, color, "Small Vase");
          GFTilePic( 80, 180, 0x0b46);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x0b48]."skill"))
            color := 900;
            GFButtonIDC(260, 180, 210, 211, 1, 0x0b48);
          endif
          GFTextLine(190, 150, color, "Small Vase");
          GFTilePic(210, 180, 0x0b48);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x0b45]."skill"))
            color := 900;
            GFButtonIDC(400, 180, 210, 211, 1, 0x0b45);
          endif
          GFTextLine(370, 150, color, "Large Vase");
          GFTilePic(350, 180, 0x0b45);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x0b47]."skill"))
            color := 900;
            GFButtonIDC(120, 240, 210, 211, 1, 0x0b47);
          endif
          GFTextLine( 70, 210, color, "Large Vase");
          GFTilePic( 70, 230, 0x0b47);
          color := 0;
       4: GFPage(4);        // Page 4 - Flowerpots
          if(skill >= Cint(tinker_cfg[0x11c6]."skill"))
            color := 900;
            GFButtonIDC(120, 180, 210, 211, 1, 0x11c6);
          endif
          GFTextLine( 70, 150, color, "Flowerpot");
          GFTilePic( 80, 180, 0x11c6);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x11c7]."skill"))
            color := 900;
            GFButtonIDC(260, 180, 210, 211, 1, 0x11c7);
          endif
          GFTextLine(190, 150, color, "Large Flowerpot");
          GFTilePic(210, 180, 0x11c7);
          color := 0;
       5: GFPage(5);        //Page 5 - Statues
          if(skill >= Cint(tinker_cfg[0x1224]."skill"))
            color := 900;
            GFButtonIDC(80, 180, 210, 211, 1, 0x1224);
          endif
          GFTextLine( 50, 150, color, "Statue");
          GFTilePic( 40, 170, 0x1224);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x1225]."skill"))
            color := 900;
            GFButtonIDC(165, 180, 210, 211, 1, 0x1225);
          endif
          GFTextLine(140, 150, color, "Statue");
          GFTilePic(125, 170, 0x1225);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x1226]."skill"))
            color := 900;
            GFButtonIDC(80, 240, 210, 211, 1, 0x1226);
          endif
          GFTextLine( 50, 210, color, "Statue");
          GFTilePic( 40, 230, 0x1226);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x1227]."skill"))
            color := 900;
            GFButtonIDC(165, 240, 210, 211, 1, 0x1227);
          endif
          GFTextLine(140, 210, color, "Statue");
          GFTilePic(125, 230, 0x1227);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x1228]."skill"))
            color := 900;
            GFButtonIDC(80, 310, 210, 211, 1, 0x1228);
          endif
          GFTextLine( 50, 280, color, "Statue");
          GFTilePic( 35, 300, 0x1228);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x12ca]."skill"))
            color := 900;
            GFButtonIDC(165, 310, 210, 211, 1, 0x12ca);
          endif
          GFTextLine(140, 280, color, "Bust");
          GFTilePic(125, 310, 0x12ca);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x12cb]."skill"))
            color := 900;
            GFButtonIDC(250, 180, 210, 211, 1, 0x12cb);
          endif
          GFTextLine(230, 150, color, "Bust");
          GFTilePic(205, 170, 0x12cb);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x1223]."skill"))
            color := 900;
            GFButtonIDC(250, 240, 210, 211, 1, 0x1223);
          endif
          GFTextLine(210, 210, color, "Pedestal");
          GFTilePic(205, 226, 0x1223);
          color := 0;
          if(skill >= Cint(tinker_cfg[0xed8]."skill"))
            color := 900;
            GFButtonIDC(250, 310, 210, 211, 1, 0xed8);
          endif
          GFTextLine(200, 285, color, "Small Gravestone");
          GFTilePic(205, 310, 0xed8);
          color := 0;
          if(skill >= Cint(tinker_cfg[0xedc]."skill"))
            color := 900;
            GFButtonIDC(380, 180, 210, 211, 1, 0xedc);
          endif
          GFTextLine( 320, 150, color, "Large Gravestone");
          GFTilePic( 340, 170, 0xedc);
          color := 0;
          if(skill >= Cint(tinker_cfg[0xedd]."skill"))
            color := 900;
            GFButtonIDC(380, 280, 210, 211, 1, 0xedd);
          endif
          GFTextLine( 320, 250, color, "Large Gravestone");
          GFTilePic( 340, 270, 0xedd);
          color := 0;
          
       6: GFPage(6);        //Page 6 - Alchemy Symbols
          if(skill >= Cint(tinker_cfg[0x181d]."skill"))
            color := 900;
            GFButtonIDC(90, 180, 210, 211, 1, 0x181d);
          endif
          GFTextLine( 45, 150, color, "Symbol 1");
          GFTilePic( 40, 170, 0x181d);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x181e]."skill"))
            color := 900;
            GFButtonIDC(170, 180, 210, 211, 1, 0x181e);
          endif
          GFTextLine(125, 150, color, "Symbol 2");
          GFTilePic(120, 170, 0x181e);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x181f]."skill"))
            color := 900;
            GFButtonIDC(255, 180, 210, 211, 1, 0x181f);
          endif
          GFTextLine(205, 150, color, "Symbol 3");
          GFTilePic(204, 170, 0x181f);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x1821]."skill"))
            color := 900;
            GFButtonIDC(335, 180, 210, 211, 1, 0x1821);
          endif
          GFTextLine( 285, 150, color, "Symbol 4");
          GFTilePic( 285, 170, 0x1821);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x1822]."skill"))
            color := 900;
            GFButtonIDC(420, 180, 210, 211, 1, 0x1822);
          endif
          GFTextLine(370, 150, color, "Symbol 5");
          GFTilePic(370, 170, 0x1822);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x1823]."skill"))
            color := 900;
            GFButtonIDC(90, 240, 210, 211, 1, 0x1823);
          endif
          GFTextLine( 45, 210, color, "Symbol 6");
          GFTilePic( 40, 230, 0x1823);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x1824]."skill"))
            color := 900;
            GFButtonIDC(170, 240, 210, 211, 1, 0x1824);
          endif
          GFTextLine(125, 210, color, "Symbol 7");
          GFTilePic(120, 230, 0x1824);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x1825]."skill"))
            color := 900;
            GFButtonIDC(255, 240, 210, 211, 1, 0x1825);
          endif
          GFTextLine(205, 210, color, "Symbol 8");
          GFTilePic(204, 230, 0x1825);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x1826]."skill"))
            color := 900;
            GFButtonIDC(335, 240, 210, 211, 1, 0x1826);
          endif
          GFTextLine(285, 210, color, "Symbol 9");
          GFTilePic(285, 230, 0x1826);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x1827]."skill"))
            color := 900;
            GFButtonIDC(420, 240, 210, 211, 1, 0x1827);
          endif
          GFTextLine(370, 210, color, "Symbol 10");
          GFTilePic(370, 230, 0x1827);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x1828]."skill"))
            color := 900;
            GFButtonIDC(255, 300, 210, 211, 1, 0x1828);
          endif
          GFTextLine(205, 270, color, "Symbol 11");
          GFTilePic(204, 290, 0x1828);
          color := 0;
       7: GFPage(7);        //Page 7 Misc
/*          if(skill >= Cint(tinker_cfg[4113]."skill"))
            color := 900;
            GFButtonIDC(120, 180, 210, 211, 1, 4113);
          endif
          GFTextLine( 70, 150, color, "Keyring");
          GFTilePic( 80, 180, 4113);
          color := 0;
          if(skill >= Cint(tinker_cfg[2599]."skill"))
            color := 900;
            GFButtonIDC(260, 180, 210, 211, 1, 2599);
          endif
          GFTextLine(190, 150, color, "Candelabra");
          GFTilePic(210, 180, 2599);
          color := 0;
          if(skill >= Cint(tinker_cfg[6225]."skill"))
            color := 900;
            GFButtonIDC(400, 180, 210, 211, 1, 6225);
          endif
          GFTextLine(370, 150, color, "Scales");
          GFTilePic(350, 180, 6225);
          color := 0;
          if(skill >= Cint(tinker_cfg[4112]."skill"))
            color := 900;
            GFButtonIDC(120, 240, 210, 211, 1, 4112);
          endif
          GFTextLine( 70, 210, color, "Iron Key");
          GFTilePic( 80, 240, 4112);
          color := 0;
          if(skill >= Cint(tinker_cfg[5365]."skill"))
            color := 900;
            GFButtonIDC(400, 240, 210, 211, 1, 5365);
          endif
          GFTextLine(370, 210, color, "Spy Glass");
          GFTilePic(350, 240, 5365);
          color := 0;
          if(skill >= Cint(tinker_cfg[2597]."skill"))
            color := 900;
            GFButtonIDC(120, 310, 210, 211, 1, 2597);
          endif
          GFTextLine( 70, 280, color, "Lantern");
          GFTilePic( 80, 310, 2584);
          color := 0;
          if(skill >= Cint(tinker_cfg[6217]."skill"))
            color := 900;
            GFButtonIDC(260, 240, 210, 211, 1, 6217);
          endif
          GFTextLine(220, 210, color, "Heating Stand");
          GFTilePic(210, 240, 6217);
          color := 0;
          if(skill >= Cint(tinker_cfg[4017]."skill"))
            color := 900;
            GFButtonIDC(260, 310, 210, 211, 1, 4017);
          endif
          GFTextLine(220, 280, color, "Forge");
          GFTilePic(210, 300, 4017);
          color := 0;
          if(skill >= Cint(tinker_cfg[4016]."skill"))
            color := 900;
            GFButtonIDC(400, 310, 210, 211, 1, 4016);
          endif
          GFTextLine(370, 280, color, "Anvil");
          GFTilePic(350, 310, 4016);
          color := 0; */
    endcase
    num := num + 1;
  endwhile
  return;
endfunction

function ComposeGlassSubMenu(who)
  var num := 2;
  var skill := (GetEffectiveSkill(who, SKILLID_TINKERING) + 20);
  var color := 0;
  while(num < 9)
    case(num)
       2: GFPage(2);        // Page 2 - Alchemy
          if(skill >= Cint(tinker_cfg[0xf0e]."skill"))
            color := 900;
            GFButtonIDC(120, 180, 210, 211, 1, 0xf0e);
          endif
          GFTextLine( 70, 150, color, "Empty Bottle");
          GFTilePic( 80, 180, 0xf0e);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x1832]."skill"))
            color := 900;
            GFButtonIDC(260, 180, 210, 211, 1, 0x1832);
          endif
          GFTextLine(230, 150, color, "Flask");
          GFTilePic(210, 180, 0x1832);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x1835]."skill"))
            color := 900;
            GFButtonIDC(390, 180, 210, 211, 1, 0x1835);
          endif
          GFTextLine(350, 150, color, "Flask");
          GFTilePic(350, 180, 0x1835);
          color := 0;
       3: GFPage(3);        // Page 3 - Glasses
          if(skill >= Cint(tinker_cfg[0x9b3]."skill"))
            color := 900;
            GFButtonIDC(120, 180, 210, 211, 1, 0x9b3);
          endif
          GFTextLine( 70, 150, color, "Goblet");
          GFTilePic( 80, 180, 0x9b3);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x9A7]."skill"))
            color := 900;
            GFButtonIDC(260, 180, 210, 211, 1, 0x9A7);
          endif
          GFTextLine(190, 150, color, "Glass Pitcher");
          GFTilePic(210, 180, 0x9A7);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x1f81]."skill"))
            color := 900;
            GFButtonIDC(400, 180, 210, 211, 1, 0x1f81);
          endif
          GFTextLine(370, 150, color, "Glass");
          GFTilePic(350, 180, 0x1f81);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x995]."skill"))
            color := 900;
            GFButtonIDC(120, 240, 210, 211, 1, 0x995);
          endif
          GFTextLine( 70, 210, color, "Mug");
          GFTilePic( 70, 230, 0x995);
          color := 0;
       4: GFPage(4);        // Page 4 - Misc
          if(skill >= Cint(tinker_cfg[0xf89]."skill"))
            color := 900;
            GFButtonIDC(120, 180, 210, 211, 1, 0xf89);
          endif
          GFTextLine( 70, 150, color, "Obsidian");
          GFTilePic( 80, 180, 0xf89);
          color := 0;
          if(skill >= Cint(tinker_cfg[0xe2d]."skill"))
            color := 900;
            GFButtonIDC(260, 180, 210, 211, 1, 0xe2d);
          endif
          GFTextLine(190, 150, color, "Crystal Ball");
          GFTilePic(210, 180, 0xe2d);
          color := 0;
    endcase
    num := num + 1;
  endwhile
  return;
endfunction

function ComposeWoodSubMenu(who, item)
  var elm          := FindConfigElem(tinker_cfg, item);
  var skillid      := elm.skillID;
  var skill2       := Cint(elm.skill2);
  var num := 2;
  var skill := (GetEffectiveSkill(who, SKILLID_TINKERING) + 20);
  var color := 0;
  while(num < 9)
    case(num)
       2: GFPage(2);        // Page 2 - Tools
          if(skill >= Cint(tinker_cfg[4144]."skill"))
            color := 900;
            GFButtonIDC(120, 180, 210, 211, 1, 4144);
          endif
          GFTextLine( 70, 150, color, "Jointing Plane");
          GFTilePic( 80, 180, 4144);
          color := 0;
          if(skill >= Cint(tinker_cfg[4140]."skill"))
            color := 900;
            GFButtonIDC(260, 180, 210, 211, 1, 4140);
          endif
          GFTextLine(200, 150, color, "Moulding Plane");
          GFTilePic(210, 180, 4140);
          color := 0;
          if(skill >= Cint(tinker_cfg[4146]."skill"))
            color := 900;
            GFButtonIDC(390, 180, 210, 211, 1, 4146);
          endif
          GFTextLine(330, 150, color, "Smoothing Plane");
          GFTilePic(350, 180, 4146);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x1429]."skill"))
            color := 900;
            GFButtonIDC(120, 240, 210, 211, 1, 0x1429);
          endif
          GFTextLine(70, 210, color, "Dipping Stick");
          GFTilePic(70, 230, 0x1429);
          color := 0;
          if(skill >= Cint(tinker_cfg[0xdbf]."skill"))
            color := 900;
            GFButtonIDC(260, 240, 210, 211, 1, 0xdbf);
          endif
          GFTextLine(200, 210, color, "Fishing Pole");
          GFTilePic(190, 230, 0xdc0);
          color := 0;
       3: GFPage(3);        // Page 3 - Painting
          if(skill >= Cint(tinker_cfg[0xfc1]."skill"))
            color := 900;
            GFButtonIDC(120, 180, 210, 211, 1, 0xfc1);
          endif
          GFTextLine( 50, 150, color, "Paints & Brush");
          GFTilePic( 80, 180, 0xfc1);
          color := 0;
          skill2 := GetEffectiveSkill(who, CInt(tinker_cfg[0xb29]."skillID"));
          if((skill >= CInt(tinker_cfg[0xb29]."skill")) && (skill2 >= CInt(tinker_cfg[0xb29]."skill2")))
            color := 900;
            GFButtonIDC(260, 180, 210, 211, 1, 0xb29);
          endif
          GFTextLine(205, 150, color, "Blank Canvas");
          GFTilePic(210, 180, 0x1915);
          color := 0;
          skill2 := GetEffectiveSkill(who, CInt(tinker_cfg[0x0F66]."skillID"));
          if((skill >= CInt(tinker_cfg[0x0F66]."skill")) && (skill2 >= CInt(tinker_cfg[0x0F66]."skill2")))
            color := 900;
            GFButtonIDC(400, 180, 210, 211, 1, 0x0F66);
          endif
          GFTextLine(370, 150, color, "Easel South");
          GFTilePic(350, 180, 0x0F66);
          color := 0;
          skill2 := GetEffectiveSkill(who, CInt(tinker_cfg[0x0F68]."skillID"));
          if((skill >= CInt(tinker_cfg[0x0F68]."skill")) && (skill2 >= CInt(tinker_cfg[0x0F68]."skill2")))
            color := 900;
            GFButtonIDC(120, 240, 210, 211, 1, 0x0F68);
          endif
          GFTextLine( 70, 210, color, "Easel East");
          GFTilePic( 70, 230, 0x0F68);
          color := 0;
       4: GFPage(4);        // Page 4 - Paper
          if(skill >= Cint(tinker_cfg[0x0E34]."skill"))
            color := 900;
            GFButtonIDC(120, 180, 210, 211, 1, 0x0E34);
          endif
          GFTextLine( 70, 150, color, "Blank Scroll");
          GFTilePic( 80, 180, 0x0E34);
          color := 0;
          if(skill >= Cint(tinker_cfg[0x14eb]."skill"))
            color := 900;
            GFButtonIDC(260, 180, 210, 211, 1, 0x14eb);
          endif
          GFTextLine(190, 150, color, "Blank Map");
          GFTilePic(210, 180, 0x14eb);
          color := 0;
       5: GFPage(5);        // Page 5 - Parts
          if(skill >= Cint(tinker_cfg[4173]."skill"))
            color := 900;
            GFButtonIDC(120, 180, 210, 211, 1, 4173);
          endif
          GFTextLine( 70, 150, color, "Clock Frame");
          GFTilePic( 80, 180, 4173);
          color := 0;
          if(skill >= Cint(tinker_cfg[4187]."skill"))
            color := 900;
            GFButtonIDC(260, 180, 210, 211, 1, 4187);
          endif
          GFTextLine(240, 150, color, "Axle");
          GFTilePic(210, 180, 4187);
          color := 0;
       6: GFPage(6);        // Page 6 - Misc
          if(skill >= Cint(tinker_cfg[4167]."skill"))
            color := 900;
            GFButtonIDC(120, 180, 210, 211, 1, 4167);
          endif
          GFTextLine( 70, 150, color, "Globe");
          GFTilePic( 80, 180, 4167);
          color := 0;
    endcase
    num := num + 1;
  endwhile
  return;
endfunction

function checkMaterial(who, use_on)


 case(use_on.objtype)
     0x6309:  // Iron Ingots
     0xee20:  // Glass
     0x1be9:  // Gold ingot
     0x1bdd:  // Logs
     0x1bd7:  // Boards
             return 1;
  endcase
  
  return 0;

endfunction

function isClay(who, use_on)


 case(use_on.objtype)
     0xee19: if(use_on.color == 0x0609)
               return 1;
             else
               return 0;
             endif
  endcase

  return 0;
  
endfunction



