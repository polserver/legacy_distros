///////////////////////////////////////////////
// archercombat.src
//
// Created 7/26/2002 11:31AM
// Updated 7/26/2002 11:31AM
//
// By Austin Heilman
// http://www.tsse.net
//
// Modified by Birdy 10/18/2002
//       This is a really minor modification to 
// Austin's archercombat nerve.  Mostly just to 
// show what can be done with these new nerves
// he's given us.  :)  The archer will check
// to see if s/he is out of ammunition and if so
// will look for a melee weapon and charge their
// opponent after equipping it.  I leave it up 
// to you to get the weapon in the backpack, but
// I did that in the archersetup nerve in the 
// init nerves folder.  You should also give
// your archer some skill in whatever weapon
// you put in his/her pack in npcdesc.cfg of
// course!
///////////////////////////////////////////////
//
// This nerve requires that the npc have AiSetting
// lines for a "max_range" and a "min_range" to 
// determine when it should shoot.
//
///////////////////////////////////////////////


use uo;
use os;

const UOBJECT_ARROW := 0xf3f;
const UOBJECT_BOLT := 0x1bfb;
const LAYER_HAND1       :=  0x01;   // One handed weapon.
const LAYER_HAND2       :=  0x02;   // Two handed weapon, shield or misc.

include "../ai_include/NPC_Commands";

var meleeWeaps := { 0x13AF, 0x0F49, 0x0F47, 0x0F4B, 0x0F45, 0x13FA, 0x1442,
                    0x143C, 0x0F5C, 0x143A, 0x1438, 0x1406, 0x0F4E, 0x143E, 
                    0x1402, 0x0F63, 0x1404, 0x0F5E, 0x1440, 0x0F51, 0x13FE,
                    0x1401, 0x13B5, 0x13B9, 0x0F43, 0x0E85, 0x13F6, 0x0EC2, 
                    0x0EC4, 0x13B3, 0x0E87, 0x0DF0, 0x13F9, 0x0E8A, 0x0E81,
                    0x0F60
                  };

program CombatNerve(params)
	var nerve_name	:= params[1];
	var npc		:= params[2];
	var opponent	:= params[3].source;
	var settings	:= params[4];
	var alreadyout  := 0;
	
	//Enter combat mode, set the new opponent.
	AI_SetOpponent(npc, opponent);
	
	//Store it here so it does not have to do the math over and over.
	var flee_level := 0;
	if ( settings["flee_script"] )
		flee_level := CInt((GetVitalMaximumValue(npc, "hits") * settings["flee_level"]) / 100);
	endif
	
	//Run until the npc dies.
	while( npc )
		var dist := Distance(npc, opponent);
		if ( GetVital(npc, "hits") < flee_level )
			AI_Disengage(npc);
			AI_Flee(npc, opponent);
			AI_EndNerve(npc, nerve_name);
		elseif ( opponent.dead )
			// Is the opponent dead, yet?
			AI_Disengage(npc);
			AI_WinFight(npc, opponent);
			AI_EndNerve(npc, nerve_name);
		elseif ( (opponent.hidden) || (opponent.concealed) )
			// Did they hide??
			AI_Disengage(npc);
			AI_EndNerve(npc, nerve_name);
		elseif( dist > settings["max_range"]+10 )
			//Did the opponent escape?
			AI_Disengage(npc);
			AI_EndNerve(npc, nerve_name);
		elseif( dist <= settings["min_range"] )
			//Is the opponent too close?
			AI_Move(npc, opponent, NEMOVE_AWAY, NEMOVE_RUN, WAKEUP, 1);
		elseif ( dist >= settings["max_range"])
			//Chase if the opponent is trying to escape			
			AI_Move(npc, opponent, NEMOVE_TOWARD, NEMOVE_RUN, WAKEUP, 1);			
		endif
                
                if (!alreadyout)
                  if (!checkforammunition(npc))
                    alreadyout := 1;
		    var theBow := GetEquipmentByLayer(npc, LAYER_HAND1);
		    MoveItemToContainer(theBow, npc.backpack);
                    EquipItem(npc, GetMeleeWeapon(npc));
                    settings["min_range"] := 0;
                    settings["max_range"] := 2;
                    PrintTextAbove(npc, "*looks shocked to have run out of ammunition!*");
  		    sleepms(600);
                    PrintTextAbove(npc, "Aieeeee!! Die human scum!!");
                  endif
                endif
			
		sleepms(600);
		while ( Events_Waiting() )
			//The brain replies with NPCEVENT_DONE
			//to every event it gets. This cleans
			//all of those events up :)
			wait_for_event(1);
		endwhile
	endwhile
endprogram

function GetMeleeWeapon(who)
  var mypack := EnumerateItemsInContainer( who.backpack );
  
    foreach item in mypack
      if (item.objtype in meleeWeaps)
        return item;
      endif
    endforeach
    
    return error;
  
endfunction

function checkforammunition( who )
    var mypack := EnumerateItemsInContainer( who.backpack );

    foreach item in mypack
        if (( item.objtype == UOBJECT_ARROW ) || ( item.objtype == UOBJECT_BOLT ))
            return 1;
        endif
    endforeach
    
    return 0;
endfunction
