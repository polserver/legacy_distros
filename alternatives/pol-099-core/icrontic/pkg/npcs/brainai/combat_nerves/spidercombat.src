///////////////////////////////////////////////
// spidercombat.src
//
// Created 2/09/2003
// Updated 2/10/2003
//
// By MuadDib
// http://www.icrontic.net
//
///////////////////////////////////////////////
//
// This nerve requires that the npc have AiSetting
// lines for a "max_range" and a "min_range" to
// determine when it should shoot. Also requires
// the AiSetting line "max_webs" for max number of
// webs a single spider can shoot out and exist
// in the world at a time. Be sure to use the
// accompanied itemdesc.cfg and spiderweb scripts.
// They control the timers and count of the webs
// existing for spiders.
//
///////////////////////////////////////////////


use uo;
use os;
use util;

include "../ai_include/NPC_Commands";

program CombatNerve(params)
	var nerve_name	:= params[1];
	var npc		:= params[2];
	var opponent	:= params[3].source;
	var settings	:= params[4];
	var alreadyout  := 0;
	
	//Enter combat mode, set the new opponent.
	AI_SetOpponent(npc, opponent);
	
	//Store it here so it does not have to do the math over and over.
	var flee_level := 0;
	if ( settings["flee_script"] )
		flee_level := CInt((GetVitalMaximumValue(npc, "hits") * settings["flee_level"]) / 100);
	endif
        // Initialize these here
        var webtimer := ReadGameClock();
        var maxweb := 0;
        if(GetObjProperty(npc, "maxwebs"))
          maxweb := GetObjProperty(npc, "maxwebs");
        endif
        
	//Run until the npc dies.
	while( npc )
		var dist     := Distance(npc, opponent);
                webtimer := GetObjProperty(npc, "webtimer");
                maxweb  := GetObjProperty(npc, "maxwebs");
		if ( GetVital(npc, "hits") < flee_level )
			AI_Disengage(npc);
			AI_Flee(npc, opponent);
			AI_EndNerve(npc, nerve_name);
		elseif ( opponent.dead )
			// Is the opponent dead, yet?
			AI_Disengage(npc);
			AI_WinFight(npc, opponent);
			AI_EndNerve(npc, nerve_name);
		elseif ( (opponent.hidden) || (opponent.concealed) )
			// Did they hide??
			AI_Disengage(npc);
			AI_EndNerve(npc, nerve_name);
		elseif( dist > settings["max_range"]+10 )
			//Did the opponent escape?
			AI_Disengage(npc);
			AI_EndNerve(npc, nerve_name);
		endif

		if( (dist >= settings["min_range"]) and dist <= settings["max_range"] )
		   //Is the opponent in range for shooting the web?
                   if( (maxweb <= settings["max_webs"]) and (webtimer >= ReadGameClock()) )
                      shootweb(npc, opponent);
                   endif
                endif
                
		sleepms(600);

		while ( Events_Waiting() )
			//The brain replies with NPCEVENT_DONE
			//to every event it gets. This cleans
			//all of those events up :)
			wait_for_event(1);
		endwhile
	endwhile
endprogram

function shootweb(npc, opponent)

  if (RandomInt(10) != 1)
    return;
  endif
  if (!CheckLineOfSight( npc, opponent ))
    return;
  endif

  var webtype := (RandomInt(2) + 1);
  PrintTextAbove(npc, "The spider spits a web!");
  sleep(1);
  case(webtype)
      1: var web := CreateItemAtLocation(opponent.x, opponent.y, opponent.z, 0x0EE4, 1);
         SetObjProperty(web, "spider", npc.serial);
      2: var web := CreateItemAtLocation(opponent.x, opponent.y, opponent.z, 0x0EE3, 1);
         SetObjProperty(web, "spider", npc.serial);
  endcase
  SetObjProperty(npc, "webtimer", (ReadGameClock() + 5));
  SetObjProperty(npc, "maxwebs", (GetObjProperty(npc, "maxwebs") + 1));

  return 1;

endfunction
