///////////////////////////////////////////////
// merchant.src
//
// Created 2/13/2003
// Updated 2/13/2003
//
// By MuadDib
// http://www.icrontic.net
//
///////////////////////////////////////////////
//
// This allows a merchant to listen to players say
// the commands in the while loop section below.
//
///////////////////////////////////////////////
//
// Unlike the other nerves, this nerve continues running and
// never kills its self. The brain just sends it new events
// when it needs to. In the long run, this is better because
// it will not need to start and stop this nerve and on many
// shards it is something that would be frequently used.
//
///////////////////////////////////////////////
use uo;
use os;

include "../ai_include/NPC_Commands";

program ListenNerve(params)
	var nerve_name	:= params[1];
	var npc		:= params[2];
	var ev		:= params[3];
	
	var talker := ev.source;
	var speech := ev.text;
	
	while( npc )
		speech := lower(speech);
                var dist := Distance(npc, talker);
                // They are trying to buy something
		if ( (speech["buy"]) || (speech["purchase"]) )
			if ( CheckLineOfSight(npc, talker) )
				AI_Turn(npc, talker, NETURN_TOWARD);
				
                                var newname := splitwords(npc.name);
                                newname := newname[1];
                                if( newname[len(newname)] == "," )
                                  newname := newname[1,len(newname)-1];
                                endif
                                if( dist <= settings["too_close"] )
                                  AI_Speak(npc, "Ah, please my lord, you are too close.");
                                else
                                  var res;
                                  res := SendBuyWindow( ev.source, inv_fs, self(), inv_pb );
                                    if (!res)
                                      print( "SendBuyWindow failed: " + res.errortext );
                                    endif
                                endif
			endif
                // They are trying to sell something
                elseif ( (speech["sell"]) )
			if ( CheckLineOfSight(npc, talker) )
				AI_Turn(npc, talker, NETURN_TOWARD)
    
                                var res := SendSellWindow( talker, npc(), inv_fs, inv_pb, inv_1c );
                                if (res)
                                  PrintTextAbovePrivate( self(), "Can I help thee?", ev.source );
                                else
                                   print( "SendSellWindow failed: " + res.errortext );
                                endif
                // They are trying to sell all of a type
                elseif ( (speech["sell all"]) )
			if ( CheckLineOfSight(npc, talker) )
				AI_Turn(npc, talker, NETURN_TOWARD)




		endif





		
		ev := wait_for_event(900);
		if ( ev )
			case ( ev.type )
				SYSEVENT_SPEECH:
					talker := ev.source;
					speech := ev.text;
				NPCEVENT_DONE:
					talker := 0;
					speech := "";
			endcase
		else
			//Incase... 900 seconds went by and no one else talked
			//and for some reason the brain never replied with NPCEVENT_DONE
			talker := 0;
			speech := "";
		endif
	endwhile
	
endprogram
