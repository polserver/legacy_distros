use uo;
use os;
use basic;

include "include/eventid";

program SignListener( sign )
  RegisterForSpeechEvents( sign, 30 );
  var decaytime;
  var friendinfo;
  var coownerinfo;
  var homeinfo;
  var owner;
  var sec;
  var indf;
  var indc;
  var ev;
  while (sign)
    homeinfo := GetObjProperty(sign,"homeinfo");
    owner    := homeinfo[1];
    sec := 0;
    friendinfo := GetObjProperty(sign,"friends");
    coownerinfo := GetObjProperty(sign,"coowners");
    ev := wait_for_event( 10 );
    indf := returnindex(friendinfo, ev.source.serial);
    indc := returnindex(coownerinfo, ev.source.serial);
    if ( (ev.source.x >= homeinfo[2]) and (ev.source.x <= homeinfo[4]) and (ev.source.y >= homeinfo[3]) and (ev.source.y <= homeinfo[5]) and (GetObjProperty( sign , "owneracct" ) = ev.source.acctname ));
      sec := 3;
    elseif (indc > 0)
      sec := 2;
    elseif(indf > 0)
      sec := 1;
    endif
    decaytime := getobjproperty(sign,"decay");
    if ((decaytime) and (!getobjproperty(sign,"nodecay")))
      var tname;
      var newname := getobjproperty(sign,"signname");
      if (ReadGameClock() > decaytime)
        demolish(sign);
      elseif ( (decaytime - ReadGameClock() ) > 861000 )
        tname := newname + "     [this house is like new]";
        setname(sign, tname);
      elseif ( (decaytime - ReadGameClock() ) > 604800 )
        tname := newname + "     [this house is slightly worn]";
        setname(sign, tname);
      elseif ( (decaytime - ReadGameClock() ) > 259200 )
        tname := newname + "     [this house is fairly worn]";
        setname(sign, tname);
      elseif ( (decaytime - ReadGameClock() ) > 86400 )
        tname := newname + "     [this house is greatly worn]";
        setname(sign, tname);
      else
        tname := newname + "     [this house is in danger of collapsing]";
        setname(sign, tname);
      endif 
    endif
    if (1)
      if (ev)
        if (ev.type = EVID_SPEECH)
          if (sec > 0);
            handle_speech( ev, sign, sec );
          endif
        endif
      endif
    endif
  endwhile
endprogram

function demolish(sign)
  var homeinfo := GetObjProperty(sign,"homeinfo");
  var nwx     := homeinfo[2];
  var nwy     := homeinfo[3];
  var sex     := homeinfo[4];
  var sey     := homeinfo[5];
  var item := ListObjectsInBox( nwx, nwy, -50, sex, sey+1, 50 );
  var builtdeed := SystemFindObjectBySerial( GetObjProperty( sign, "builtdeed") );
  destroyitem(builtdeed);
  foreach itemt in item
    if (getobjproperty(itemt,"secure") =1)
      eraseobjproperty(itemt,"secure");
      if((getobjproperty(itemt,"secure") = 1) and (itemt.movable = 0))
        var oldscript := getobjproperty(itemt,"oldscript");
        if (oldscript = error)
          oldscript := "";
        endif
        itemt.usescript := oldscript;
        itemt.movable := 1;
        EraseObjProperty( itemt , "houseserial" );
        EraseObjProperty( itemt , "oldscript" );
        var newbox := SystemFindObjectBySerial( GetObjProperty( itemt, "boxserial") );
        var items := enumerateitemsincontainer(newbox);
        foreach item in items
          moveitemtocontainer(item, itemt);
        endforeach
        destroyitem(newbox);
        EraseObjProperty( itemt, "boxserial");
      endif
    elseif ((GetObjProperty( itemt , "lockeddown" ) = 1) and (itemt.movable = 0))
      itemt.movable := 1;
      eraseobjproperty(itemt, "lockeddown");
      SetObjProperty( sign, "numlockdowns" , GetObjProperty( sign, "numlockdowns") + 1 );
    elseif (getobjproperty(itemt,"lockid"))
      itemt.locked := 0;
      eraseobjproperty(itemt,"lockid");
      eraseobjproperty(itemt,"decay");
    elseif ((itemt.movable = 0) and ((itemt.x != sign.x) and (itemt.y != sign.y)))
      destroyitem(itemt);
    endif
  endforeach
  eraseobjproperty(sign,"owneracct");
  eraseobjproperty(sign,"friendinfo");
  eraseobjproperty(sign,"builtdeed");
  eraseobjproperty(sign,"homeinfo");
  eraseobjproperty(sign,"decay");
  eraseobjproperty(sign,"lockid");
  eraseobjproperty(sign,"numsecure");
  eraseobjproperty(sign,"numlockdowns");
  eraseobjproperty(sign,"lastownername");
  sign.name := "an abandoned house";
  sign.graphic := 0xbfc;
  return;
endfunction

function handle_speech( event, sign, sec)
  var text := lower( event.text );
  if(( text["i wish to lock this down"]) and (sec >=2))
    HouseFunction(sign, event, 1 );
  elseif(( text["i wish to release this"]) and (sec >=2))
    HouseFunction(sign, event, 2 );
  elseif(( text["i wish to secure this"]) and (sec >=2))
    secure(sign, event );
  elseif(( text["i wish to unsecure this"]) and (sec >=2))
    unsecure(sign, event );
  elseif(( text["remove thyself"]) and (sec >= 1))
    remove(sign, event);
  elseif(( text["i ban thee"]) and (sec >= 1))
    banish(sign, event);
  endif
endfunction

function banish(sign, event)
  var who := event.source;
  var homeinfo := GetObjProperty(sign,"homeinfo");
  var nwx := homeinfo[2];
  var nwy := homeinfo[3];
  var sex := homeinfo[4];
  var sey := homeinfo[5];
  if ((who.x >= nwx) and (who.x <= sex) and (who.y >= nwy) and (who.y <= sey)) 
    sendsysmessage(who,"target the person you wish to banish");
    var idiot := target(who);
    if (!idiot)
      sendsysmessage(who,"cancelled");
      return;
    elseif (idiot.mana = error)
      sendsysmessage(who,"you cannot ban items");
      return;
    endif
    if ((idiot.x >= nwx) and (idiot.x <= sex) and (idiot.y >= nwy) and (idiot.y <= sey)) 
      var enemy := getobjproperty(sign,"enemies");
      if (!enemy)
        enemy := {};
      endif
      if ((isenemy(sign, idiot) = 0) and (isfriend(sign, idiot) =0) and (iscoowner(sign, idiot) = 0) and (idiot.serial != who.serial) and ((who.x >= nwx) and (who.x <= sex) and (who.y >= nwy) and (who.y <= sey)) and (idiot.cmdlevel < 2))
        MoveCharacterToLocation( idiot, sign.x, sign.y, sign.z, MOVECHAR_FORCELOCATION);
        sendsysmessage(idiot,"you have been ejected from the house");
        enemy.append(idiot.serial);
        setobjproperty(sign,"enemies", enemy);
        return;
      elseif ((isfriend(sign, idiot) =1) or (iscoowner(sign, idiot) = 1) or (idiot.acctname = getobjproperty(sign,"owneracct")))
        sendsysmessage(who,"you cannot ban friends");
        return;
      elseif (idiot.serial = who.serial)
        sendsysmessage(who,"you cannot ban yourself");
        return;
      elseif (isenemy(sign, idiot) = 1)
        MoveCharacterToLocation( idiot, sign.x, sign.y, sign.z, MOVECHAR_FORCELOCATION);
        sendsysmessage(idiot,"you have been ejected from the house");
        sendsysmessage(who,"that person is already an enemy");
        return;
      else
        sendsysmessage(who,"you cannot do that!");
        return;
      endif
    else
      sendsysmessage(who,"that person isnt inside the house.");
      return;
    endif
  else
    sendsysmessage(who,"you must be in a house to do this");
    return;
  endif
endfunction

function remove(sign, event)
  var who := event.source;
  var homeinfo := GetObjProperty(sign,"homeinfo");
  var nwx := homeinfo[2];
  var nwy := homeinfo[3];
  var sex := homeinfo[4];
  var sey := homeinfo[5];
  if ((who.x >= nwx) and (who.x <= sex) and (who.y >= nwy) and (who.y <= sey)) 
    sendsysmessage(who,"target the person you wish to remove");
    var idiot := target(who);
    if (!idiot)
      sendsysmessage(who,"cancelled");
      return;
    elseif (idiot.mana = error)
      sendsysmessage(who,"you cannot eject items");
      return;
    endif
    if ((idiot.x >= nwx) and (idiot.x <= sex) and (idiot.y >= nwy) and (idiot.y <= sey)) 
      if ((isfriend(sign, idiot) =0) and (iscoowner(sign, idiot) = 0) and (idiot.serial != who.serial) and ((who.x >= nwx) and (who.x <= sex) and (who.y >= nwy) and (who.y <= sey)) and (idiot.cmdlevel < 2))
        MoveCharacterToLocation( idiot, sign.x, sign.y, sign.z, MOVECHAR_FORCELOCATION);
        sendsysmessage(idiot,"you have been ejected from the house");
        return;
      elseif ((isfriend(sign, who) =1) or (iscoowner(sign, who) = 1) or (who.acctname = getobjproperty(sign,"owneracct")))
        sendsysmessage(who,"you cannot eject friends");
        return;
      elseif (idiot.serial = who.serial)
        sendsysmessage(who,"you cannot eject yourself");
        return;
      else
        sendsysmessage(who,"you cannot do that!");
      endif
    else
      sendsysmessage(who,"that person isnt inside the house.");
      return;
    endif
  else
    sendsysmessage(who,"you must be in a house to do this");
    return;
  endif
endfunction

function HouseFunction( house, event, num )
    var itemt := Target( event.source , TGTOPT_NOCHECK_LOS );
    if(!itemt)
      SendSysmessage( event.source, "Cancelled." );
      return;
    endif
    var homeinfo := GetObjProperty(house,"homeinfo");
    var nwx := homeinfo[2];
    var nwy := homeinfo[3];
    var sex := homeinfo[4];
    var sey := homeinfo[5];
    var inside := 0;
    var box := ListObjectsInBox( nwx, nwy, -100, sex, sey, 100 );
    foreach item in box
      if (itemt.serial = item.serial)
        inside := 1;
      endif
    endforeach
    if( inside = 1)
      case( num )
        1: if( GetObjProperty( house , "numlockdowns" ) > 0 )
             if (itemt.movable = 1)
               itemt.movable := 0;
               SetObjProperty( itemt, "lockeddown", 1);
               SetObjProperty( house, "numlockdowns" , GetObjProperty( house, "numlockdowns") - 1 );
               SendSysmessage( event.source , "Locked Down." );
             else
               sendsysmessage(event.source, "that is not yours to lock down!");
             endif
           else
             SendSysmessage( event.source , "The house has no more lockdowns remaining." );
           endif
        2: if (GetObjProperty( itemt , "lockeddown" ) and (itemt.movable = 0))
             itemt.movable := 1;
             eraseobjproperty(itemt, "lockeddown");
             SetObjProperty( house, "numlockdowns" , GetObjProperty( house, "numlockdowns") + 1 );
             SendSysmessage( event.source , "Released." );
           else
             sendsysmessage(event.source, "that is not yours to release");
           endif
      endcase
    else
      SendSysmessage( event.source , "That is not inside the building." );
    endif
endfunction

function secure( house, event )
  var itemt := Target( event.source );
  if(!itemt)
    SendSysmessage( event.source, "Canceled." );
    return;
  endif
  if(itemt.movable = 0)
    if (getobjproperty(itemt,"lockeddown") =1)
      SendSysmessage( event.source, "securing this container. your house will be credited with one lockdown." );
      SetObjProperty( house, "numlockdowns" , GetObjProperty( house, "numlockdowns") + 1 );
      eraseobjproperty(itemt,"lockeddown");
    else
      SendSysmessage( event.source, "you cannot secure that." );
      return;
    endif
  endif
  if(GetObjProperty( house , "numsecure" ))
    var homeinfo := GetObjProperty(house,"homeinfo");
    var nwx := homeinfo[2];
    var nwy := homeinfo[3];
    var sex := homeinfo[4];
    var sey := homeinfo[5];
    var inside := 0;
    var box := ListObjectsInBox( nwx, nwy, -500, sex, sey, 50 );
    foreach item in box
      if (itemt.serial = item.serial)
        inside := 1;
      endif
    endforeach
    if (inside)
      var newbox := CreateItemInContainer( itemt, itemt.objtype, 1);
      var boxin := enumerateitemsincontainer(itemt);
      foreach item in boxin
      if (newbox.serial != item.serial)
        moveitemtocontainer(item, newbox);
      endif
      endforeach
      itemt.movable := 0;
      SetObjProperty( itemt, "boxserial" , newbox.serial );
      SetObjProperty( itemt, "houseserial" , house.serial );
      SetObjProperty( itemt, "secure" , 1);
      var oldscript := itemt.script;
      setobjproperty(itemt,"oldscript", oldscript);
      itemt.usescript := ":housing:securecont";
      SetObjProperty( house, "numsecure" , GetObjProperty( house, "numsecure") - 1 );
      SetObjProperty( house, "owneracct", event.source.acctname);
      SendSysmessage( event.source , "Container is secure." );
    else
      SendSysmessage( event.source , "You cannot secure that there.");
    endif
  else
    SendSysmessage( event.source , "The house has no more secure containers remaining." );
  endif
endfunction

function unsecure( house, event )
  var itemt := Target( event.source );
  if(!itemt)
    SendSysmessage( event.source, "Canceled." );
    return;
  endif
  if (!getobjproperty(itemt,"secure") =1)
    sendsysmessage(event.source," you cannot unsecure that");
    return;
  endif
  eraseobjproperty(itemt,"secure");
    if(GetObjProperty( itemt , "houseserial" ) = house.serial)
      var lockdowns := GetObjProperty( house , "numlockdowns" );
      var oldscript := getobjproperty(itemt,"oldscript");
      if (oldscript = error)
        oldscript := "";
      endif
      itemt.usescript := oldscript;
      SetObjProperty( house, "numsecure" , GetObjProperty( house, "numsecure") + 1 );
      EraseObjProperty( itemt , "houseserial" );
      EraseObjProperty( itemt , "oldscript" );
      var newbox := SystemFindObjectBySerial( GetObjProperty( itemt, "boxserial") );
      var items := enumerateitemsincontainer(newbox);
      foreach item in items
        moveitemtocontainer(item, itemt);
      endforeach
      EraseObjProperty( itemt, "boxserial");
      destroyitem(newbox);
      if ( lockdowns > 0 )
        SetObjProperty( itemt, "lockeddown", 1);
        SetObjProperty( house, "numlockdowns" , lockdowns - 1 );
        SendSysmessage( event.source , "the container is locked down and your house has been credited one secure container." );
      else
        itemt.movable := 1;
        SendSysmessage( event.source , "the container is no longer locked down and your house has been credited one secure container." );  
      endif
    else
      SendSysmessage( event.source , "that is not secure." );
    endif
endfunction

function iscoowner(sign, who)
  var coownerinfo := getobjproperty(sign,"coowners");
  var ind := returnindex(coownerinfo, who.serial);
  if (ind > 0)
    return 1;
  endif
endfunction

function isenemy(sign, who)
  var enemyinfo := getobjproperty(sign,"enemies");
  var ind := returnindex(enemyinfo, who.serial);
  if (ind > 0)
    return 1;
  endif
endfunction

function isfriend(sign, who)
  var friendinfo := getobjproperty(sign,"friends");
  var ind := returnindex(friendinfo, who.serial);
  if (ind > 0)
    return 1;
  endif
endfunction

function ReturnIndex(info, information)
  var i;
  for (i := 0; i <= len(info); i := i + 1)
    if (info[i] = information)
      return i;
    endif
  endfor
  return 0;
endfunction
