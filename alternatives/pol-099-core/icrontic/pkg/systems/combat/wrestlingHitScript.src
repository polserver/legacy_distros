use uo;
use os;
use cfgfile;

include "hitScriptInc";
include "include/statMod"; // Per wrestle stun/disarm

var npccfgfile := ReadConfigFile( "::npcdesc" );


program WrestlingHitScript(attacker, defender, weapon, armor, basedamage, rawdamage)
  var stunpunch := GetObjProperty(attacker,"StunMode");
  var disarmpunch := GetObjProperty(attacker,"DisarmMode");
  var chance := RandomDiceRoll("1d60+60");  //i just made this up temporarily to check for a successfull move, change as needed
  var anatomyskill := CInt(GetEffectiveSkill(attacker, SKILLID_ANATOMY));
  var armsloreskill := CInt(GetEffectiveSkill(attacker, SKILLID_ARMSLORE));
  var wrestlingskill := CInt(GetEffectiveSkill(attacker, SKILLID_WRESTLING));
  var hand1 := GetEquipmentByLayer(defender, 1);
  var hand2 := GetEquipmentByLayer(defender, 2);
  var bpack := GetEquipmentByLayer(defender, 21);
  if(stunpunch)
    if((chance < anatomyskill) and (chance < wrestlingskill))
	SendSysMessage(attacker, "You stun your opponent!");
	PlaySoundEffect(defender, SFX_SPELL_PARALYZE );
	SendSysMessage(defender, "You are stunned and cannot move!");
        start_script(":spells:para", {defender, 10});
//	DoTempMod(defender, "p" , 1, 10);
	ApplyStaminaDamage(attacker, 15);
	SetObjProperty(attacker,"StunMode",0);
	SetObjProperty(attacker,"WrestleTimer",ReadGameClock() + 10);
    else
	SendSysMessage(attacker, "You fail to stun your opponent.");
	ApplyStaminaDamage(attacker, 10);
    endif
    return;
  endif
  if(disarmpunch)
   if(hand1)
    if((chance < armsloreskill) and (chance < wrestlingskill))
	SendSysMessage(attacker, "You disarm your opponent!");
	PlaySoundEffect(defender, SFX_50);
	MoveItemToContainer( hand1, bpack, x := -1, y := -1 );
	ApplyStaminaDamage(attacker, 15);
	SetObjProperty(attacker,"DisarmMode",0);
	SetObjProperty(attacker,"WrestleTimer",ReadGameClock() + 10);
    else
	SendSysMessage(attacker, "You fail to disarm your opponent.");
	ApplyStaminaDamage(attacker, 15);
    endif
   elseif(hand2)
      if((chance < armsloreskill) and (chance < wrestlingskill))
	SendSysMessage(attacker, "You disarm your opponent!");
	PlaySoundEffect(defender, SFX_50);
	MoveItemToContainer( hand2, bpack, x := -1, y := -1 );
	ApplyStaminaDamage(attacker, 15);
	SetObjProperty(attacker,"DisarmMode",0);
	SetObjProperty(attacker,"WrestleTimer",ReadGameClock() + 10);
    else
	SendSysMessage(attacker, "You fail to disarm your opponent.");
	ApplyStaminaDamage(attacker, 15);
    endif
   else
     SendSysMessage(attacker, "Your opponent is not armed!");
     ApplyStaminaDamage(attacker, 15);
     SetObjProperty(attacker,"DisarmMode",0);
     SetObjProperty(attacker,"WrestleTimer",ReadGameClock() + 10);
   endif
   return;
  endif
  if(defender == attacker)
    SendSysMessage(attacker, "No Cheating");
    ApplyRawDamage(attacker, 1000);
    return;
  endif
  if((attacker.npctemplate == "townguard") or (attacker.npctemplate == "playervendor"))
    ApplyRawDamage(defender, 1000);
    return;
  endif
  if(defender.isA(POLCLASS_NPC))
    var damagedsound := CInt(npccfgfile[defender.npctemplate].damagedsound);
    if(damagedsound)
      PlaySoundEffect(defender, damagedsound);
    endif
    PerformAction(defender, 0xa);
    basedamage := basedamage * 2;
    rawdamage := rawdamage * 2;
  else
    if(attacker.acctname && defender.acctname)
      basedamage := basedamage / 2;
      rawdamage := rawdamage / 2;
    endif
  endif
  var shield := GetEquipmentByLayer(defender, 2);
  if(shield)
    var bd;
    if(basedamage > 100)
      bd := 100;
    else
      bd := basedamage;
    endif
    if(RandomInt(Cint(GetEffectiveSkill(defender, SKILLID_PARRY) / 2)) >= bd)
      armor := shield;
    endif
  endif
  var weaponhit := GetObjProperty(attacker, "UnUsEd");
  if(attacker.isA(POLCLASS_NPC))
    weaponhit := GetObjProperty(attacker, "OnHit");
  endif
  var armorhit;
  if (armor == 0)
    armorhit := GetObjProperty(defender, "UnUsEd");
  else
    armorhit := GetObjProperty(armor, "UnUsEd");
  endif
  var x;
  var anat;
  if (!weaponhit)
    if (!armorhit)
      run_script_to_completion("reactiveArmorHit", { attacker, defender, weapon, armor, basedamage, rawdamage } );
      rawdamage := GetObjProperty(defender, "TempDamage");
      if(rawdamage < 1)
        rawdamage := 1;
      endif
      if((GetObjProperty(defender, "a_equipped") == "SILVER"))
        run_script_to_completion("silverArmor", { attacker, defender, weapon, armor, basedamage, rawdamage } );
        rawdamage := GetObjProperty(attacker, "TempDamage");
        SendSysMessage(defender, "Your armor absorbs part of the unholy touch!", 3, 40);
      endif
      anat := Cint(GetEffectiveSkill(attacker, SKILLID_ANATOMY) / 20);
      rawdamage := Cint(rawdamage + anat);
      DealDamage(defender, attacker, rawdamage);
      SetObjProperty(defender, "LastHit", {attacker.name, attacker.serial, weapon });
      return;
    else
      SetObjProperty(defender, "TempDamage", rawdamage);
      foreach x in armorhit
        Detach();
        set_critical(0);
        run_script_to_completion(x, { attacker, defender, weapon, armor, basedamage, rawdamage } );
        rawdamage := CInt(GetObjProperty(defender, "TempDamage") );
      endforeach
      EraseObjProperty(defender, "TempDamage");
      run_script_to_completion("reactiveArmorHit", { attacker, defender, weapon, armor, basedamage, rawdamage } );
      rawdamage := GetObjProperty(defender, "TempDamage");
      if((GetObjProperty(defender, "a_equipped") == "SILVER"))
        run_script_to_completion("silverArmor", { attacker, defender, weapon, armor, basedamage, rawdamage } );
        rawdamage := GetObjProperty(attacker, "TempDamage");
        SendSysMessage(defender, "Your armor absorbs part of the unholy touch!", 3, 40);
      endif
      if(rawdamage < 1)
        rawdamage := 1;
      endif
      anat := Cint(GetEffectiveSkill(attacker, SKILLID_ANATOMY) / 20);
      rawdamage := Cint(rawdamage + anat);
      DealDamage(defender, attacker, rawdamage);
      SetObjProperty(defender, "LastHit", {attacker.name, attacker.serial, weapon });
      return;
    endif
  else
    SetObjProperty(defender, "TempDamage", rawdamage);
    foreach x in weaponhit
      Detach();
      set_critical(0);
      run_script_to_completion(CStr(x), { attacker, defender, weapon, armor, basedamage, rawdamage } );
      rawdamage := GetObjProperty(defender, "TempDamage");
    endforeach
    EraseObjProperty(defender, "TempDamage");
    if (rawdamage < 1)
      rawdamage := 1;
    endif
    run_script_to_completion("reactiveArmorHit", { attacker, defender, weapon, armor, basedamage, rawdamage } );
    rawdamage := GetObjProperty(defender, "TempDamage");
      if((GetObjProperty(defender, "a_equipped") == "SILVER"))
        run_script_to_completion("silverArmor", { attacker, defender, weapon, armor, basedamage, rawdamage } );
        rawdamage := GetObjProperty(attacker, "TempDamage");
        SendSysMessage(defender, "Your armor absorbs part of the unholy touch!", 3, 40);
      endif
    if(rawdamage < 1)
      rawdamage := 1;
    endif
    anat := Cint(GetEffectiveSkill(attacker, SKILLID_ANATOMY) / 20);
    rawdamage := Cint(rawdamage + anat);
    DealDamage(defender, attacker, rawdamage);
    SetObjProperty(defender, "LastHit", {attacker.name, attacker.serial, weapon});
    return;
  endif
endprogram
