//////////
// digtreasure.src
//
// Fires when the tool that was created when you decode a treasuremap 
// is double clicked. Target the map you want to dig from and then a
// ground tile. If you are close enough to the chest coords (chestx, y, z
// in the map) according to your mining skill, a chest is created and
// yummy loot is placed in it according to the map's level. The chest 
// should be locked and trapped. The map and the digging tool are 
// deleted after the chest is 'found'. The chest decays in 30 minutes.
//
// Author: Racalac, 4/24/99
// Hint system added by Zulu, zuluhotel@home.com  01/02/2000
// 
/////////


use uo;
use os;
use cfgfile;
use util;

//set_debug(1);

include "util/key";
include "include/client";
include "include/dist";
include "include/objtype";
include "include/starteqp";

Const UOBJECT_TREASURE_CHEST := 0x600A;

program dig_treasure( character , tool )
    SendSysmessage( character, "Target a treasure map to dig from." );
    var map := Target( character , "" );

    if(!map)
       SendSysmessage( character , "Cancelled." );
       return;
    endif
	if (!ReserveItem(map))
		return;
	endif
	if (!ReserveItem(tool))
		return;
	endif

    if( map.objtype != UOBJ_MAP1 )
       SendSysmessage( character , "You must select a treasure map." );
       return;
    endif

    var chestx := GetObjProperty( map , "chestx" );
    var chesty := GetObjProperty( map , "chesty" );
    var chestz := GetObjProperty( map , "chestz" );

    if( (!chestx) or (!chesty) )  //z might be 0!
       SendSysmessage( character , "That is not a treasure map." );
       return;
    endif

    if( character.serial !=  (GetObjProperty( map , "decoder" ) ) )
       SendSysmessage( character , "You must have decoded the map to dig for it." );
       return;
    endif

    SendSysmessage( character , "Target a location to dig." );
    var dig := TargetCoordinates( character );

    if(!dig)
       SendSysmessage( character , "Cancelled." );
       return;
    endif

    if(!CheckLosAt( character , dig.x , dig.y , dig.z ) );
       SendSysmessage( character , "You can't see that." );
       return;
    endif
  
    var range := GetRange( character );
    var distn := coordist( dig.x , dig.y , chestx , chesty );
    var dirns := "None";
    var direw := "None";
	
    if( distn > range )
		if ( dig.y > chesty )
		 dirns := "North";
		endif
		if ( dig.y < chesty )
		 dirns := "South";
		endif
		If ( dig.x < chestx )
	         direw := "East";
		endif
		if ( dig.x > chestx )
	         direw := "West";
		endif
	
		If (direw = "None")
			SendSysmessage( character , "You dig for awhile and have a feeling to travel to the " + dirns + "." );
		else
			SendSysmessage( character , "You dig for awhile and have a feeling to travel to the " + dirns + ", " + direw + "." );
		endif
		return;
    else
      var i := 1;
      var mex := character.x;
      var mey := character.y;
      var parts := {};
      var chest := CreateTreasureChest( map, chestx, chesty, chestz-8 );
      chest.movable := 0;
      chest.locked  :=  1;
      while((i <= 9) && (character.x == mex) && (character.y == mey))
        if((character.x != mex) && (character.y != mey))
          foreach thing in parts
            DestroyItem(thing);
          endforeach
          break;
        endif
        PerformAction(character, 0x0b);
		PlaySoundEffect(character, 0x126);
        sleep(1);
        if(i == 2)
          var patch := CreateItemAtLocation(chestx, chesty, chestz, 2321, 1);
          patch.movable := 0;
          parts.append(patch);
        elseif(i == 3)
          var patch := CreateItemAtLocation(chestx, chesty, chestz, 2322, 1);
          patch.movable := 0;
          parts.append(patch);
        elseif(i == 4)
          var patch := CreateItemAtLocation(chestx, chesty, chestz, 2323, 1);
          patch.movable := 0;
          parts.append(patch);
        elseif(i == 5)
          var patch := CreateItemAtLocation(chestx, chesty, chestz, 2324, 1);
          patch.movable := 0;
          parts.append(patch);
          chest.movable := 1;
          MoveItemToLocation(chest, chest.x, chest.y, chest.z+2, MOVEITEM_FORCELOCATION);
          chest.movable := 0;
        elseif(i == 6)
          var patch := CreateItemAtLocation(chestx, chesty, chestz, 2324, 1);
          patch.movable := 0;
          parts.append(patch);
          chest.movable := 1;
          MoveItemToLocation(chest, chest.x, chest.y, chest.z+2, MOVEITEM_FORCELOCATION);
          chest.movable := 0;
        elseif(i == 7)
          var patch := CreateItemAtLocation(chestx, chesty, chestz, 2324, 1);
          patch.movable := 0;
          parts.append(patch);
          chest.movable := 1;
          MoveItemToLocation(chest, chest.x, chest.y, chest.z+2, MOVEITEM_FORCELOCATION);
          chest.movable := 0;
        elseif(i == 8)
          chest.movable := 1;
          MoveItemToLocation(chest, chest.x, chest.y, chest.z+2, MOVEITEM_FORCELOCATION);
          chest.movable := 0;
          foreach thing in parts
            DestroyItem(thing);
          endforeach
        endif
        i := i + 1;
      endwhile
      if((character.x != mex) || (character.y != mey))
        SendSysMessage(character,"you must stand still while digging.");
        DestroyItem(chest);
        return;
      endif
      var maplevel := CInt(GetObjProperty(map, "level") );
      SetObjProperty(chest, "level", maplevel);
      SetObjProperty(chest, "trap_type", "3");
      var strength := 0;
      case (maplevel)
        1: strength :=  20;
        2: strength :=  40;
        3: strength :=  60;
        4: strength :=  80;
        5: strength := 100;
      endcase
      if ((strength == 0) || (strength == error))
        strength := 20;
      endif
      SetObjProperty(chest, "trap_strength", strength);
      SetObjProperty(chest, "oldscript", chest.usescript);
      chest.usescript := ":tinkering:tinkerTraps";
      var lockid := AllocLockId();
      SetObjProperty( chest, "lockid", lockid );
      chest.locked :=  1;
      chest.movable := 0;
      DestroyItem( map );
      DestroyItem( tool );
      var lvl := GetObjProperty( chest, "level" );
      var cfgfile := ReadConfigFile(":treasuremap:guardians");
      if(!cfgfile)
        SendSysMessage(character,"something is wrong with this map.");
        return;
      endif
      var elem := FindConfigElem( cfgfile, lvl );
      if(!elem)
        SendSysMessage(character,"something is wrong with this map.");
      endif
      var total := GetConfigString( elem, "total" );
      var num := GetConfigInt( elem, "num" );
      var limit := RandomDiceRoll( total );
      var rand;
      var template;
      i := 1;
      for( i := 1; i <= limit; i := i + 1 )
        rand := RandomInt( num ) + 1;
        template := GetConfigString( elem, ("creature" + rand) );
        CreateGuardian( chest, template );
      endfor
      UnloadConfigFile(":treasuremap:guardians");
      SendSysMessage( character, "You unleash the treasure's guardians!" );
      Detach();
      sleep(1800);
      DestroyItem(chest);
    endif

endprogram


function GetRange( character );

    var skill := GetEffectiveSkill( character , SKILLID_MINING );

    if( skill >= 100 )
       return 10;
    elseif( skill >= 90 )
       return 9;
    elseif( skill >= 80 )
       return 8;
    elseif( skill >= 70 )
       return 7;
    elseif( skill >= 60 )
       return 6;
    elseif( skill >= 50 )
       return 5;
    elseif( skill >= 40 )
       return 4;
    elseif( skill >= 30 )
       return 3;
    elseif( skill >= 20 )
       return 2;
    else
       return 1;
    endif

endfunction

function CreateTreasureChest( map , x , y , z )
  z := GetWorldHeight( x, y );
  var chest := CreateItemAtLocation(x, y, z-8, UOBJECT_TREASURE_CHEST, 1);
  chest.movable := 0;
  var lvl := GetObjProperty( map, "level" );
  SetObjProperty(chest, "level", lvl);
  var lootgroup;
  case(lvl)
    1: lootgroup := 5;
    2: lootgroup := 6;
    3: lootgroup := 7;
    4: lootgroup := 8;
    5: lootgroup := 9;
    default: lootgroup := 5;
  endcase
  CreateFromGroup(chest,lootgroup);
  return chest;
endfunction

function CreateGuardian( chest, template )
  var dx := RandomInt( 8 ) - 4;
  var dy := RandomInt( 8 ) - 4;
  var nasty := CreateNpcFromTemplate( template, chest.x+dx, chest.y+dy, chest.z, 0 );
  if( nasty == "<error>" )
    CreateGuardian( chest, template );
  endif
endfunction
