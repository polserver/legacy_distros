use uo;
use os;

include "include/datafile";
include "../../../gumps/gumps";

// Arbitrary button return (id) values.
const BACK_BUTTON	:= 0x9000;

// Used to make getting the return value of a
// script or text command button easier to distinguish
const SCRIPT_START	:= 0xA000;
const CMD_START		:= 0xB000;

// Its easier to use datafiles when they're global.
var data_file := DFOpenDataFile("packages", DF_CREATE);

program Control(who, text)
	if ( !text )
		IndexGump(who);
	else
		InfoGump(who, text);
	endif
endprogram

// *IndexGump(who)
//
// Lists all enabled packages in POL.
// Any package that has an ICP.cfg that is properly
// set up, it will give it a button to view more
// information about that package.
//
function IndexGump(who)
	GFInitGump(0, 0);
	GFResizePic(0, 0, BKGND_SILVERTRIM, 500, 480);
	GFResizePic(15, 15, BKGND_DARK_STONE, 470, 35);
	GFTextMid(15, 20, 470, 1153, "Package List");
	
	GFResizePic(15, 55, BKGND_DARK_STONE, 470, 410);
	GFPage(1);

	var y_pos := 65;
	var counter := 0;
	var pkg_num := 1;
	var page_num := 1;

	var pkg_elems := data_file.keys();
	pkg_elems.sort();
	foreach pkg_name in pkg_elems
		var pkg_info := DFFindElement(data_file, pkg_name);
		var main_info := pkg_info.GetProp("Main");

		GFTextLine(65, y_pos, 2100, main_info.Name);
		if ( main_info.NoSupport )
			GFTextRight(435, y_pos, 32, "[No ICP support!]");
		else
			GFButtonID(30, y_pos, 4005, 4006, 1, pkg_num);
		endif

		pkg_num := pkg_num+1;
		y_pos := y_pos+25;
		counter := counter+1;

		if ( counter >= 15 )
			//Down arrow
			GFButtonPage(455, 435, 2648, 2649, page_num+1);
			page_num := page_num+1;
			GFPage(page_num);
			//Up arrow
			GFButtonPage(455, 65, 2650, 2651, page_num-1);

			y_pos := 65;
			counter := 0;
		endif

		sleepms(2);
	endforeach

	var input := GFSendGump(who);
	input := input[0];
	if ( pkg_elems[input] )
		InfoGump(who, pkg_elems[input]);
	else
		SendSysMessage(who, "Cancelled");
	endif
endfunction

// *InfoGump(who)
//
// Displays general information about a package.
// Also lists scripts that can be run from the gump
// as well as text commands.
//
function InfoGump(who, pkg_name)
	var pkg_info := DFFindElement(data_file, pkg_name);
	var main_info := pkg_info.GetProp("Main");
	var script_list := pkg_info.GetProp("Scripts");
	var cmd_list := pkg_info.GetProp("TextCommands");

	GFInitGump(0, 0);
	GFResizePic(0, 0, BKGND_SILVERTRIM, 500, 480);
	GFResizePic(15, 15, BKGND_DARK_STONE, 470, 120);
	GFResizePic(15, 140, BKGND_DARK_STONE, 470, 325);

	GFTextMid(0, 25, 500, 1153, main_info.Name);

	GFTextLine(30, 60, 2100, "General");
	GFButtonPage(42, 83, 2151, 2154, 1);

	GFTextMid(10, 60, 470, 2100, "Scripts");
	GFButtonPage(233, 83, 2151, 2154, SCRIPT_START);

	GFTextRight(465, 60, 2100, "Commands");
	GFButtonPage(418, 83, 2151, 2154, CMD_START);

	GFPage(1);
	GFTextLine(25, 150, 2100, "Name:");
	GFTextLine(130, 150, 2100, main_info.Name);
	GFTextLine(25, 170, 2100, "Version:");
	GFTextLine(130, 170, 2100, main_info.Version);
	GFTextLine(25, 190, 2100, "Description:");
	GFTextCrop(130, 190, 465, 20, 2100, main_info.Description);

	GFTextLine(25, 230, 2100, "Creator:");
	GFTextLine(130, 230, 2100, main_info.Creator);
	GFTextLine(25, 250, 2100, "Email:");
	GFTextLine(130, 250, 2100, main_info.C_Email);

	GFTextLine(25, 290, 2100, "Maintainer:");
	GFTextLine(130, 290, 2100, main_info.Maintainer);
	GFTextLine(25, 310, 2100, "Email:");
	GFTextLine(130, 310, 2100, main_info.M_Email);
	
	GFButtonID(25, 435, 4014, 4015, 1, BACK_BUTTON);
	GFTextLine(60, 435, 2100, "Back to package list");

	var page_num := SCRIPT_START;

	GFPage(page_num);
	var y_pos := 150;
	var counter := 0;
	var btn_num := SCRIPT_START;
	if ( script_list.size() > 0 )
		foreach script in script_list
			ListScript(who, script, btn_num, y_pos, counter, page_num);
			sleepms(2);
		endforeach
	else
		GFTextMid(0, 250, 500, 1153, "There are no scripts listed for this package.");
	endif

	page_num := CMD_START;
	GFPage(page_num);
	y_pos := 150;
	btn_num := CMD_START;
	if ( cmd_list.size() > 0 )
		foreach script in cmd_list
			ListScript(who, script, btn_num, y_pos, counter, page_num);
			sleepms(2);
		endforeach
	else
		GFTextMid(0, 250, 500, 1153, "There are no text commands listed for this package.");
	endif

	var input := GFSendGump(who);
	input := input[0];
	if ( !input )
		SendSysMessage(who, "Cancelled");
	else
		if ( input == BACK_BUTTON )
			IndexGump(who);
		else
			var script;
			if ( (input > SCRIPT_START) && (input < CMD_START) )
				script := ParseScript(script_list[input-SCRIPT_START]);
				script := script[2];
				SendSysMessage(who, "Starting script ["+script+"]");
			elseif ( input > CMD_START )
				script := ParseScript(cmd_list[input-CMD_START]);
				script := script[2];
				SendSysMessage(who, "Starting text command ["+script+"]");
			endif

			script := start_script(script, who);
			if ( script.errortext )
				SendSysMessage(who, script.errortext);
			endif
		endif
	endif
endfunction

// * ParseScript(script)
//
// Pulls the script line apart, and returns an array
// {cmdlevel, script_path}.
//
function ParseScript(script)
	script := SplitWords(script);
	var cmd_level := 0;
	var script_path := script[1];
	if ( script.size() > 1 )
		cmd_level := CInt(script[1]);
		script_path := CStr(script[2]);
	endif

	return {cmd_level, script_path};
endfunction

// * ListScript(who, script, btn_num, y_pos
// Makes it so listing text commands and scripts
// do not have to be coded redundantly.
//
function ListScript(who, script, byref btn_num, byref y_pos, byref counter, byref page_num)
	var temp := ParseScript(script);
	var cmd_level := temp[1];
	var path := temp[2];

	btn_num := btn_num+1;
	GFTextLine(45, y_pos, 2100, path);
	if ( who.cmdlevel >= cmd_level )
		// Dont show a button to run something, unless the person's
		// command level is high enough.
		GFButtonID(25, y_pos+3, 2117, 2118, 1, btn_num);
	endif
	y_pos := y_pos+20;

	//Check if we need to set it up to make a new page
	counter := counter+1;
	if ( counter > 15 )
		//Down arrow
		GFButtonPage(455, 440, 2648, 2649, page_num+1);
		page_num := page_num+1;
		GFPage(page_num);
		//Up arrow
		GFButtonPage(455, 145, 2650, 2651, page_num-1);

		y_pos := 150;
		counter := 0;
	endif
endfunction
