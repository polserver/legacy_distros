use uo;
use os;

include "include/client";
include "include/spellRestrictions";
include "include/spellAttack";
include "/druid";

Const UOBJ_TEMP_ITEM := 0x122d;

program tidal_wave ( parms )
	var circle := 4;
	var caster;
	var cast_on;

	//if an NPC cast the spell
	if (parms[1] = "#MOB")
		caster := parms[2];
		cast_on := parms[3];

	//otherwise if a player cast the spell
	else
		caster := parms;
		if (!Can_Cast (caster, circle) )
			EraseObjProperty (caster, "#castingdruidspell");
			return;
		endif

		cast_on := CanTargetSpell(caster, circle, TGTOPT_HARMFUL + TGTOPT_CHECK_LOS );
		if (!cast_on)
			SendSysMessage (caster, "Canceled.");
			EraseObjProperty (caster, "#castingdruidspell");
			return;
		endif
	endif

	//allow them to cast another spell now
	SetScriptController( caster );
	EraseObjProperty (caster, "#castingdruidspell");

	//check to see if the spell was reflected
	if (Reflected(cast_on))
		cast_on := caster;
		if (GetObjProperty( caster, "mr") = "1")
			EraseObjProperty(caster, "mr");
			SendSysMessage(caster, "Your magic reflect spell saved you!");
			return;
		endif
	endif

	//set the controler and play a sound effect
	SetScriptController( caster );
	PlaySoundEffect(caster, SFX_SPELL_SUMMON_ELEMENTAL);

	//save the target's location so that the wave doesn't go wacky if they move
	var targettedx := cast_on.x;
	var targettedy := cast_on.y;
	var targettedz := cast_on.z;

	//create the curved wave top
	var wavetop1 := CreateItemAtLocation (targettedx, targettedy, targettedz+110, UOBJ_TEMP_ITEM, 1);
	wavetop1.graphic := 0x350b;
	wavetop1.movable := 0;
	var wavetop2 := CreateItemAtLocation (targettedx, targettedy, targettedz+110, UOBJ_TEMP_ITEM, 1);
	wavetop2.graphic := 0x34ed;
	wavetop2.movable := 0;

	var i;
	var waterfall_array := {};
	var waterfall_tile;

	//create all of the waterfall effect and store them in waterfall_array
	for(i := 10; i >= 0; i := i - 1)
		waterfall_tile := CreateItemAtLocation (targettedx, targettedy, targettedz+i*10, UOBJ_TEMP_ITEM, 1);
		waterfall_tile.graphic := 0x3517;
		waterfall_tile.movable := 0;
		waterfall_array.append (waterfall_tile);
		waterfall_tile := CreateItemAtLocation (targettedx, targettedy, targettedz+i*10, UOBJ_TEMP_ITEM, 1);
		waterfall_tile.graphic := 0x34f9;
		waterfall_tile.movable := 0;
		waterfall_array.append (waterfall_tile);
		sleepms (15);
	endfor

	//make the round puddle at the bottom
	var waterfall_base1 := CreateItemAtLocation (targettedx,   targettedy+1, targettedz, UOBJ_TEMP_ITEM, 1);
	waterfall_base1.graphic := 0x17a1;
	waterfall_base1.movable := 0;
	var waterfall_base2 := CreateItemAtLocation (targettedx+1, targettedy,   targettedz, UOBJ_TEMP_ITEM, 1);
	waterfall_base2.graphic := 0x179d;
	waterfall_base2.movable := 0;
	var waterfall_base3 := CreateItemAtLocation (targettedx,   targettedy-1, targettedz, UOBJ_TEMP_ITEM, 1);
	waterfall_base3.graphic := 0x179f;
	waterfall_base3.movable := 0;
	var waterfall_base4 := CreateItemAtLocation (targettedx-1, targettedy,   targettedz, UOBJ_TEMP_ITEM, 1);
	waterfall_base4.graphic := 0x17a3;
	waterfall_base4.movable := 0;
	var waterfall_base5 := CreateItemAtLocation (targettedx+1, targettedy+1, targettedz, UOBJ_TEMP_ITEM, 1);
	waterfall_base5.graphic := 0x17a7;
	waterfall_base5.movable := 0;
	var waterfall_base6 := CreateItemAtLocation (targettedx-1, targettedy+1, targettedz, UOBJ_TEMP_ITEM, 1);
	waterfall_base6.graphic := 0x17a8;
	waterfall_base6.movable := 0;
	var waterfall_base7 := CreateItemAtLocation (targettedx+1, targettedy-1, targettedz, UOBJ_TEMP_ITEM, 1);
	waterfall_base7.graphic := 0x17a5;
	waterfall_base7.movable := 0;
	var waterfall_base8 := CreateItemAtLocation (targettedx-1, targettedy-1, targettedz, UOBJ_TEMP_ITEM, 1);
	waterfall_base8.graphic := 0x17a6;
	waterfall_base8.movable := 0;
	var waterfall_base9 := CreateItemAtLocation (targettedx,   targettedy,   targettedz, UOBJ_TEMP_ITEM, 1);
	waterfall_base9.graphic := 0x1797;
	waterfall_base9.movable := 0;

	//do the spell damage
	var caster_skill := GetAttribute (caster, SKILLID_ANIMALLORE) + GetAttribute (caster, SKILLID_MAGERY);
	var full_damage := RandomInt (caster_skill/10) + 20;

	send_attack(cast_on, caster, 0);
	ApplyRawDamage( cast_on, DruidResist (caster, cast_on, full_damage) );

	//water sound effect and short sleep
	PlaySoundEffect(cast_on, 0x11);
	sleep (2);

	//destroy the waterfall
	DestroyItem (wavetop1);
	DestroyItem (wavetop2);
	foreach waterfall_tile in waterfall_array
		DestroyItem (waterfall_tile);
		sleepms(10);
	endforeach

	//sleep longer before destroying the puddle
	
	DestroyItem (waterfall_base1);
	DestroyItem (waterfall_base2);
	DestroyItem (waterfall_base3);
	DestroyItem (waterfall_base4);
	DestroyItem (waterfall_base5);
	DestroyItem (waterfall_base6);
	DestroyItem (waterfall_base7);
	DestroyItem (waterfall_base8);
	DestroyItem (waterfall_base9);

endprogram
