// auction  version .6
// by Zulu (zulu@zuluhotel.com)   May 5, 2000

use npc;
use os;
use uo;

include "include/randname";
include "include/eventid";
include "include/client";
include "include/utility"; //storage
include "include/vetement";

global who := 0;

global auctioneer := Self();
global storage, inv_auct, inv_auct_sold;

if (auctioneer.name["<random>"])
	SetName ( auctioneer , RandomName( auctioneer ) );
	set_priority(50);
     Habille( auctioneer , "Clothes" );
    set_priority(1);
endif

storage := FindStorageArea( "Merchant Storage" );

if (!storage)
    exit;
endif

inv_auct := find_or_create_item( storage, "1AUCTION1", 0xE7C );
inv_auct_sold := find_or_create_item( storage, "0AUCTION0", 0xE7C );

if((!inv_auct) or (!inv_auct_sold))
    exit;
endif

EnableEvents (EVID_SPEECH, 2);
EnableEvents (EVID_ITEM_GIVEN);

while (1)
    local item, event := 0;

    event := os::wait_for_event (10);

  if (event.text["hello"])
	who := event.source;
	TurnToward (who);

	Say ("To learn about the auction type help or .auc help");
  endif

  if (event.text["help"])
	who := event.source;
	TurnToward (who);

	Say ("To sell an item: type sell and click on the item");
	Say ("We charge 10% to handle the sale.");
	Say ("Return to any auctioneer to claim your item.");
  endif

 if((event.text["holdbox"]) and (who.cmdlevel>=4))
	who := event.source;
	TurnToward (who);
	sendopenspecialcontainer(who, inv_auct);
	sendopenspecialcontainer(who, inv_auct_sold);
	sendopenspecialcontainer(who, find_or_create_item( storage, "2AUCTION2", 0xE7C ));
  endif

  if (event.text["sell"])
	who := event.source;
	TurnToward (who);

	Say ("What would you like to sell");

	item := Target( who, TGTOPT_NOCHECK_LOS );
	If (!item)
	sendSysMessage( who, "Canceled");
	elseif(ReserveItem(item))
	sell_item(who,item);
	ReleaseItem(item);
	endif

  endif

        if (event.item)
                who := event.source;
                TurnToward (who);
                Load_Ticket_Data (who, event.item);
        endif

endwhile


function sell_item(who,item)
 local money, num1, bartermsg;

	if (totalauctionitems()=9)
	Say ("There are too many items right now.");
	return;
	endif

	if (ownitem(who.backpack,item)=0)
		SendSysMessage( who, "You do not own that.");
		return;
	endif

        if((item.objtype=0x186E) and (item.graphic=5360))
                Say ("You cannot sell that.");
		return;
        endif

	num1 := cint(RequestInput(who, who.backpack, "What is the minimum bid for " +item.desc ));

	if((num1 <0) or (!num1))
	SendSysMessage( who, "Cancelled.");
	return;
	endif

	money := cint( num1*0.1);

	if (money<11)
	money :=10;
	endif

	if (!who.spendgold( money))
	SendSysMessage( who, "You do not have " + (money) + " gold for commissions.");
	return;
	endif

	bartermsg := RequestInput(who, who.backpack, "What is your message (esc for none)" );

	if((bartermsg="") or (!bartermsg))
		bartermsg :="<none>";
	endif

	tellplayers(item.desc, num1,bartermsg,who.name );

        local bid := 0;
	local time := 240;

        SetObjProperty (item, "seller", who.serial);
        SetObjProperty (item, "buyer", who.serial);
        SetObjProperty (item, "sellpack", Cint(who.backpack.serial));
        SetObjProperty (item, "buypack", Cint(who.backpack.serial));
        SetObjProperty (item, "msg", bartermsg );
        SetObjProperty (item, "bid", bid);
        SetObjProperty (item, "starting", num1);
        SetObjProperty (item, "time", ReadGameClock() + time);

        moveitemtocontainer(item, inv_auct);
endfunction


function Load_Ticket_Data (who, ticket)

	if(!ReserveItem(ticket)) return 0; endif
	
	local backpack;
	local foundinpack := 0;

        if((ticket.objtype != 0x186E) and (ticket.graphic != 5360))
                Say ("If you want to auction an item, type sell.");
		ReleaseItem(ticket);
		return;
        endif

        local itemname   := GetObjProperty (ticket, "itemname");
	local itemserial := GetObjProperty (ticket, "itemserial");
	local bid        := GetObjProperty (ticket, "bid");
	local claim;

	Say ("Let me find " + itemname + " for you" );

        backpack := EnumerateItemsInContainer ( inv_auct_sold );

    foreach auction_items in backpack

	if ( auction_items.serial = itemserial)
	   MoveItemToContainer( auction_items, who.backpack, x := -1, y := -1 );
	   DestroyItem (ticket);
	   return;
	endif
	
    endforeach

	Say ("That item was not claimed in time and was destroyed." );
	DestroyItem(ticket);
	return;

endfunction


function tellplayers(itemname, price, msg, name)

local auctioncheck;

foreach chr in EnumerateOnlineCharacters()
   auctioncheck := getobjproperty(chr, "auction");

   if (auctioncheck = "yes")
	if (msg ="<none>")
	SendSysMessage( chr, "New item: " + itemname + " from " + name);
	else
	SendSysMessage( chr, "New item: " + itemname + " from " + name + " msg: " + msg);
	endif

	SendSysMessage( chr, "Starting bid: " + price );
   endif
endforeach
endfunction


function totalauctionitems()

   local backpack := EnumerateItemsInContainer ( inv_auct );
   local totalitems := 0;
   local timeleft;

   foreach auction_items in backpack

   timeleft := (GetObjProperty(auction_items, "time")-ReadGameClock());

   if ((!timeleft) or (timeleft=""))

   else
	totalitems := totalitems + 1;
   endif

   endforeach

   return totalitems;

endfunction

function ownitem(bpack,item)

   local backpack := EnumerateItemsInContainer ( bpack );

   foreach bpitem in backpack

	if (bpitem.serial = item.serial)
	return 1;
	endif

   endforeach

   return 0;

endfunction

