use npc;
use os;
use uo;
use cfgfile;

include "include/speech";
include "include/client";
include "include/eventid";
include "include/randname";
include "include/dist";
include "include/anchors";
include "ai/main/loot";
include "ai/combat/fight";
include "ai/combat/defaultcombatevent";
include "include/vetement";

global configfile := ReadConfigFile("::npcdesc");
global wpncfg := readconfigfile(":combat:itemdesc");
global flee_point := 0;

// TODO: move these to include/client.inc
const UACTION_LOOK_AROUND   := 0x05;
const UACTION_SALUTE        := 0x21;

const HALT_THRESHOLD := 10; // how close before he barks?
global speech := 99;
global me := Self();

if( me.name["<random>"] )
		SetName ( me , RandomName( me ) );
	   set_priority(50);
       Habille( me , GetObjProperty(me,"equipt") );
       set_priority(1);
endif

	if (!me.backpack)
		local newbackpack := CreateItemAtLocation(me.x, me.y, me.z, 0xe75,1);
		EquipItem(me, newbackpack);
	endif


program CastleGuard()

	local npccfg := readconfigfile("npcdesc");
        local speechelem := npccfg[me.npctemplate];
        speech := getconfigstring(speechelem, "speech") ;

    EnableEvents( EVID_ENGAGED + EVID_DISENGAGED + EVID_DAMAGED );
    EnableEvents( EVID_ENTEREDAREA + EVID_LEFTAREA, HALT_THRESHOLD );
    EnableEvents( EVID_OPPONENT_MOVED );
    EnableEvents( EVID_ITEM_GIVEN );
    EnableEvents( EVID_SPEECH , 4);

    SetWarMode( 0 );
    set_priority(100);

    local ev;
	local evtext;
    local next_wander := ReadGameClock() + 10;
    local wanders := 9;
    while (1)
        ev := os::wait_for_event(5);
	if (ev)
        case (ev.type)
            EVID_SPEECH:
		wanders := 0;
		next_wander := readgameclock()+60;
		evtext := lower(ev.text);
		if ( (evtext["guards"]) or (evtext["guards!"]) )
			look_around();
		endif
                check_speech(ev.text, ev.source);
                RespondToSpeech(me,ev.text);
            EVID_ENGAGED:
            EVID_DAMAGED:
		wanders := 0;
		next_wander := readgameclock()+60;
                if (ev.source)
		    say("Die " + ev.source.name + "!" );
		    AddToHateList( ev.source );
                    Fight( ev.source );
                endif
            EVID_ENTEREDAREA:
		wanders := 0;
                PerformAction( me, UACTION_LOOK_AROUND );
		look_around();
            EVID_ITEM_GIVEN:
		wanders := 0;
		next_wander := readgameclock()+60;
		TakeItem(ev.source,ev.item);
        endcase
	endif

       if (ReadGameClock() >= next_wander)
		wanders:=wanders+1;
		wander();
                next_wander := ReadGameClock() + 10;
		if (wanders>10)
			sleepmode();
			wanders := 0;
		endif
        endif

    endwhile
endprogram

function CloseDistance( opponent )
    case Distance( me, opponent )
        1:              // the most likely, so first 
        0:
            return 1;
        default:
            RunToward( opponent );
            return 0;
    endcase
endfunction

function look_around()

        foreach critter in listmobilesnearlocation(me.x, me.y, me.z, 15)
                if ((critter.npctemplate) and (critter.script != "tamed") )
                	if (!configfile[critter.npctemplate].guardignore)
						say("Ah ha! " + critter.name);
                        fight(critter);
                	endif
				else
					CheckForCriminals(critter);
              	endif
        endforeach

endfunction

function sleepmode()

	foreach critter in ListMobilesNearLocation( me.x,me.y,me.z, 32 )
          if (!critter.npctemplate)
		return 0;
          endif
	endforeach

	local ev;

	while (1)
		ev := os::wait_for_event( 120 );

		repeat
		if (ev)
		case (ev.type)
                	EVID_ENGAGED:
			EVID_DAMAGED:
			EVID_ENTEREDAREA:
				if (!ev.source.npctemplate)
					CheckForCriminals(ev.source);
					return 0;
				endif
		endcase
		endif
		until (! (ev := os::wait_for_event(120)) );

	endwhile      

endfunction       

function CheckForCriminals(jerk)

	if (jerk.criminal)
		say("Stop Criminal!");
		AddToHateList( jerk );
		fight(jerk);
	elseif ( CheckHateList(jerk) )
		say("You're not welcome in this town, "+ jerk.name );
		fight(jerk);
	endif

endfunction

function AddToHateList(crim)

	if (crim.npctemplate)
		return;
	endif

	local Crooks := { };
	if (!GetObjProperty(me,"crooks") )
		Crooks[1] := crim.serial;
		SetObjProperty(me,"crooks",crooks);
		return;
	else
		Crooks := GetObjProperty(me,"crooks");
	endif

	local i;
	foreach crook in crooks;
		if ( crook = crim.serial )
			return;//already hate him.
		endif
	endforeach

	if (len(crooks)>3)
		crooks[ RandomInt(3)+1 ] := crim.serial;
	else
		crooks[ len(crooks)+1 ] := crim.serial;
	endif

	SetObjProperty(me,"crooks",crooks);

endfunction

function CheckHateList( you )

	if (you.npctemplate)
		return;
	endif

	local Crooks := { };
	if (!GetObjProperty(me,"crooks") )
		return 0;//can't be on my list cause I don't have one
	else
		Crooks := GetObjProperty(me,"crooks");
	endif


	local i;
	foreach crook in crooks;
		if ( crook = you.serial )
			return 1;//hate you.
		endif
	endforeach

	return 0;

endfunction

function cleareventque()

	local ev;
	repeat
	until (! (ev := os::wait_for_event(0)) );

endfunction

function EnableMainEvents()

    cleareventque();
    DisableEvents( EVID_SPEECH + EVID_LEFTAREA + EVID_DISENGAGED + EVID_OPPONENT_MOVED );
    EnableEvents( EVID_SPEECH + EVID_ENGAGED + EVID_DAMAGED, HALT_THRESHOLD );
    EnableEvents(EVID_ITEM_GIVEN);

endfunction

function DisableMainEvents()

    cleareventque();
    DisableEvents( EVID_SPEECH + EVID_ENGAGED + EVID_DAMAGED );
    DisableEvents(EVID_ITEM_GIVEN);

endfunction
