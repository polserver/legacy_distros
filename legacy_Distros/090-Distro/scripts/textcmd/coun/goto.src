//////////////////////////////////////
// Goto v2.0  -- teleport user to another player
// Author: Racalac
// Updated by: Sentack
// Updates:
//   5/23/2000 : v2.0
//     - Updated Gump display to handle 'unlimited' players. (Or so I hope)
// Usage: .goto [playername]
//        if playername is not given, a menu will open and prompt
//        you to choose one.


use uo;
include "include/math"; // Used for Mod

const TEXTSTARTLOCY :=  70;  // The location of the top of the gump

global locationscount := 0;  // The number of locations found for this user
global pagecount := 1;       // The current developing page

global layout := array(

"page 0",
"nodispose",
"gumppic 0   50  2620",
"gumppic 20  50  2621",
"gumppic 290 50  2622",
"gumppic 0   68  2623",
"gumppic 22  68  2624",
"gumppic 288 68  2625",
"gumppic 0   272 2623",
"gumppic 22  272 2624",
"gumppic 288 272 2625",
"gumppic 0   476 2626",
"gumppic 20  476 2627",
"gumppic 290 476 2628",
"gumppic 20  80  2621",

"text 20 59 40 0",
"text 260 59 40 1"
);

global data := array(  // The data array that holds all the text to be displayed in the gump
       "Player Name",  //0
       "Goto"
);

program textcmd_goto( user, whom )

  // Test to see if user entered the nam of a player they wish to travel to.  If not, then
  if(!whom)

    // Create the Array that will contain the names of the players and the data for the gump
    FillInArrays();

    // Display gump to user.
    local result := SendDialogGump( user, layout, data );

    // If the user canceled, quit
    if (result[0] == 0)
      return;
    endif

    // Aquire the name of the user they selected
    local name := data[result[0]+2];

    // Search through all active users
    foreach onlinechr in EnumerateOnlineCharacters()
      // If the current player found is the one we are looking for.
      if (onlinechr.name = name)
        // Teleport the user to that player
        MoveCharactertoLocation(user, onlinechr.x, onlinechr.y, onlinechr.z);
        break;
      endif
    endforeach

  else // The user wishes to go to a specific player.

    // Set to upper case so we don't have to worry about that issue in the spelling.
    whom := upper(whom);

    // for each player
    foreach onlinechr in EnumerateOnlineCharacters()
      // If this player is the one we are searching for
      if (upper(onlinechr.name) = whom)
        // Relocate the user to that location.
        MoveCharactertoLocation(user, onlinechr.x, onlinechr.y, onlinechr.z);
        break;
      endif
    endforeach

    // if the player does not exist, warn player.
    SendSysmessage( user , "Player does not exist." );

  endif

endprogram


function FillInArrays()

    // Variables designed to Store The full array of players, the number of players, and the current player
    local players := EnumerateOnlineCharacters();
    local numplayer := len(players);
    local player;

    // Used to help deal with the layout and data arrays
    local datalen;
    local layoutlen;
    local prev_y := cint(TEXTSTARTLOCY);
    local datindx;  // The location of where we wish to insert the next player into the data array
    local buttonret := 1;

    // Counter.
    local i := 0;

    // Cycle through all the players in the game and add them to the goto list.
    for (i := 1; i <= numplayer; i := i + 1)
      player := players[i];

      locationscount := locationscount + 1;

      datalen := GetDataLength();
      layoutlen := GetLayoutLength();

      // Store Name in data array
      datindx := datalen+1;
      data[datindx] := player.name;

      // if we are at the begining of a new page.
      if (mod(locationscount, 19) == 1)

        // Pointer Down, create if not on the last page and there are previous pages
        if (locationscount >= 19)
          layout[GetLayoutLength()+1] := "button 285 465 2648 2647 0 " + (pagecount);
        endif

        // Set Page Number
        layout[GetLayoutLength()+1] := "page " + pagecount;
        pagecount := pagecount + 1;
        prev_y := TEXTSTARTLOCY;

        // if there are more then one page of players
        if (locationscount > 19)
          // Pointer Up, if we are on the second or more page
          if( i > 19)
            layout[GetLayoutLength()+1] := "button 285 85 2650 2651 0 " + (pagecount - 2);
          endif
        endif
      endif

      // Insert Layout information.
      layout[GetLayoutLength()+1] := ("text 20 " + cstr(prev_y + 20) + " 40 " + datalen); // Players name
      layout[GetLayoutLength()+1] := ("button 260 " + cstr(prev_y + 20) + " 2640 2641 1 0 " + (buttonret+1)); // Goto Button

      prev_y := prev_y + 20;

      buttonret := buttonret + 1;
    endfor

endfunction

// Returns the Length of the Layout Gump Array
function GetLayoutLength();
    return (len(layout));
endfunction

// Returns the length of the Names Array that populates the gump.
function GetDataLength();
    return (len(data));
endfunction
