//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PKG: housing                                                                                                 //
// version: 1.0                                                                                                 //
// Maintainer: Bishop Ebonhand                                                                                  //
// email: bish0p@cfl.rr.com                                                                                     //
//                                                                                                              //
// notes:                                                                                                       //
//   this housing package includes static housing as well as the typical multi type housing.                    //
//                                                                                                              //
// known issues:                                                                                                //
//  stacking "solid" objects causes some wierdness with the multi.items list, and as a result a player may      //
//  not be able to lock down items on tables within their homes.. when a fix or workaround becomes available    //
//  I will update this script accordingly...                                                                    //
//                                                                                                              //
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////

use uo;
use os;

include "util/key";
include "ownerlayout";
include "coownerlayout";
include "friendlayout";
include "defaultlayout";

Const UOBJECT_DOORS_START := 0x0675;
Const UOBJECT_DOORS_END   := 0x06f4;
Const KEYSTART := 0x100E;
Const KEYEND := 0x1013;
Const KEYRING := 0x1011;


program textcmd_sign( who , sign )
  setobjproperty(sign,"decay", (ReadGameClock()+ 864000));
  local hserial := GetObjProperty( sign , "house_serial" );
  local house := SystemFindObjectBySerial( hserial );
  local oserial := getObjProperty( sign , "ownerserial");
  local result;
  SetPlaqueName( sign );
  detach();
  if ( cint(getobjproperty(sign,"virgin"))=1 )
    EraseObjProperty(sign,"virgin");
    sendsysmessage(who, "your house is now ready for occupation");
	start_script(":housing:staticsigncontrol", sign);
  endif
  if( who.serial = oserial )
    data[25] := who.name;
    SetObjProperty( sign , "lastownername" , who.name );
  else
    data[25] := GetObjProperty( sign , "lastownername" );
  endif
  data[26] := GetObjProperty( sign , "numlockdowns" );
  data[27] := GetObjProperty( sign , "numsecure" );
  local coownerinfo := GetObjProperty(sign,"coowners");
  local friendinfo := GetObjProperty(sign,"friends");
  local enemyinfo := GetObjProperty(sign,"enemies");
  Local i:=0;
  For (i:=1;i<=20;i:=i+1)
    local coownername := (SystemFindObjectBySerial(coownerinfo[i]).name);
    local friendname := (SystemFindObjectBySerial(friendinfo[i]).name);
    local enemyname := (SystemFindObjectBySerial(enemyinfo[i]).name);
    if (friendname = error)
      friendname := " ";
    endif
    if (enemyname = error)
      enemyname := " ";
    endif
    if (coownername = error)
      coownername := " ";
    endif
    data[i+27] := (friendname);
    data[(i+47)] := (enemyname);
    data[(i+67)] := (coownername);
  endfor
  local friend := 0;
  for (i:=1;i<=20;i:=i+1)
    local friendserial := friendinfo[i];
    local coownerserial := coownerinfo[i];
    if (friendserial = who.serial)
      friend := 1;
    endif
    if (coownerserial = who.serial)
      friend := 2;
    endif
  endfor
  if (friend = 1)
    result := SendDialogGump( who, friendlayout, data );
  elseif (friend = 2)
    result := SendDialogGump( who, coownerlayout, data );
  elseif ((friend = 0) and (who.cmdlevel < 3) and (who.serial != oserial))
    result := SendDialogGump( who, defaultlayout, data );
    return;
  else
	result := SendDialogGump( who, ownerlayout, data );
  endif
  case (result[0])
            1:local newname := RequestInput( who, sign, "Enter a name for this house." );
              if( (len(newname) > 17) )
                SendSysmessage( who , "House sign names may not be longer than 17 characters." );
              else
                SetName( sign , newname );
                setobjproperty(sign,"signname",newname);
              endif
            2: ChangeInteriorLocks( who , house, sign);
            3: demolish(house, sign, who);
            4: AddFriend(sign, who);
            5: addenemy(sign, who);
            6: ChangeHouseLocks( who , house, sign);
            7: removefriend(who, sign, friendinfo[1]);
            8: removefriend(who, sign, friendinfo[2]);
            9: removefriend(who, sign, friendinfo[3]);
           10: removefriend(who, sign, friendinfo[4]);
           11: removefriend(who, sign, friendinfo[5]);
           12: removefriend(who, sign, friendinfo[6]);
           13: removefriend(who, sign, friendinfo[7]);
           14: removefriend(who, sign, friendinfo[8]);
           15: removefriend(who, sign, friendinfo[9]);
           16: removefriend(who, sign, friendinfo[10]);
           17: removefriend(who, sign, friendinfo[11]);
           18: removefriend(who, sign, friendinfo[12]);
           19: removefriend(who, sign, friendinfo[13]);
           20: removefriend(who, sign, friendinfo[14]);
           21: removefriend(who, sign, friendinfo[15]);
           22: removefriend(who, sign, friendinfo[16]);
           23: removefriend(who, sign, friendinfo[17]);
           24: removefriend(who, sign, friendinfo[18]);
           25: removefriend(who, sign, friendinfo[19]);
           26: removefriend(who, sign, friendinfo[20]);
           27: removeenemy(who, sign, enemyinfo[1]);
           28: removeenemy(who, sign, enemyinfo[2]);
           29: removeenemy(who, sign, enemyinfo[3]);
           30: removeenemy(who, sign, enemyinfo[4]);
           31: removeenemy(who, sign, enemyinfo[5]);
           32: removeenemy(who, sign, enemyinfo[6]);
           33: removeenemy(who, sign, enemyinfo[7]);
           34: removeenemy(who, sign, enemyinfo[8]);
           35: removeenemy(who, sign, enemyinfo[9]);
           36: removeenemy(who, sign, enemyinfo[10]);
           37: removeenemy(who, sign, enemyinfo[11]);
           38: removeenemy(who, sign, enemyinfo[12]);
           39: removeenemy(who, sign, enemyinfo[13]);
           40: removeenemy(who, sign, enemyinfo[14]);
           41: removeenemy(who, sign, enemyinfo[15]);
           42: removeenemy(who, sign, enemyinfo[16]);
           43: removeenemy(who, sign, enemyinfo[17]);
           44: removeenemy(who, sign, enemyinfo[18]);
           45: removeenemy(who, sign, enemyinfo[19]);
           46: removeenemy(who, sign, enemyinfo[20]);
           47: removecoowner(who, sign, coownerinfo[1]);
           48: removecoowner(who, sign, coownerinfo[2]);
           49: removecoowner(who, sign, coownerinfo[3]);
           50: removecoowner(who, sign, coownerinfo[4]);
           51: removecoowner(who, sign, coownerinfo[5]);
           52: addcoowner(sign, who);
    endcase
endprogram

function demolish(house, sign, who)
  local deedtype := getobjproperty(sign,"deedtype");
  local item := house.items;
  local builtdeed := SystemFindObjectBySerial( GetObjProperty( sign, "builtdeed") );
  local backpack := EnumerateItemsInContainer(who.backpack);
  local inpack := 0;
  foreach item in backpack
    if (item.serial = GetObjProperty( sign, "builtdeed"))
      if (!destroyitem(builtdeed))
        return;
      endif
      inpack := 1;
    endif
  endforeach
  if (inpack = 0)
    sendsysmessage(who,"you must have the built deed in your backpack to demolish this house");
    return;
  endif
  createiteminbackpack(who, deedtype, 1);
  foreach itemt in item
    if ((getobjproperty(itemt,"secure") = 1) and (itemt.movable = 0))
      eraseobjproperty(itemt,"secure");
      if(GetObjProperty( itemt , "houseserial" ) = sign.serial)
        local oldscript := getobjproperty(itemt,"oldscript");
        if (oldscript = error)
          oldscript := "";
        endif
        itemt.usescript := oldscript;
        itemt.movable := 1;
        EraseObjProperty( itemt , "houseserial" );
        EraseObjProperty( itemt , "oldscript" );
        local newbox := SystemFindObjectBySerial( GetObjProperty( itemt, "boxserial") );
        local items := enumerateitemsincontainer(newbox);
        foreach item in items
          moveitemtocontainer(item, itemt);
        endforeach
        destroyitem(newbox);
        EraseObjProperty( itemt, "boxserial");
      endif
    elseif ((GetObjProperty( itemt , "lockeddown" ) = 1) and (itemt.movable = 0))
      itemt.movable := 1;
      eraseobjproperty(itemt, "lockeddown");
    elseif (itemt.movable = 0)
      destroyitem(itemt);
    endif
  endforeach
  DestroyMulti( house );
  return;
endfunction

function SetPlaqueName( sign )
  local signname := getobjproperty(sign,"signname");
  if (!signname)
    signname := "";
  endif
  local split := SplitWords( signname );
  local j;
  for( j := 1 ; j <= 5 ; j := j + 1 )
    if( !split[j] )
      split[j] := "";
    endif
  endfor
  if( len(signname) <= 12 )
    data[1] := signname;
  elseif( (len(split[1]) + len(split[2]) + len(split[3]) + 2) <= 12 )
    data[1] := split[1] + " " + split[2] + " " + split[3];
    data[2] := split[4] + " " + split[5];
  elseif( len(split[1]) + len(split[2]) + 1 <= 12 )
    data[1] := split[1] + " " + split[2];
    data[2] := split[3] + " " + split[4] + " " + split[5];
  elseif( len(split[1]) <= 12 )
    data[1] := split[1];
    data[2] := split[2] + " " + split[3] + " " + split[4] + " " + split[5];
  endif
endfunction

function ChangeHouseLocks( who , house, sign)
  SendSysmessage( who , "Target the new master key." );
  local newkey := Target( who , "" );
  if( (newkey.objtype >= KEYSTART) and (newkey.objtype <= KEYEND) and (newkey.objtype != KEYRING) )
    local lockid := AllocLockId();
    SetObjProperty( newkey , "lockid" , lockid );
    foreach item in (house.components)
      if( ((item.objtype >= UOBJECT_DOORS_START) and (item.objtype <= UOBJECT_DOORS_END)))
        if (Distance(sign, item) <= 4);
          item.locked := 1;
          SetObjProperty(item, "lockid", lockid);
        endif
      endif
    endforeach
    SendSysmessage( who , "Locks Changed." );
  else
    SendSysmessage( who , "That is not a key!" );
  endif
endfunction

function ChangeInteriorLocks( who , house, sign)
    foreach item in (house.components)
      if( ((item.objtype >= UOBJECT_DOORS_START) and (item.objtype <= UOBJECT_DOORS_END)) and (Distance(sign, item) >= 5))
        local lockid := AllocLockId();
        SendSysmessage( who , "Target the new master key." );
        local newkey := Target( who , "" );
        if (!newkey)
          sendsysmessage(who, "canceled");
          return;
        endif
        if( (newkey.objtype >= KEYSTART) and (newkey.objtype <= KEYEND) and (newkey.objtype != KEYRING) )
          SetObjProperty( newkey , "lockid" , lockid );
          item.locked := 1;
          SetObjProperty(item, "lockid", lockid);
          SendSysmessage( who , "The lock has been changed." );
        else
          SendSysmessage( who , "That is not a key!" );
          return;
        endif
      endif
    endforeach
endfunction

function AddFriend( sign, who )
  local friendinfo := GetObjProperty(sign,"friends");
  if (!friendinfo)
    friendinfo := {};
  endif
  local ArraySize := Len(friendinfo);
  ArraySize := ArraySize + 1;
  if (ArraySize > 20)
    sendsysmessage(who," your house cant support any more friends");
    return;
  endif
  SendSysmessage( who, "Target Friend." );
  Local targetchr := Target( who, "");
  local ind := returnindex(friendinfo, targetchr.serial);
  if ((ind > 0) or ( targetchr.serial = who.serial))
    sendsysmessage(who, "that person is already a friend");
    return;
  elseif (targetchr.mana = error)
    sendsysmessage(who, "you cant friend that!");
    return;
  elseif (targetchr.npctemplate)
    sendsysmessage(who, "you can only friend players!");
    return;
  endif
  if(!targetchr)
    SendSysmessage( who, "Cancelled." );
    return;
  endif
  friendinfo[ArraySize] := targetchr.serial;
  SetObjProperty( sign , "friends", friendinfo);
  SendSysmessage( who, "Friend Added." );
endfunction

function Addenemy( sign, who )
  local enemyinfo := GetObjProperty(sign,"enemies");
  if (!enemyinfo)
    enemyinfo := {};
  endif
  local ArraySize := Len(enemyinfo);
  ArraySize := ArraySize + 1;
  if (ArraySize > 20)
    sendsysmessage(who," your house cant support any more enemies");
    return;
  endif
  SendSysmessage( who, "Target enemy." );
  Local targetchr := Target( who, TGTOPT_NOCHECK_LOS);
  local ind := returnindex(enemyinfo, targetchr.serial);
  if ((ind > 0) or ( targetchr.serial = who.serial))
    sendsysmessage(who, "that person is already an enemy");
    return;
  elseif (targetchr.mana = error)
    sendsysmessage(who, "you cant make that an enemy!");
    return;
  elseif (targetchr.npctemplate)
    sendsysmessage(who, "only players may be enemies!");
    return;
  endif
  if(!targetchr)
    SendSysmessage( who, "Cancelled." );
    return;
  endif
  enemyinfo[ArraySize] := targetchr.serial;
  SetObjProperty( sign , "enemies", enemyinfo);
  SendSysmessage( who, "enemy Added." );
endfunction

function Addcoowner( sign, who )
  local coownerinfo := GetObjProperty(sign,"coowners");
  if (!coownerinfo)
    coownerinfo := {};
  endif
  local ArraySize := Len(coownerinfo);
  ArraySize := ArraySize + 1;
  if (ArraySize > 20)
    sendsysmessage(who," your house cant support any more co-owners");
    return;
  endif
  SendSysmessage( who, "Target co-owner." );
  Local targetchr := Target( who, TGTOPT_NOCHECK_LOS);
  local ind := returnindex(coownerinfo, targetchr.serial);
  if ((ind > 0) or ( targetchr.serial = who.serial))
    sendsysmessage(who, "that person is already a co-owner");
    return;
  elseif (targetchr.mana = error)
    sendsysmessage(who, "you cant make that a co-owner!");
    return;
  elseif (targetchr.npctemplate)
    sendsysmessage(who, "only players may be co-owners!");
    return;
  endif
  if(!targetchr)
    SendSysmessage( who, "Cancelled." );
    return;
  endif
  coownerinfo[ArraySize] := targetchr.serial;
  SetObjProperty( sign , "coowners", coownerinfo);
  SendSysmessage( who, "co-owner Added." );
endfunction

function ReturnIndex(friendinfo, information)
      local i;
      for (i := 1; i <= len(friendinfo); i := i + 1)
            if (friendinfo[i] = information)
                  return i;
            endif
      endfor
      return 0;
endfunction

function RemoveFriend(who, house, information )
  local friendinfo := GetObjProperty(house,"friends");
  local ind := returnindex(friendinfo, information);
  if (ind = 0)
    sendsysmessage(who, "that slot doesnt contain a friend");
    return;
  endif
  friendinfo.erase(ind);
  SetObjProperty( house , "friends", friendinfo);
  SendSysmessage(who, "your former friend has been removed");
endfunction

function Removecoowner(who, house, information )
  local coownerinfo := GetObjProperty(house,"coowners");
  local ind := returnindex(coownerinfo, information);
  if (ind = 0)
    sendsysmessage(who, "that slot doesnt contain a co-owner");
    return;
  endif
  coownerinfo.erase(ind);
  SetObjProperty( house , "coowners", coownerinfo);
  SendSysmessage(who, "your former co-owner has been removed");
endfunction

function RemoveEnemy(who, house, information )
  local enemyinfo := GetObjProperty(house,"enemies");
  local ind := returnindex(enemyinfo, information);
  if (ind = 0)
    sendsysmessage(who, "that slot doesnt contain a friend");
    return;
  endif
  enemyinfo.erase(ind);
  SetObjProperty( house , "enemies", enemyinfo);
  SendSysmessage(who, "your former enemy has been removed");
endfunction
