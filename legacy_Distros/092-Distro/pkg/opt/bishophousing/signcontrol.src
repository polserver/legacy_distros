use uo;
use os;
use basic;

include "include/eventid";

program SignListener( sign )
  local house := SystemFindObjectBySerial( GetObjProperty( sign , "house_serial" ) );
  RegisterForSpeechEvents( sign, 30 );
  local sec;
  local friendinfo;
  local coownerinfo;
  local ev := wait_for_event( 10 );
  local decaytime;
  local indf;
  local indc;
  while (house)
    sec := 0;
    friendinfo := GetObjProperty(sign,"friends");
    coownerinfo := GetObjProperty(sign,"coowners");
    ev := wait_for_event( 10 );
    indf := returnindex(friendinfo, ev.source.serial);
    indc := returnindex(coownerinfo, ev.source.serial);
    if ((ev.source.multi.serial = house.serial) and (GetObjProperty( sign , "owneracct" ) = ev.source.acctname ));
      sec := 3;
    elseif (indc > 0)
      sec := 2;
    elseif(indf > 0)
      sec := 1;
    endif
    decaytime := getobjproperty(sign,"decay");
    if ((decaytime) and (!getobjproperty(sign,"nodecay")))
      local tname;
      local newname := getobjproperty(sign,"signname");
      if (ReadGameClock() > decaytime)
        demolish(house, sign);
      elseif ( (decaytime - ReadGameClock() ) > 861000 )
        tname := newname + "[this house is like new]";
        setname(sign, tname);
      elseif ( (decaytime - ReadGameClock() ) > 604800 )
        tname := newname + "[this house is slightly worn]";
        setname(sign, tname);
      elseif ( (decaytime - ReadGameClock() ) > 259200 )
        tname := newname + "[this house is fairly worn]";
        setname(sign, tname);
      elseif ( (decaytime - ReadGameClock() ) > 86400 )
        tname := newname + "[this house is greatly worn]";
        setname(sign, tname);
      else
        tname := newname + "[this house is in danger of collapsing]";
        setname(sign, tname);
      endif 
    endif
    if (1)
      if (ev)
        if (ev.type = EVID_SPEECH)
          if (sec > 0)
            handle_speech( ev, house, sign, sec);
          endif
        endif
      endif
    endif
  endwhile
endprogram

function demolish(house, sign)
  local item := house.items;
  local builtdeed := SystemFindObjectBySerial( GetObjProperty( sign, "builtdeed") );
  destroyitem(builtdeed);
  foreach itemt in item
    if ((getobjproperty(itemt,"secure") = 1) and (itemt.movable = 0))                           //item is a secure container
      eraseobjproperty(itemt,"secure");
      if(GetObjProperty( itemt , "houseserial" ) = sign.serial)                                 //double checking to prevent exploits
        local oldscript := getobjproperty(itemt,"oldscript");
        if (oldscript = error)
          oldscript := "";
        endif
        itemt.usescript := oldscript;
        itemt.movable := 1;
        EraseObjProperty( itemt , "houseserial" );
        EraseObjProperty( itemt , "oldscript" );
        local newbox := SystemFindObjectBySerial( GetObjProperty( itemt, "boxserial") );
        local items := enumerateitemsincontainer(newbox);
        foreach item in items
          moveitemtocontainer(item, itemt);
        endforeach
        destroyitem(newbox);
        EraseObjProperty( itemt, "boxserial");
      endif
    elseif ((GetObjProperty( itemt , "lockeddown" ) = 1) and (itemt.movable = 0))               //item is locked down in the house
      itemt.movable := 1;
      eraseobjproperty(itemt, "lockeddown");
    elseif (itemt.movable = 0)                                                                  //is a house addon or a GM placed unmovable item..
      destroyitem(itemt);
    endif
  endforeach
  DestroyMulti( house );
  return;
endfunction

function handle_speech( event, house, sign, sec)
  local text := lower( event.text );
  if(( text["i wish to lock this down"]) and (sec >= 2))
    HouseFunction( house, sign, event, 1 );
  elseif(( text["i wish to release this"]) and (sec >= 2))
    HouseFunction( house, sign, event, 2 );
  elseif(( text["i wish to secure this"]) and (sec >= 2))
    secure( house, sign, event );
  elseif(( text["i wish to unsecure this"]) and (sec >= 2))
    unsecure( house, sign, event );
  elseif(( text["remove thyself"]) and (sec >= 1))
    remove( house, sign, event);
  elseif(( text["i ban thee"]) and (sec >= 1))
    banish( house, sign, event);
  endif
endfunction

function banish( house, sign, event)
  local who := event.source;
  if (who.multi.serial = house.serial)
    sendsysmessage(who,"target the person you wish to banish");
    local idiot := target(who);
    if (!idiot)
      sendsysmessage(who,"cancelled");
      return;
    elseif (idiot.mana = error)
      sendsysmessage(who,"you cannot ban items");
      return;
    endif
    if (idiot.multi.serial = house.serial)
      local enemy := getobjproperty(sign,"enemies");
      if (!enemy)
        enemy := {};
      endif
      if ((isenemy(sign, idiot) =0) and (isfriend(sign, idiot) =0) and (iscoowner(sign, idiot) = 0) and (idiot.serial != who.serial) and (who.multi.serial = house.serial) and (idiot.cmdlevel < 2))
        MoveCharacterToLocation( idiot, sign.x, sign.y, sign.z, MOVECHAR_FORCELOCATION);
        sendsysmessage(idiot,"you have been ejected from the house");
        enemy.append(idiot.serial);
        setobjproperty(sign,"enemies", enemy);
        return;
      elseif ((isfriend(sign, idiot) =1) or (iscoowner(sign, idiot) = 1) or (idiot.acctname = getobjproperty(sign,"owneracct")))
        sendsysmessage(who,"you cannot ban friends");
        return;
      elseif (isenemy(sign, idiot) = 1)
        sendsysmessage(who,"that person is already banned");
        MoveCharacterToLocation( idiot, sign.x, sign.y, sign.z, MOVECHAR_FORCELOCATION);
        return;
      else
        sendsysmessage(who,"you cannot do that!");
        return;
      endif
    else
      sendsysmessage(who,"that person isnt inside the house.");
      return;
    endif
  else
    sendsysmessage(who,"you must be in a house to do this");
    return;
  endif
endfunction

function remove( house, sign, event)
  local who := event.source;
  if (who.multi.serial = house.serial)
    sendsysmessage(who,"target the person you wish to remove");
    local idiot := target(who);
    if (!idiot)
      sendsysmessage(who,"cancelled");
      return;
    elseif (idiot.mana = error)
      sendsysmessage(who,"you cannot eject items");
      return;
    endif
    if (idiot.multi.serial = house.serial)
      if ((isfriend(sign, idiot) =0) and (iscoowner(sign, idiot) = 0) and (idiot.serial != who.serial) and (who.multi.serial = house.serial) and (idiot.cmdlevel < 2))
        MoveCharacterToLocation( idiot, sign.x, sign.y, sign.z, MOVECHAR_FORCELOCATION);
        sendsysmessage(idiot,"you have been ejected from the house");
        return;
      elseif ((isfriend(sign, idiot) =1) or (iscoowner(sign, idiot) = 1) or (idiot.acctname = getobjproperty(sign,"owneracct")))
        sendsysmessage(who,"you cannot eject friends");
        return;
      elseif (idiot.serial = who.serial)
        sendsysmessage(who,"you cannot eject yourself");
        return;
      else
        sendsysmessage(who,"you cannot do that!");
      endif
    else
      sendsysmessage(who,"that person isnt inside the house.");
      return;
    endif
  else
    sendsysmessage(who,"you must be in a house to do this");
    return;
  endif
endfunction

function HouseFunction( house, sign, event, num )
  local itemt := Target( event.source , TGTOPT_NOCHECK_LOS );
  if(!itemt)
    SendSysmessage( event.source, "Cancelled." );
    return;
  endif
  local inside := 0;
  foreach item in (house.items)
     if( itemt.serial = item.serial )
       inside := 1;
     endif
  endforeach
  if( inside = 1)
    case( num )
      1: if( GetObjProperty( sign , "numlockdowns" ) > 0 )
           if (itemt.movable = 1)
               itemt.movable := 0;
               SetObjProperty( itemt, "lockeddown", 1);
               SetObjProperty( sign, "numlockdowns" , GetObjProperty( sign, "numlockdowns") - 1 );
               SendSysmessage( event.source , "Locked Down." );
           elseif ((itemt.movable = 0) and (getobjproperty(itemt,"lockeddown") =1))
             sendsysmessage(event.source, "that item is already locked down!");
             return;
           elseif ((itemt.movable = 0) and (getobjproperty(itemt,"secure") =1))
             sendsysmessage(event.source, "that item is secure!");
             return;
           else
             sendsysmessage(event.source, "you cannot lock that down!");
             return;
           endif
         else
           SendSysmessage( event.source , "The house has no more lockdowns remaining." );
         endif
      2: if (GetObjProperty( itemt , "lockeddown" ) and (itemt.movable = 0))
           if (getobjproperty(itemt,"secure") =1)
             eraseobjproperty(itemt,"secure");
             local oldscript := getobjproperty(itemt,"oldscript");
             if (oldscript = error)
               oldscript := "";
             endif
             itemt.usescript := oldscript;
             SetObjProperty( sign, "numsecure" , GetObjProperty( sign, "numsecure") + 1 );
             EraseObjProperty( itemt , "houseserial" );
             EraseObjProperty( itemt , "oldscript" );
             local newbox := SystemFindObjectBySerial( GetObjProperty( itemt, "boxserial") );
             local items := enumerateitemsincontainer(newbox);
             foreach item in items
               moveitemtocontainer(item, itemt);
             endforeach
             destroyitem(newbox);
             EraseObjProperty( itemt, "boxserial");
           endif
           itemt.movable := 1;
           eraseobjproperty(itemt, "lockeddown");
           SetObjProperty( sign, "numlockdowns" , GetObjProperty( sign, "numlockdowns") + 1 );
           SendSysmessage( event.source , "Released." );
           return;
         elseif ((itemt.movable = 0) and(getobjproperty(itemt,"secure") =1))
           eraseobjproperty(itemt,"secure");
           local oldscript := getobjproperty(itemt,"oldscript");
           if (oldscript = error)
             oldscript := "";
           endif
           itemt.usescript := oldscript;
           SetObjProperty( sign, "numsecure" , GetObjProperty( sign, "numsecure") + 1 );
           EraseObjProperty( itemt , "houseserial" );
           EraseObjProperty( itemt , "oldscript" );
           local newbox := SystemFindObjectBySerial( GetObjProperty( itemt, "boxserial") );
           local items := enumerateitemsincontainer(newbox);
           foreach item in items
             moveitemtocontainer(item, itemt);
           endforeach
           destroyitem(newbox);
           EraseObjProperty( itemt, "boxserial");
           itemt.movable := 1;
           SendSysmessage( event.source , "Released." );
           return;
         elseif (itemt.movable = 1)
           sendsysmessage(event.source, "that is not locked down");
           return;
         else
           sendsysmessage(event.source, "you cannot release that");
           return;
         endif
    endcase
  else
    SendSysmessage( event.source , "That is not inside your house." );
  endif
endfunction

function secure( house, sign, event )
  local itemt := Target( event.source );
  if(!itemt)
    SendSysmessage( event.source, "Canceled." );
    return;
  endif
  if (itemt.movable = 0)
    if (getobjproperty(itemt,"lockeddown") =1)
      SendSysmessage( event.source, "securing this container. your house will be credited with one lockdown." );
      SetObjProperty( sign, "numlockdowns" , GetObjProperty( sign, "numlockdowns") + 1 );
      eraseobjproperty(itemt,"lockeddown");
    else
      SendSysmessage( event.source, "you cannot secure that." );
      return;
    endif
  endif
  if(GetObjProperty( sign , "numsecure" ))
    local inside := 0;
    foreach item in (house.items)
      if( itemt.serial = item.serial )
        inside := 1;
      endif
    endforeach
    if (inside)
      local newbox := CreateItemInContainer( itemt, itemt.objtype, 1);
      local boxin := enumerateitemsincontainer(itemt);
      foreach item in boxin
      if (newbox.serial != item.serial)
        moveitemtocontainer(item, newbox);
      endif
      endforeach
      itemt.movable := 0;
      SetObjProperty( itemt, "boxserial" , newbox.serial );
      SetObjProperty( itemt, "houseserial" , sign.serial );
      SetObjProperty( itemt, "secure" , 1);
      local oldscript := itemt.script;
      setobjproperty(itemt,"oldscript", oldscript);
      itemt.usescript := ":housing:securecon";
      SetObjProperty( sign, "numsecure" , GetObjProperty( sign, "numsecure") - 1 );
      SendSysmessage( event.source , "Container is secure." );
    else
      SendSysmessage( event.source , "that item is not inside your house.");
    endif
  else
    SendSysmessage( event.source , "The house has no more secure containers remaining." );
  endif
endfunction

function unsecure( house, sign, event )
  local itemt := Target( event.source );
  if(!itemt)
    SendSysmessage( event.source, "Canceled." );
    return;
  endif
  if (!getobjproperty(itemt,"secure") =1)
    sendsysmessage(event.source," you cannot unsecure that");
    return;
  endif
  eraseobjproperty(itemt,"secure");
  if(GetObjProperty( itemt , "houseserial" ) = sign.serial)
    local lockdowns := GetObjProperty( sign , "numlockdowns" );
    local oldscript := getobjproperty(itemt,"oldscript");
    if (oldscript = error)
      oldscript := "";
    endif
    itemt.usescript := oldscript;
    SetObjProperty( sign, "numsecure" , GetObjProperty( sign, "numsecure") + 1 );
    EraseObjProperty( itemt , "houseserial" );
    EraseObjProperty( itemt , "oldscript" );
    EraseObjProperty( itemt, "boxserial");
    local newbox := SystemFindObjectBySerial( GetObjProperty( itemt, "boxserial") );
    local items := enumerateitemsincontainer(newbox);
    foreach item in items
      moveitemtocontainer(item, itemt);
    endforeach
    destroyitem(newbox);
    if ( lockdowns > 0 )
      SetObjProperty( itemt, "lockeddown", 1);
      SetObjProperty( sign, "numlockdowns" , lockdowns - 1 );
      SendSysmessage( event.source , "the container is locked down and your house has been credited one secure container." );
    else
      itemt.movable := 1;
      SendSysmessage( event.source , "the container is no longer locked down and your house has been credited one secure container." );  
    endif
  else
    SendSysmessage( event.source , "that is not secure." );
  endif
endfunction

function iscoowner(sign, who)
  local coownerinfo := getobjproperty(sign,"coowners");
  local ind := returnindex(coownerinfo, who.serial);
  if (ind > 0)
    return 1;
  else
    return 0; 
  endif
endfunction

function isenemy(sign, who)
  local enemyinfo := getobjproperty(sign,"enemies");
  local ind := returnindex(enemyinfo, who.serial);
  if (ind > 0)
    return 1;
  else
    return 0; 
  endif
endfunction

function isfriend(sign, who)
  local friendinfo := getobjproperty(sign,"friends");
  local ind := returnindex(friendinfo, who.serial);
  if (ind > 0)
    return 1;
  else
    return 0; 
  endif
endfunction

function ReturnIndex(info, information)
  local i;
  for (i := 0; i <= len(info); i := i + 1)
    if (info[i] = information)
      return i;
    endif
  endfor
  return 0;
endfunction