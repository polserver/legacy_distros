//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PKG: housing                                                                                                 //
// version: 1.0                                                                                                 //
// Maintainer: Bishop Ebonhand                                                                                  //
// email: bish0p@cfl.rr.com                                                                                     //
//                                                                                                              //
// notes:                                                                                                       //
//   this housing package includes static housing as well as the typical multi type housing.                    //
//                                                                                                              //
// known issues:                                                                                                //
//  stacking "solid" objects causes some wierdness with the multi.items list, and as a result a player may      //
//  not be able to lock down items on tables within their homes.. when a fix or workaround becomes available    //
//  I will update this script accordingly...                                                                    //
//                                                                                                              //
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
use uo;
use os;
use util;
use basicio;
use basic;
use cfgfile;

include "util/key";
include "include/objtype";
Const UOBJECT_BRASS_SIGN := 0x0bd2;
Const UOBJECT_WOOD_SIGN := 0x0bd0;
Const UOBJECT_TENT_CHEST := 0x0E43;
global cfg;
global colors;
global num_colors;

program textcmd_staticdeed( character)
        Buildhouse( character);
endprogram

function Buildhouse( character)
    local sign;
	SendSysMessage(character, "Create it where?");
	local where := TargetCoordinates(character);
	if (!where)
		return;
	endif
    local createsign  := makesign(character, where.x, where.y, where.z);
	if (!createsign)
		SendSysMessage( character, "ERROR: Unable to create sign!" );
		return;
	endif
    set_critical( 1 );
    local created := CreateBuiltDeed(character, where.x, where.y, where.z, createsign);
    set_critical( 0 );
    if (!created) 
	SendSysMessage( character, "ERROR: Unable to create built deed!" );
      return;
    endif
endfunction

function CreateBuiltDeed( character, x, y, z, sign)
    local builtdeed := CreateItemInBackpack( character, 0x8888 );
    if (!builtdeed)
      PrintTextAbovePrivate( character, "My backpack is too full!", character );
      return 0; // not built
    endif
    local footprint := boundaries(character, builtdeed, sign);
    SetName(builtdeed, "a static house at " + x + ", " + y + ", " + z + "." );
    setobjproperty(sign,"builtdeed" , builtdeed.serial);
    return 1; // built ok!
endfunction

function makesign( character, x, y, z)
	local boxmenu := CreateMenu("Select a sign type:");
	AddMenuItem(boxmenu,0xbd1,"brass");
	AddMenuItem(boxmenu,0xbd2,"brass2");
	AddMenuItem(boxmenu,0xbcf,"wooden");
	AddMenuItem(boxmenu,0xbd0,"wooden2");
	local selection := SelectMenuItem2 (character, boxmenu);
    local postgraphic;
    local signgraphic;
    if (selection.objtype = 0xbd1)
      postgraphic := 0xb99;
      signgraphic := 0xbd1;
    elseif (selection.objtype = 0xbd2)
      postgraphic := 0xb98;
      signgraphic := 0xbd2;
    elseif (selection.objtype = 0xbcf)
      postgraphic := 0xb99;
      signgraphic := 0xbcf;
    elseif (selection.objtype = 0xbd0)
      postgraphic := 0xb98;
      signgraphic := 0xbd0;
    endif
	if (!selection)
	  return;
	endif
	local sign := CreateItemAtLocation( x , y , z , 0x7060 , 1 );
	if (!sign)
	  return;
	endif
	sign.graphic := signgraphic;
	sign.movable := 0;
	local post := CreateItemAtLocation( x , y , z , 0x0b98 , 1 );
	if (!post)
	  return;
	endif
	post.movable := 0;
    post.graphic := postgraphic;
    return sign;
endfunction

function boundaries(character, builtdeed, sign)
	local homeinfo := { }; 
	local coords := 0;
	while ( !coords )
	  sendsysmessage(character,"Target the North-West corner of the house (Up!)");
	  coords := TargetCoordinates(character);
	endwhile
	homeinfo[1] := coords.x;
	homeinfo[2] := coords.y;
    homeinfo[6] := coords.z;
	coords := 0;
	while( !coords )
	  sendsysmessage(character,"Target the South-East corner of the house (Down!)");
      coords := TargetCoordinates(character);
	endwhile
	homeinfo[3] := coords.x;
	homeinfo[4] := coords.y;
	homeinfo[5] := sign.serial;
    homeinfo[7] := coords.z;
    local numlockdowns := figurelockdowns( homeinfo[1], homeinfo[2], homeinfo[6], homeinfo[3], homeinfo[4], homeinfo[7]);
    local numsecures   := figuresecures  ( homeinfo[1], homeinfo[2], homeinfo[6], homeinfo[3], homeinfo[4], homeinfo[7]);
    homeinfo[8] := numlockdowns;
    homeinfo[9] := numsecures;
	setobjproperty(builtdeed,"homeinfo",homeinfo);
endfunction

function figurelockdowns( nwx, nwy, nwz, sex, sey, sez)
    local x := (sex-nwx);
    local y := (sey-nwy);
    local z := ((nwz-sez)/20);
    local a := (x*y*z);
    local l := (a/3);
    l := l*2;
    if (l < 25)
      l := 25;
    endif
    return l;
endfunction

function figuresecures( nwx, nwy, nwz, sex, sey, sez)
    local x := (sex-nwx);
    local y := (sey-nwy);
    local z := ((nwz-sez)/20);
    local a := (x*y*z);
    local s := (a/25);
    if (s < 1)
      s := 1;
    endif
    return s;
endfunction