////////////
// drink.src
//
// Simple (hehe) drinking/drunkeness script
// Looks more compilcated than it is... Basically I have to worry about
// if the player drinks more while the first drink script is running
// since both use the same property.
//
// There Should never be a situation where the player cannot become sober.
// (Standard programmer statement.)
//
// Author: Racalac 6/23/99
////////////

use uo;
use cfgfile;
use util;
use os;
  
Const SOUND_EFFECT_DRINK1 := 0x32;  
Const ACTION_DRINK := 0x22;
const ACTION_BOW     := 0x0020;

program Drink_Booz( character, drink )

    local cfgfile := ReadConfigFile( "itemdesc" );
    local elem := FindConfigElem( cfgfile, drink.objtype );
    local proof := GetConfigInt( elem, "Proof" );
    local poison := Cint(GetObjProperty(drink, "poison_level"));
    
    if (poison > 0 )
        SendSysMessage (character, "You have been poisoned!");    
        local poison_level :=Cint(GetObjProperty(character, "poison_level"));
        poison_level := poison_level + poison;
        if (poison_level >= 15) then
	        poison_level := 15;
        endif  
        if ( poison_level > 0)
         SetObjProperty (character, "poison_level",cstr(poison_level));
        else
  
         SetObjProperty (character, "poison_level",cstr(poison_level));
         start_script( ":spells:poisondamage", character );
        endif 
       
        SetObjProperty (character, "poison_level",cstr(poison_level));
        start_script( ":spells:poisondamage", character );
  endif
 
    
    SubtractAmount( drink, 1 );
    PerformAction( character, ACTION_DRINK );
    PlaySoundEffect( character, SOUND_EFFECT_DRINK1 );
    sleep(2);   
 
    local currentproof := GetObjProperty( character, "Proof" );

    if(!currentproof)
       SetObjProperty( character , "Proof", proof );
    else
       SetObjProperty( character , "Proof", proof+currentproof );
    endif

    detach();
  
  if( GetObjProperty( character, "Proof" ) > 4 )
    SendSysmessage( character , "You become drunk and stumble about." );
    local i;
    for( i := GetObjProperty( character, "Proof" ) ; i >= 0 ; i := i-1 )
        if( !GetObjProperty( character, "Proof" ) and GetObjProperty( character, "Proof" ) != 0 ) //incase he drank more
            EraseObjProperty( character, "Proof" );
            SendSysmessage( character , "You feel sober." );
            break;
        else
            i := GetObjProperty( character, "Proof" );
        endif

        // Drunk effect
        PerformAction( character, ACTION_BOW );
        PrintTextAbove( character, "*hic*" );
        character.facing := RandomDiceRoll( "1d8" );
        sleep(2);
        PerformAction( character, ACTION_BOW );
        character.facing := RandomDiceRoll( "1d8" );
        sleep(1);
        PerformAction( character, ACTION_BOW );
        character.facing := RandomDiceRoll( "1d8" );

        sleep(10);
        if( GetObjProperty( character, "Proof" ) >= 1 )
            SetObjProperty( character, "Proof", GetObjProperty( character, "Proof" ) -1 );
        elseif( GetObjProperty( character, "Proof" ) = 0 )
            EraseObjProperty( character, "Proof" );
            SendSysmessage( character , "You feel sober." );
            return;
        else
            return;
        endif
    endfor

  else
    SendSysmessage( character , "You'll probably get drunk if you have anymore." );

    //decay drunkenness
    local j;
    for( j := GetObjProperty( character, "Proof" ) ; j > 0 ; j := j-1 )
        SetObjProperty( character, "Proof", GetObjProperty( character, "Proof" ) -1 );
        sleep(15);
    endfor

    EraseObjProperty( character, "Proof" );
    SendSysmessage( character , "Your body is free of alcohol.");

  endif
 
endprogram


