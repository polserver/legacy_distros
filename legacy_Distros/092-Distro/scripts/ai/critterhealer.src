/////////////////////////////////////////////////////////////////////////////
//
//  daves_healer.src: Fight hostiles, heal/cure/res players
//
//  Healers will wander and defend themselves from attack, tho somewhat
//  more passively. They will only heal/cure/res if the mobile is not an
//  npc, they have LOS, they need the heal/cure/res, and neither the healer
//  nor the healee have any hostiles on them.
//
//  Author: Racalac
//
//  Created: who knows; Modified: 7/5/99
//                      Modified: 8/12/99: Commented out healing hp. Was being
//                                         used as a cheap battle tactic.
//
/////////////////////////////////////////////////////////////////////////////


use npc;
use os;
use uo;

include "include/eventid";
include "include/randname";
include "include/npcutil";
include "include/objtype";
include "include/dist";
include "include/npccast";
include "include/dist";
include "include/anchors";
include "ai/main/killpcsloop";
include "ai/combat/fight";
include "ai/main/defaultnoncombatevent";
include "ai/combat/healercombatevent";
include "ai/setup/setup";
include "ai/main/loot";
include "ai/main/sleepmode";

const HALT_THRESHOLD := 8; // how close before he attacks?
Const SOUND_EFFECT_RES := 0x215;
Const ACTION_EFFECT_CAST2 := 0x11;
Const REACT_THRESHOLD := 2;

program HealerAI()

Equipfromtemplate(me, "creature_spellcaster");

	SetWarMode( 0 );

	main_AI_loop();

endprogram


/////////////////////////////////////////////////////////////////////////////
//
//  CloseDistance - close the distance between self and an opponent.
//  Returns: 1 if distance is 0 or 1 (no move necessary)
//           0 if distance is >= 2 (may still need to move)
//
//  This is a .EM-file candidate.
//
/////////////////////////////////////////////////////////////////////////////
function CloseDistance( opponent )

    case Distance( me, opponent )
        1:              // the most likely, so first 
        0:
            return 1;
        default:
            RunToward( opponent );
            return 0;
    endcase

endfunction

