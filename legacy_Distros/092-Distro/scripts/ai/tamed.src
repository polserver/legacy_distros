/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// tamed.src      AI for tamed creatures
//      
// origional scripter: Dream Weaver 12/98
// extensive updates : Racalac 1/99/- -5/99
// DW updated 6/3/99 to allow fetch and drop commands
// Rac updated 9/3/99 for "all" commands, true following, more command choices in different states
// Rac updated 10/9/99 attempting to fix runaway problem
// Oroborous updated 11/16/00 to prevent non-mobiles from being targetted when ordering pets to attack.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////


use npc;
use os;
use uo;

include "include/eventid";
include "include/NPCBackpacks";
include "include/npccast";
include "include/randname";
include "include/spawnnet";

set_priority(5);

const HALT_THRESHOLD := 15;
const MOVING_EFFECT_FIREBALL  := 0x36D4; 

global me := Self();
global masterserial := GetObjProperty( me , "master" );
global master := SystemFindObjectBySerial( masterserial );
global mypack := FindMyPack(me.serial);

global caster;
global spells;
global count_casts;
global num_casts;
global cast_pct;
global saywords := 0;
global firebreather;
global summons := 1;

global guarding :=0;
global nextwatch := ReadGameClock();
global freetime;

me.setmaster( master );
spawnnet_clear(me);

if( me.name["<random>"] )
   SetName ( me , RandomName( me ) );
endif

SetAnchor( me.x, me.y, 5, 0 );

	if (getobjproperty(me, "frozen"))
		me.frozen := 1;
	endif

program TamedAI()

	if ( GetObjProperty( me, "regspawn" ) )
		local SpawnName := GetObjProperty( me, "regspawn" );
		local numspawns := Cint(GetGlobalProperty(SpawnName))-1;
		SetGlobalProperty(SpawnName,numspawns);
		EraseObjProperty( me, "regspawn" );
	endif

    local npccfg := readconfigfile("npcdesc");
    if (npccfg[me.npctemplate].script = "spellkillpcs")
        caster := 1;
        spells := GetConfigStringArray( npccfg[me.npctemplate], "spell" );
        cast_pct := npccfg[me.npctemplate].cast_pct;
        num_casts  := npccfg[me.npctemplate].num_casts;
        count_casts  := npccfg[me.npctemplate].count_casts;
        if (!cast_pct)
             cast_pct := 10;
        endif
    elseif (npccfg[me.npctemplate].script = "firebreather")
	firebreather := 1;
    endif
    SetObjProperty( me , "script",npccfg[me.npctemplate].script);

    EnableEvents( EVID_SPEECH, 12 );
    EnableEvents( EVID_ENGAGED + EVID_DAMAGED );
    EnableEvents( EVID_DOUBLECLICKED );
    EnableEvents( EVID_ITEM_GIVEN );

    SetWarMode( 0 );
    SetObjProperty(me, "serial", me.serial);

    if (!GetObjProperty(me, "Undead"))
	if (!GetObjProperty(me, "summoned"))
		freetime := ReadGameClock()+ 3600;
		freetime := freetime + GetSkill(master, SKILLID_TAMING) * 1500;
	endif
    else
	freetime := ReadGameClock()+ 3600;
    endif


    local ev;
    local evtext;
    local mename := lower(me.name);

    nextwatch := ReadGameClock();
    local waittime := 120;

    if (!freetime)
    	freetime := ReadGameClock()+ 3600;
    endif

    local setmymaster := 0;
    if (!master)
	setmymaster := 1;
    endif	

    while (1)
        ev := os::wait_for_event( waittime );
        case (ev.type)
            EVID_SPEECH:
              if( ev.source.serial = masterserial )
		if (setmymaster)
			RestartScript( me );
		endif
		speak();
		evtext := lower(ev.text);
		mename := lower(me.name);
                if (evtext[mename + " kill"] or evtext[mename + " attack"])
                    local what := Target( master , TGTOPT_HARMFUL + TGTOPT_CHECK_LOS );
			if (what)
                    		Fight( what );
			endif
                elseif( evtext[mename + " stop"] or evtext["all stop"])
		    guarding := 0;
                elseif (evtext["all kill"] or evtext["all attack"])
                    local the_target := Target( master , TGTOPT_HARMFUL + TGTOPT_CHECK_LOS );
                    if( the_target )
                        var mobs := ListMobilesNearLocation( master.x, master.y, master.z, 9 );
                        var eve array;
                          eve.+type := EVID_ALL_ATTACK_CMD;
                          eve.+source := me;
                          eve.+target := the_target;
                          SendEvent( me , eve );
                        foreach mob in mobs 
                            if( GetObjProperty( mob , "master" ) = me.master.serial )
                                SendEvent( mob , eve );
                            endif
                        endforeach
                    endif
                elseif ((evtext[mename + " come"]) or (evtext["all come"]))
                    local done := 0;
		    local chaseloop := 0;
                    while( done = 0 )
			chaseloop := chaseloop +1;
                        done := CloseDistance( ev.source );
			if (chaseloop > 50)
				done :=1;
			endif
                    endwhile
                elseif ((evtext[mename + " follow"]) or (evtext["all follow"]))
                    if( evtext[mename + " follow me"] or evtext["all follow me"])
                        Follow( ev.source );
                    else
                        local the_leader := Target( master , TGTOPT_CHECK_LOS );
                        if( the_leader )
                            var mobs := ListMobilesNearLocation( master.x, master.y, master.z, 9 );
                            var eve array;
                              eve.+type := EVID_ALL_FOLLOW_CMD;
                              eve.+source := me;
                              eve.+target := the_leader;
                              SendEvent( me , eve );
                            foreach mob in mobs
                                if( GetObjProperty( mob , "master" ) = me.master.serial )
                                    SendEvent( mob , eve );
                                endif
                            endforeach
                        endif
                    endif
                elseif (evtext[mename + " transfer"] or (evtext["all transfer"]))
                    Transfer();
                elseif (evtext[mename + " release"] or (evtext["all release"]))
                    Release();
                elseif (evtext[mename + " guard"]  or (evtext["all guard"]))
                    if( evtext[mename + " guard me"] or evtext["all guard me"])
                        guarding := ev.source;
		    else
                    	local what := Target( master , TGTOPT_HARMFUL + TGTOPT_CHECK_LOS );
			if (what)
                    		guarding := what;
			endif
		    endif
                elseif (evtext[mename + " fetch"]  or (evtext[mename + " get"]))
                    fetch();
                elseif (evtext[mename + " drop"])
                    drop();
                elseif (evtext[mename + " speak"]  or (evtext["all speak"]))
                    speak();
		endif
            endif

            EVID_ENGAGED:
            EVID_DAMAGED:
                if (ev.source)
                    Fight( ev.source );
                endif
          EVID_ALL_ATTACK_CMD:
             Fight(ev.target);
          EVID_ALL_FOLLOW_CMD:
             Follow(ev.target);
	  EVID_DOUBLECLICKED:
		if (ev.source.serial = masterserial)
			OpenMyPack();
		endif
	  EVID_ITEM_GIVEN:
		if (ev.source.serial = masterserial)
			EatIt(ev);
		endif
        endcase

	if (guarding != 0) 
		waittime := 5;
		if ( nextwatch <= readgameclock() ) 
			nextwatch := readgameclock() + 5;
			PrintTextAbove(me,"*guarding " + guarding.name + "*");
			foreach mob in ListHostiles( guarding, 9, 0 );
				Fight(mob);
				break;
			endforeach
			if ( (distance(me,guarding) > 20) or (!guarding) or (guarding.dead) )
				guarding := 0;
			endif
		endif
	else
		waittime := 120;
		if (freetime < ReadGameClock() )
			If (GetObjProperty(me,"companion"))
				freetime := ReadGameClock()+3600;
			endif
			if (!GetObjProperty( me , "summoned") )
				Release();
			else
				freetime := ReadGameClock()+3600;
			endif
		endif
	endif

	if (RandomInt(500)=1)
		Poop();
	endif

    endwhile
endprogram

function Fight( opponent )

        if (!opponent.isa(POLCLASS_MOBILE))
          return 0;
        endif

	if (opponent.serial = me.serial)
		return;
	endif
    
    EnableEvents( EVID_SPEECH, 12 );

    TurnToward( opponent );
    SetOpponent( opponent );

    local waittime;
    local evtext;
    local mename;

	local nextbreath := readgameclock();

  outer:
    while (opponent and !opponent.dead)
        waittime := CloseDistance( opponent ) * 1;
        local ev := wait_for_event( waittime );
	repeat
        case (ev.type)
            EVID_SPEECH:
               if( ev.source.serial = masterserial )
		Speak();
		   evtext := lower(ev.text);
		   mename := lower(me.name);
                   if( evtext[mename + " stop"] or evtext["all stop"])
                       SetWarMode( 0 );
		       guarding := 0;
                       return;
                   elseif ((evtext[mename + " kill"]) or (evtext[mename + " attack"]))
                       	local what := Target( master , TGTOPT_HARMFUL + TGTOPT_CHECK_LOS );
		       	if (what)
                       		SetWarMode( 0 );
                       		Fight( what );
                       		return;
		   	endif;
                   elseif (evtext["all kill"] or evtext["all attack"])
                       local the_target := Target( master , TGTOPT_HARMFUL + TGTOPT_CHECK_LOS );
                       if( the_target )
			  SetWarMode( 0 );
                          var mobs := ListMobilesNearLocation( master.x, master.y, master.z, 9 );
                          var eve array;
                            eve.+type := EVID_ALL_ATTACK_CMD;
                            eve.+source := me;
                            eve.+target := the_target;
                          SendEvent( me , eve );
                          foreach mob in mobs 
                             if( GetObjProperty( mob , "master" ) = me.master.serial )
                                SendEvent( mob , eve );
                             endif
                          endforeach
			  return;
                       endif
                   elseif ((evtext[mename + " come"]) or (evtext["all come"]))
                       	SetWarMode( 0 );
                       	local done := 0;
		    	local chaseloop := 0;
                    	while( done = 0 )
				chaseloop := chaseloop +1;
                        	done := CloseDistance( ev.source );
				if (chaseloop > 50)
					done :=1;
				endif
                    	endwhile
                       	return;
                   elseif ((evtext[mename + " follow"]) or (evtext["all follow"]))
                       SetWarMode( 0 );
                       if( evtext[mename + " follow me"] or evtext["all follow me"])
                           Follow( ev.source );
                           return;
                       else
                           local the_leader := Target( master , TGTOPT_CHECK_LOS );
                           if( the_leader )
                               var mobs := ListMobilesNearLocation( master.x, master.y, master.z, 9 );
                               var eve array;
                                 eve.+type := EVID_ALL_FOLLOW_CMD;
                                 eve.+source := me;
                                 eve.+target := the_leader;
                               SendEvent( me , eve );
                               foreach mob in mobs
                                   if( GetObjProperty( mob , "master" ) = me.master.serial )
                                       SendEvent( mob , eve );
                                   endif
                               endforeach
                           endif
                       endif
                   elseif (evtext[mename + " transfer"] or (evtext["all transfer"]))
                       Transfer();
                       return;
                   elseif (evtext[mename + " release"] or (evtext["all release"]))
                       Release();
                   elseif (evtext[mename + " fetch"]  or (evtext[mename + " get"]))
                       fetch();
                   elseif (evtext[mename + " drop"])
                       drop();
                   elseif (evtext[mename + " speak"]  or (evtext["all speak"]))
                       speak();
		   endif
               endif
            EVID_ENGAGED:
            EVID_DAMAGED:
		if (ev.source) 
		  if (ev.source != opponent)
			if( (!CheckLineOfSight( me, opponent )) or (RandomInt(8)=1) )
				opponent := ev.source;
				SetOpponent( opponent );
			endif
		  endif
		  turntoward( opponent );
		endif

            EVID_PEACEMADE:
                opponent := 0;
                break;
          EVID_ALL_ATTACK_CMD:
             Fight(ev.target);
             return;
          EVID_ALL_FOLLOW_CMD:
             SetWarMode( 0 );
             Follow(ev.target);
             return;
        endcase

	if (firebreather)
		if ( nextbreath <= readgameclock() )
		    if (RandomInt(4) = 1)
			Local dmg := randomint((cint( cint(me.maxhp/2.5) * me.hp)/me.maxhp))+5;
	   		PlayMovingEffect(me, opponent ,MOVING_EFFECT_FIREBALL, 10,1,1);
	   		applydamage(opponent, dmg);
		    endif
		    nextbreath := readgameclock()+RandomInt(10)+10;
        	endif
	endif

        if (caster)
           if (count_casts)
              if (num_casts > 0)
                 if (randomint(100) <= cast_pct)
                     sleep(1);
                     cast_offensive_spell(me,opponent);
                     num_casts := num_casts - 1;
                 endif
              endif
           else
              if (randomint(100) <= cast_pct)
                 sleep(1);
                 cast_offensive_spell(me,opponent);
                 num_casts := num_casts - 1;   
              endif   
           endif
        endif
        waittime := CloseDistance( opponent ) * 1;
	until (!ev := wait_for_event( waittime ));
    endwhile

    SetWarMode( 0 );

endfunction

function Follow( master )

    local oldmod := 0;
    me.dexterity_mod := 500;

    EnableEvents( EVID_SPEECH, 12 );

	local evtext;
	local mename;
	local d := 0;
	local chaseloop;
	local close_d := 1;

	nextwatch := readgameclock();

   while(master)
      var ev := wait_for_event(0);
      if (ev)
      case (ev.type)
            EVID_ENGAGED:
            EVID_DAMAGED:
	     	me.dexterity_mod := oldmod;
                if (ev.source)
                    Fight( ev.source );
		    return;
                endif
         EVID_SPEECH:
            if( ev.source.serial = masterserial )
		evtext := lower(ev.text);
		mename := lower(me.name);
		speak();
                if( evtext[mename + " stop"] or evtext["all stop"])
		    guarding := 0;
		    me.dexterity_mod := oldmod;
                    return;
                elseif ((evtext[mename + " kill"]) or (evtext[mename + " attack"]))
                    local what := Target( master , TGTOPT_HARMFUL + TGTOPT_CHECK_LOS );
		    me.dexterity_mod := oldmod;
                    Fight( what );
                    return;
                elseif (evtext["all kill"] or evtext["all attack"])
                    local the_target := Target( master , TGTOPT_HARMFUL + TGTOPT_CHECK_LOS );
                    if( the_target )
                       var mobs := ListMobilesNearLocation( master.x, master.y, master.z, 9 );
                       var eve array;
                         eve.+type := EVID_ALL_ATTACK_CMD;
                         eve.+source := me;
                         eve.+target := the_target;
                       SendEvent( me , eve );
                       foreach mob in mobs 
                          if( GetObjProperty( mob , "master" ) = me.master.serial )
                             SendEvent( mob , eve );
                          endif
                       endforeach
                    endif
                elseif ((evtext[mename + " follow"]) or (evtext["all follow"]))
                    if( evtext[mename + " follow me"] or evtext["all follow me"])
			me.dexterity_mod := oldmod;
                        Follow( ev.source );
			return;
                    else
                        local the_leader := Target( master , TGTOPT_CHECK_LOS );
                        if( the_leader )
                            var mobs := ListMobilesNearLocation( master.x, master.y, master.z, 9 );
                            var eve array;
                              eve.+type := EVID_ALL_FOLLOW_CMD;
                              eve.+source := me;
                              eve.+target := the_leader;
                            SendEvent( me , eve );
                            foreach mob in mobs
                                if( GetObjProperty( mob , "master" ) = me.master.serial )
                                    SendEvent( mob , eve );
                                endif
                            endforeach
                        endif
                    endif
                elseif (evtext[mename + " transfer"] or (evtext["all transfer"]))
                    Transfer();
                    break;
                elseif (evtext[mename + " release"] or (evtext["all release"]))
                    Release();
                elseif (evtext[mename + " fetch"]  or (evtext[mename + " get"]))
                    fetch();
                elseif (evtext[mename + " drop"])
                    drop();
                elseif (evtext[mename + " speak"]  or (evtext["all speak"]))
                    speak();
		elseif (evtext[mename + " guard"]  or (evtext["all guard"]))
                    if( evtext[mename + " guard me"] or evtext["all guard me"])
                        guarding := ev.source;
		    else
		    	local what := Target( master , TGTOPT_HARMFUL + TGTOPT_CHECK_LOS );
		    	if (what)
				guarding := what;
		    	endif
		    endif
		endif
            endif
          EVID_ALL_ATTACK_CMD:
	     me.dexterity_mod := oldmod;
             Fight(ev.target);
             return;
          EVID_ALL_FOLLOW_CMD:
	     me.dexterity_mod := oldmod;
             Follow(ev.target);
             return;
	  EVID_ITEM_GIVEN:
		if (ev.source.serial = masterserial)
			EatIt(ev);
		endif
	  EVID_DOUBLECLICKED:
		if (ev.source.serial = masterserial)
			OpenMyPack();
		endif
        endcase
      endif

	d := Distance( me, master );
	if( d > close_d )
		RunToward(master);
		if ( d > 25 )
			MoveCharacterToLocation( me, master.x, master.y, master.z );
		elseif ( d > 15 )
			me.dexterity_mod := oldmod;
			return;		
		endif
		chaseloop := chaseloop +1;
		if (chaseloop > 100)
			close_d := 2;
		endif
	else
		if (d < close_d)
			close_d := 1;
			chaseloop := 0;
		endif
		sleep(1);
	endif

	if ( (guarding != 0) and ( nextwatch <= readgameclock() ) )
		nextwatch := readgameclock() + 5;
		PrintTextAbove(me,"*guarding " + guarding.name + "*");
		foreach mob in ListHostiles( guarding, 9, 0 );
			me.dexterity_mod := oldmod;
			Fight(mob);
			return;
		endforeach
		if ( (distance(me,guarding) > 20) or (!guarding) or (guarding.dead) )
			guarding := 0;
		endif
	endif

	if (RandomInt(500)=1)
		Poop();
	endif

   endwhile

endfunction

function CloseDistance( opponent )

    case Distance( me, opponent )
        1:              // the most likely, so first 
        0:
            return 1;
        
        2:
            if(!RunToward( opponent ))
               return 2;
            else
               return 0;
            endif

        default:
            if(!RunToward( opponent ))
               return 1;
            else
               return 0;
            endif
    endcase

endfunction


function Transfer()

	If (GetObjProperty(me,"companion"))
		return;
	endif

	SendSysmessage( master , "Transfer " + me.name + " to whom?" );
 	local whom := Target( master, TGTOPT_NOCHECK_LOS );
	if(!whom)
		SendSysmessage( master , "Canceled" );
		return;
	endif

	if ( (firebreather) or (caster) )

	local npccfgfile := ReadConfigFile( "npcdesc" );
    	local tameskill := npccfgfile[me.npctemplate].tameskill;
	local tgttaming := GetSkill(whom, SKILLID_TAMING)+20;
	if ( tgttaming < tameskill )
		SendSysmessage( master , "That has no chance of controlling this beast!" );
		return;
	endif

	endif


	SetObjProperty( me , "master" , whom.serial );

	PrintTextAbove(me, me.name + " accepts " + whom.name+ " as its new master");

	RestartScript( me );

endfunction


function Release()

	If (GetObjProperty(me,"companion"))
		return;
	endif

	local summoned := GetObjProperty( me , "summoned" );
	local totem := Cint(GetObjProperty( me , "totem" ));
	if (totem)
		local it := CreateItemAtLocation(me.x,me.y,me.z,totem,1);
		if (it)
			it.name := me.name;
			it.color := Cint(GetObjProperty( me , "totemcolor" ));
			SetObjProperty(it,"critter",me.npctemplate);
			SetObjProperty(it,"critcolor",me.color);
			it.usescript := ":dundee:totem";
			it.decay := 0;
			it.movable := 1;
			PlaySoundEffect( me, SFX_SPELL_DISPEL );
			PlayStationaryEffect( me.x, me.y, me.z, FX_SMOKE, 0xA, 0xA );
			MoveCharacterToLocation(me,0,0,0,MOVECHAR_FORCELOCATION);
			damage( me , me.maxhp + 3 );
		else
			say("*Argh*");
			return;
		endif
	elseif (summoned)
		PlayStationaryEffect( me.x, me.y, me.z, FX_SMOKE, 0xA, 0xA );
		MoveCharacterToLocation(me,0,0,0,MOVECHAR_FORCELOCATION);
		damage( me , me.hp + 3 );
	else
		PrintTextAbove( me , me.name + " can roam free again!" );
		me.setmaster( 0 );
		me.script := GetObjProperty( me , "script" );
		EraseObjProperty(me, "master");
		EraseObjProperty(me, "script");
		SetAnchor(me.x,me.y,10,1 );
		RestartScript(me);
	endif
   
endfunction

function Fetch()

    if ( len(EnumerateItemsInContainer(mypack)) )
	drop();
    endif

    local tobj := Target(master);   //object I'm supposed to get
    if (tobj.container)        
       return;
    endif

    local times := 0;
    while ( (distance(me, tobj) > 1) and times < 5 and CheckLineOfSight(me,tobj) )
       if( !runtoward(tobj))
          sleep(1);
          times := times + 1;
       else
          times := 0;
       endif
    endwhile

    MoveItemToContainer(tobj, mypack);

endfunction


function drop()

	local myitems;

	foreach myitems in enumerateitemsincontainer(mypack)
		if (myitems.container.serial = mypack.serial)
        		moveitemtolocation(myitems, me.x, me.y, me.z,0);
			sleepms(100);
		endif
	endforeach

endfunction

function speak()

	PetCount();

	if (RandomInt(4)=1)	
		local npccfgfile := ReadConfigFile( "npcdesc" );
		local sound_number := npccfgfile[me.npctemplate].attackhitsound;
		PlaySoundEffect( me , sound_number );
	endif

endfunction

function PetCount()

	local npccfg := readconfigfile("npcdesc");

	local pets := 0;
	local mobs := ListMobilesNearLocation(me.x,me.y,me.z,8);
	foreach mob in mobs
		if ( (mob.script = "tamed") and (getobjproperty(mob,"master")=masterserial) )
			if ( (npccfg[mob.npctemplate].script = "spellkillpcs") or
			   (npccfg[mob.npctemplate].script = "firebreather") )
				if (mob.maxhp > 110)
					pets := pets + 5;
				else
					pets := pets + 2;
				endif
			else
				pets := pets+1;
			endif
		endif
	endforeach

	if ( (pets > 9) and ((RandomInt(20)+3) < pets) )
		Release();
	endif

endfunction

function OpenMyPack();

	if (!master)
		master := SystemFindObjectBySerial( masterserial );
		me.setmaster( master );
	endif

	if (distance(me,master) > 1)
			SendSysMessage(master,"You are too far to mount that");
		return;
	endif
	
	local mount := GetEquipmentByLayer( master, 25 );
//if (mount)
	
	local critter := "";
	case (mount.graphic)
	0x3ea2: critter := "horse";
	0x3e9f: critter := "horse2";
	0x3ea0: critter := "horse3";
	0x3ea1: critter := "horse4";
	0x3ea6:	critter := "llama";
	0x3ea3:	critter := "desertostard";
	0x3ea4:	critter := "frenziedostard";
	0x3ea5:	critter := "forestostard";
	endcase
 
	local animal := CreateNPCFromTemplate (critter, master.x, master.y, master.z);
	animal.facing := master.facing;
	animal.color := mount.color;
	animal.name := GetObjProperty (mount, "petname");
	SetObjProperty (animal, "master", master.serial);
	SetObjProperty (animal, "prevtamed", 1);
	animal.script := "tamed";
	RestartScript (animal);

	DestroyItem( mount );
 
	case (me.graphic)
	0x123:
	0x124:
		if (!me.backpack)
			local newbackpack := CreateItemAtLocation(me.x, me.y, me.z, 0xe75,1);
			EquipItem(me, newbackpack);
		endif

		foreach item in enumerateitemsincontainer(mypack)
			if (item.container.serial = mypack.serial)
				moveitemtocontainer(item, me.backpack);
			endif
		endforeach

		SendOpenSpecialContainer( master, me.backpack );
		return;
	endcase

//else

	local mounttype := 0;

	case (me.graphic)
	0xcc: //dark brown/horse
			mounttype := 0x3ea2;
	0xc8: //lightbrown/horse2
			mounttype := 0x3e9f;
	0xe2: //light grey/horse3
			mounttype := 0x3ea0;
	0xe4: //greybrown/horse4
			mounttype := 0x3ea1;
	0xdc: //Llama
			mounttype := 0x3ea6;
	0xd2: //desert
			mounttype := 0x3ea3;
	0xda: //frenzied
			mounttype := 0x3ea4;
	0xdb: //forest
			mounttype := 0x3ea5;
	endcase

	if (mounttype)
		MoveCharacterToLocation(master,me.x,me.y,me.z,MOVECHAR_FORCELOCATION);
		master.facing := me.facing;
		local mount := CreateItemAtLocation(me.x, me.y, me.z, 0xF021,1);

		if (me.color = 33784)
			me.color := 0;
		endif

                  mount.graphic := mounttype;
                  mount.color := me.color;
                  EquipItem(master,mount);
                  mount.color := me.color;

		setobjproperty(mount,"petname",me.name);
		setobjproperty(mount,"master",getobjproperty(me, "master"));
		setobjproperty(mount,"script",getobjproperty(me, "script"));
		MoveCharacterToLocation(me,0,0,0,MOVECHAR_FORCELOCATION);
		setobjproperty(me,"guardkill",1);
		applyrawdamage(me,me.maxhp);
	endif
//endif

endfunction

function poop();

	if ( ReadGameClock() > cint(GetObjProperty(me,"#nextpoop")) )

	local poopoo := 0;
	case (me.graphic)
		0xcc:
		0xe4:
		0xc8:
		0xe2:
		0x123:	poopoo := CreateItemAtLocation(me.x,me.y,me.z,0x0f3c,1);

		default: return;

	endcase

	if (poopoo)
		poopoo.decayat := ReadGameClock() + 300;
		poopoo.movable := 0;
	endif

	endif

	SetObjProperty(me,"#nextpoop",ReadGameClock() + 38400);

endfunction

function EatIt(ev)

	local edible := 0;
	case(ev.item.graphic)
		0x09d0:	
		0x09d1:	
		0x09d2:	
		0x0c5c:	
		0x0c5d:	
		0x0c64:	
		0x0c65:	
		0x0c66:	
		0x0c67:	
		0x0c6a:	
		0x0c6b:	
		0x0c6c:	
		0x0c6d:
		0x0c6e:
		0x0c70:
		0x0c71:
		0x0c72:
		0x0c73:
		0x0c74:
		0x0c75:
		0x0c77:
		0x0c78:
		0x0c79:
		0x0c7a:
		0x0c7b:
		0x0c7c:
		0x0c7f:
		0x0c80:
		0x0c81:
		0x0c82:
		0x0d39:
		0x0d3a:
		0x0f36:
		0x100c:
		0x100d:
		0x171d:
		0x171e:
		0x171f:
		0x1720:
		0x1721:
		0x1722:
		0x1723:
		0x1724:
		0x1725:
		0x1726:
		0x1727:
		0x1728:
		0x1729:
		0x172a:
		0x172b:
		0x172c:
		0x172d:
		0x1a92:
		0x1a93:
		0x1a94:
		0x1a95:
		0x1a96:
		0x1EBD:
		0x1EBE:
		0x1EBF:
		  edible := 1;
	default: edible := 0;
	endcase

	if (edible)
		PlaySoundEffect(me,cint(0x3b) + RandomInt(3));
		DestroyItem(ev.item);
		PrintTextAbovePrivate(me,"*Yum!*",ev.source);
		freetime := ReadGameClock() + 3600;
		return;
	endif

	if ( (me.graphic = 0x123 ) or (me.graphic = 0x124) )
		if (!me.backpack)
			local newbackpack := CreateItemAtLocation(me.x, me.y, me.z, 0xe75,1);
			EquipItem(me, newbackpack);
		endif
		MoveItemToContainer(ev.item,me.backpack);
		PlaySoundEffect(me,0x49);
	endif

endfunction
