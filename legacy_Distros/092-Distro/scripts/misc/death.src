// Modified 10-28-2000 by Michael Branin
// - Added Dundee's zap storage areas
// - Added Code necessary Region Spawner code that was missing

use uo;
use cfgfile;
use util;
use os;

include "include/starteqp";
include "include/NPCBackpacks";
include "include/spawnnet";


program npcdeath(corpse)

	set_critical(1);
	spawnnet_clear(corpse);
	dismount(corpse);

	set_critical(0);

//play deathsound
PlaySoundEffect(corpse,cint(ReadConfigFile("::npcdesc")[getobjproperty(corpse,"npctemplate")].DeathSound));


//Check if corpse was a regionspawner spawn
	if ( GetObjProperty( corpse, "regspawn" ) )
		local SpawnName := GetObjProperty( corpse, "regspawn" );
		if ( GetGlobalProperty(SpawnName) )
			local numspawns := Cint(GetGlobalProperty(SpawnName))-1;
			SetGlobalProperty(SpawnName,numspawns);
		else
			EraseGlobalProperty(SpawnName);
		endif
	endif
	
//Dundee's Zap Storage Areas (Searches for and deletes npc Storage areas)
	zapstorageareas(corpse);	
	
if (getobjproperty(corpse, "rise"))
        local parms := {};
        parms[1] := corpse.x;
        parms[2] := corpse.y;
        parms[3] := corpse.z;
        parms[4] := getobjproperty(corpse, "rise");
        parms[5] := corpse;
        start_script("misc/rise", parms);
endif
        if (getobjproperty(corpse, "guardkill"))
                destroyitem(corpse);
                return;
        endif

    MoveBackpackToCorpse(corpse);
    if( GetObjProperty( corpse , "summoned" ) )
       DestroyItem( corpse );
    elseif( GetObjproperty( corpse , "nocorpse" ) )
       MakeLoot (corpse , "");
       foreach item in EnumerateItemsInContainer( corpse );
          MoveItemToLocation( item , corpse.x , corpse.y , corpse.z, 0 );
       endforeach
       DestroyItem( corpse );
    else
       MakeLoot (corpse , "");
//treasuremaps:
	local corpseof := getobjproperty(corpse,"npctemplate");
	foreach item in EnumerateItemsInContainer( corpse );
		case (item.objtype)
			0x6001:
			0x6002:
			0x6003:
			0x6004:
			0x6005:	item.name := item.desc + " from " + corpse.desc +" (" + corpseof + ")";
				setobjproperty(item,"wherefrom",corpse.desc +" (" + corpseof + ")");
		endcase
	endforeach
	
    endif

endprogram

function dismount(corpse)

	local mount := 0;GetEquipmentByLayer( corpse, 25 );
	foreach item in enumerateitemsincontainer(corpse)
		if (item.objtype = 0xF021)
			mount := item;
			break;
		endif
	endforeach
	if (!mount)
		return;
	endif

	local critter := "";
	case (mount.graphic)
	0x3ea2: critter := "horse";
	0x3e9f: critter := "horse2";
	0x3ea0: critter := "horse3";
	0x3ea1: critter := "horse4";
	0x3ea6:	critter := "llama";
	0x3ea3:	critter := "desertostard";
	0x3ea4:	critter := "frenziedostard";
	0x3ea5:	critter := "forestostard";
	endcase
	if (mount.color = 1109)
		critter := "nightmare";
	endif


	local animal := CreateNPCFromTemplate (critter, corpse.x, corpse.y, corpse.z);
	animal.color := mount.color;
	DestroyItem( mount );

endfunction

function zapstorageareas(me)

	local myserial := getobjproperty(me,"serial");
	if (!myserial)
		return;
	endif

	local storage := FindStorageArea( "Merchant Storage" );
	if (DestroyRootItemInStorageArea( storage, myserial + " FS"))
		DestroyRootItemInStorageArea( storage, myserial + " PB");
		DestroyRootItemInStorageArea( storage, myserial + " 1C");
	endif

	storage := FindStorageArea( "Tamed Storage" );
	DestroyRootItemInStorageArea( storage, "Bankbox  " + hex(myserial));

endfunction