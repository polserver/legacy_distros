use npc;
use basic;
use os;
use uo;

include "include/eventID";
include "include/attributes";
include "include/sysEvent";
include "include/randName";
include "include/utility";
include "include/mrcSpawn";
include "include/speech";
include "include/client";
include "include/vetement";
include "include/NPCBackpacks";
include "util/bank";
include "include/anchors";
include "include/dist";
include "include/skillLists";
include "include/findCity";
include "include/begging";

const RESPAWN_MINUTES := 30;     // In how many minutes will the NPC respawn if killed.
const MAX_SKILLS      := 48;     // There are currently 48 Skills.
const UOBJ_GOLDCOIN   := 0x0eed; // A gold coin
const UOBJ_METALCHEST := 0x0e7c; // A Metal Chest
const REACT_THRESHOLD := 2;

set_priority( 50 );

var me := Self();
var buyimage  := {0x211b, 0x211c, 0x2121, 0x2124, 0x211f, 0x2120, 0x2126, 0x20f6, 0x211a, 0x2123, 0x2125, 0x2122, 0x211e, 0x211d, 0x2119, 0x20e6, 0x2108, 0x2103, 0x2101, 0x2135, 0x2136, 0x2137, 0x2127};
var sellimage := {0xc9, 0xd9, 0xcc, 0xc8, 0xe2, 0xe4, 0x123, 0xdc, 0x06, 0xee, 0xcd, 0xe1, 0xd4, 0x05, 0xd6, 0xcf, 0xd1, 0xd8, 0xcb, 0xd2, 0xda, 0xdb, 0x124};
var storage, speech, inv_rs, inv_fs, inv_pb, inv_1c;
var merchant_type := GetObjProperty(me, "MerchantType");
var npccfg := ReadConfigFile( "npcdesc" );
var mypen := GetObjProperty(me,"mypen");
var mystorage := GetObjProperty(me, "totalpets");
var sn := GetObjProperty(me,"restockserial");
var player, counter, pet, mx, my;
if(!merchant_type)
  SetObjProperty(me, "MerchantType", "Mage");
  merchant_type := "Mage";
endif

program stablemaster()
  start_script("NPCKeeper", me);
  var time := ReadGameClock();
  SetObjProperty(me,"countercheck", time);
  var parms := {};
  parms[1] := me;
  parms[2] := time;
  start_script(":taming:stableCounter", parms);
  if(!GetObjProperty(me, "MyGold"))
    SetObjProperty(me, "MyGold", 1000);
  endif
  if(mypen)
    case(CInt(mypen))
      1: mx := 5144;
         my := 1181;
      2: mx := 5162;
         my := 1181;
      3: mx := 5179;
         my := 1181;
      4: mx := 5180;
         my := 1161;
      5: mx := 5162;
         my := 1161;
      6: mx := 5145;
         my := 1161;
      7: mx := 5146;
         my := 1143;
      8: mx := 5163;
         my := 1143;
      9: mx := 5181;
         my := 1143;
     10: mx := 5164;
         my := 1125;
    endcase
  endif
  storage := FindStorageArea("Merchant Storage");
  if(!storage)
    exit;
  endif
  inv_fs := find_or_create_item(storage, me.serial + " FS", 0x0e40);
  inv_pb := find_or_create_item(storage, me.serial + " PB", 0x0e40);
  inv_1c := find_or_create_item(storage, me.serial + " 1C", 0x0e40);
  inv_rs := find_or_create_merc(me.serial + " " + merchant_type + " " + FindCity(me), sn, merchant_type);
  if(!inv_fs || !inv_pb || !inv_1c || !inv_rs)
    return;
  endif
  if(!GetGlobalProperty("NoRestock"))
    RestockMyInventory( inv_rs, inv_fs);
  endif
  EnableEvents(EVID_NODE);
  EnableEvents(SYSEVENT_ITEM_GIVEN);
  DisableEvents(SYSEVENT_SPEECH);
  var myanchor := GetObjProperty(me, "Anchor");
  if(myanchor)
    MoveCharacterToLocation(me, myanchor[1], myanchor[2], myanchor[3], MOVECHAR_FORCELOCATION);
  endif
  drop_anchor();
  var next_wander := ReadGameClock() + 10;
  if(GetObjProperty(me, "frozen"))
    me.frozen := 1;
  endif
  counter := GetObjProperty(me, "counter");
  if(!counter)
    counter := 0;
  endif
  if(!mystorage)
    mystorage := 0;
  endif
  var ev, text;
  var petname;
  var newpet;
  while (1)
    ev := os::wait_for_event(120);
    if(ev)
      mystorage := GetObjProperty(me, "totalpets");
      case (ev.type)
        EVID_NODE:   text := Lower(ev.text);
                     if((ev.source.cmdlevel > 2) && (text["showinventory"]))
                       SendOpenSpecialContainer(ev.source, inv_fs);
                     elseif((ev.source.cmdlevel > 2) && (text["unloadcfg"]))
                       UnloadConfigFile("::mrcspawn");
                       UnloadConfigFile(":playervendor:mrcspawn");
                     endif
                       if(text["buy"])
                         TurnToward(ev.source);
                         var res;
                         res := SendBuyWindow(ev.source, inv_fs, Self(), inv_pb );
                         if (!res)
                         endif
                       elseif (text["sell"])
                         if(GetObjProperty(me, "MyGold") >= 1000)
                           TurnToward(ev.source);
		                   sellanimal(ev.source);
                         else
                           PrintTextAbovePrivate(Self(), "I cannot afford any more of that", ev.source );
                         endif
                       elseif (text["vendor train"] || ev.text["merchant train"] )
                         TurnToward(ev.source);
                         MerchantTrain(me, ev.source, text);
                       elseif(ev.text["stable"])
                       if((mystorage >= 50) || (!mypen))
                         say("Im afraid im booked solid at the moment, please come again later");
                       else
                         player := ev.source;
                         TurnToward(ev.source);
                         say("Show me your pet.");
                         pet := Target(player);
                         if (pet)
                           var tempdata := GetObjProperty(pet, "master");
                           var summoned := GetObjProperty(pet, "summoned");
                           if((pet.script == "tamed") && (!summoned))
                             if (tempdata == player.serial)
                               var price := 30 + (GetStrength(pet)/5);
                               say("I charge " + price + " per week to take care of " + pet.name + ". (1 game week lasts roughly 2 real days)");
                               if (GetPayment(player, price))
                                 say("Keep this ticket and give it to me when you want " + pet.name + " back.");
                                 var ticket := CreateItemInBackpack(player, 0x14f0, 1);
                                 ticket.usescript := "";
                                 Save_Pet_Data(ticket, pet);
                               endif
                             else
                               say("This is not a zoo!");
                             endif
                           elseif((pet.graphic == CID_HUMAN_MALE) || (pet.graphic == CID_HUMAN_FEMALE) )
                             say("Do I look like an Inn Keeper?!");
                           else
                             say("That is not your pet.");
                           endif
                         endif
                       endif
                       endif
        SYSEVENT_MERCHANT_BOUGHT: TurnToward(ev.source);
                              PrintTextAbovePrivate(Self(), "The total of thy sale is " + ev.amount, ev.source );
                              var mygold := GetObjProperty(me, "MyGold");
                              mygold := mygold - ev.amount;
                              SetObjProperty(me, "MyGold", mygold);
                              foreach item in EnumerateItemsInContainer(inv_pb )
                                DestroyItem(item);
                              endforeach
        SYSEVENT_MERCHANT_SOLD:   TurnToward(ev.source);
                              PrintTextAbovePrivate(Self(), "The total of thy purchase is " + ev.amount, ev.source );
                              var mygold := GetObjProperty(me, "MyGold");
                              mygold := mygold + ev.amount;
                              SetObjProperty(me, "MyGold", mygold);
                              foreach item in EnumerateItemsInContainer(ev.source.backpack )
		                        petname :=GetObjProperty(item, "animalkind");
		                        if(petname)
		                          newpet := CreateNpcFromTemplate(petname, ev.source.x, ev.source.y,ev.source.z);
		                          DestroyItem(item);
                                  SetObjProperty(newpet, "master", ev.source.serial);
                                  SetObjProperty(newpet, "prevtamed", 1);
		                          newpet.script := "tamed";
                                  RestartScript(newpet);
		                        endif
                              endforeach
        SYSEVENT_ITEM_GIVEN:      if(ev.item.objtype == UOBJ_GOLDCOIN);
                                TrainSkill(me, ev.source, ev.item);
		                      else
		                        TurnToward(ev.source);
		                        Load_Ticket_Data(ev.source, ev.item);
		                      endif
      endcase
    endif
	if(ReadGameClock() >= next_wander)
	  begpurse(me);
      wander();
      if(coordist(me.x, me.y, myanchor[1], myanchor[2]) > 5)
        MoveCharacterToLocation(me, myanchor[1], myanchor[2], myanchor[3], MOVECHAR_FORCELOCATION);
      endif
      next_wander := ReadGameClock() + 30;
    endif
    Lookiehere(me);
  endwhile
endprogram

function MerchantTrain(me, who, text)
  var totaltrain := 0;
  var words := SplitWords(text);
  var skill := words[3];
  if(words[4])
    skill := skill + " " + words[4];
  endif
  if(!skill)
    var trainable := "";
    var holder := "";
    foreach thing in getskilllist(me)
      if(holder == "")
        holder := thing;
      else
        holder := holder + ", " + thing;
      endif
      totaltrain := totaltrain + 1;
    endforeach
    trainable  := trainable + holder;
    if(totaltrain > 0)
      say("I can train thee in the following skills:");
      say(trainable);
    else
      say("I can not train thee.");
    endif
  else
    skill := lower(skill);
    var npclevel := 33;
    var pclevel;
    var holder;
    foreach thing in getskilllist(me)
      if(lower(thing) == skill)
        holder := FindSkillId(thing);
        pclevel := GetEffectiveSkill(who, holder);
        if(pclevel > npclevel)
          say("I cannot teach you anymore.");
          return;
        else
          var trainmaxcost := GoldForSkillGain(npclevel, pclevel, holder);
          say("I will train thee " + thing + " for " + trainmaxcost + " gold.");
          SetObjProperty(who, "TrainMaxCost", trainmaxcost);
          SetObjProperty(who, "TrainSkillID", holder);
          return;
        endif
      endif
    endforeach
    say("I know not of that skill.");
  endif
endfunction

function TrainSkill(me, who, item)
  var variance := 0;
  var npc_level := 0;
  var pc_level := 0;
  var goldreceived := 0;
  var new_level := 0;
  var currentnpccost := 0;
  if((item.objtype == 0xeed) && (item.amount != 0))
    var trainmaxcost := GetObjProperty(who, "TrainMaxCost");
    var trainskillid := GetObjProperty(who, "TrainSkillID");
    if((!trainmaxcost || !trainskillid) && trainskillid != 0)
      say("I don't know what this is for, but thanks!");
      DestroyItem(item);
      return;
    endif
    npc_level    := 33;
    pc_level     := GetEffectiveSkill(who, trainskillid);
    goldreceived := item.amount;
    variance     := npc_level - pc_level;
    currentnpccost := GoldForSkillGain(npc_level, pc_level, trainskillid);
    if(pc_level < npc_level)
      if(currentnpccost != trainmaxcost)
        if(currentnpccost > trainmaxcost)
          npc_level := SkillGainForGold(npc_level, pc_level, trainskillid, trainmaxcost);
          variance  := npc_level - pc_level;
        else
          if(goldreceived > currentnpccost)
            say("I can not train thee to that level.");
            MoveItemToContainer(who.backpack, item);
            return;
          else
            trainmaxcost := currentnpccost;
          endif
        endif
      endif
      if(trainmaxcost <= goldreceived)
        new_level := (npc_level * 10);
        EraseObjProperty( who, "TrainMaxCost" );
        EraseObjProperty( who, "TrainSkillID" );
      else
        new_level := ((pc_level + CInt((CDbl(variance) * (CDbl(goldreceived) / CDbl(trainmaxcost))))) * 10);
        SetObjProperty( who, "TrainMaxCost", trainmaxcost-goldreceived );
      endif
      say("Let me show you how it's done.");
      SetBaseSkillBaseValue(who, trainskillid, new_level);
      var skillarray := GetObjProperty(who,"SkillArray");
      if(!skillarray)
        skillarray := {};
        skillarray.append(trainskillid);
        foreach thing in GetSkillIds()
          if(GetBaseSkill(who, thing) > 0)
            skillarray.append(thing);
          endif
        endforeach
        SetObjProperty(who,"SkillArray", skillarray);
      else
        var holder := {};
        holder.append(trainskillid);
        foreach thing in skillarray
          if((thing != trainskillid) and (GetBaseSkill(who, thing) > 0))
            holder.append(thing);
          endif
        endforeach
        skillarray := holder;
        SetObjProperty(who,"SkillArray", skillarray);
      endif
      DestroyItem(item);
      SendSysMessage(who, "Your skill increases.");
    else
      say("I'm not as good as thee.  Please find another to train thee.");
      MoveItemToContainer(who.backpack, item);
    endif
  else
    say("Bah, I have no use for this. Be off with ye.");
    MoveItemToContainer(who.backpack, item);
  endif
endfunction

function GoldForSkillGain( npc_skill, pc_skill, skillid )
  var maxskill := npc_skill - pc_skill;
  return maxskill*10; // Cost equals ten times the difference.
endfunction

function SkillGainForGold(npc_level, pc_level, trainskillid, goldreceived)
  return (goldreceived/10) + pc_level;
endfunction

function sellanimal(who)
  var i;
  say("What pet would you like to sell?");
  var pet := Target(who);
  if((!pet) || (pet==""))
	SendSysMessage(who, "Cancelled.");
	return;
  endif
  var tempdata  := GetObjProperty(pet, "master");
  var summoned  := GetObjProperty(pet, "summoned");
  if(!tempdata)
	say("I cannot buy that.");
	return;
  endif
  if((pet.script == "tamed") && (tempdata == who.serial) && (!summoned))
    var theitem;
	if((pet.objtype==0xd3) && (pet.color==0x02e6))
	  theitem := CreateItemInContainer(inv_fs, 0x20cf, 1);
	elseif(pet.objtype==0xd3)
	  theitem := CreateItemInContainer(inv_fs, 0x2118, 1);
	else
	  for(i:=1;i<=sellimage.size();i:=i+1)
		if(pet.objtype==sellimage[i])
		  theitem := CreateItemInContainer(inv_fs, buyimage[i], 1);
		  break;
		endif
	  endfor
	endif
    SetObjProperty(theitem, "ClearRestock", (ReadGameClock() + 1800));
	var buyamount := CInt(GetStrength(pet) / 2);
    var mygold := GetObjProperty(me, "MyGold");
    if(!mygold)
      mygold := 5000;
    endif
    mygold := mygold - buyamount;
    SetObjProperty(me, "MyGold", mygold);
	say(pet.name + " is worth $" + buyamount);
	SetObjProperty(pet, "guardkill", 1);
	MoveCharacterToLocation(pet, 5555, 1111, 0, MOVECHAR_FORCELOCATION);
	Damage(pet, GetHp(pet) + 10);
	CreateItemInBackpack(who, 0x0eed, buyamount);
	return;
  elseif((pet.graphic == CID_HUMAN_MALE) || (pet.graphic == CID_HUMAN_FEMALE) )
	say("Do I look like an Inn Keeper?!");
  else
	say("You could sell " + pet.name + " but that is not your pet.");
  endif
endfunction

function Save_Pet_Data(ticket, pet)
  var tempdata;
  ticket.name := "Pet claim ticket for : " + pet.name;
  SetObjProperty(ticket, "petserial", pet.serial);
  tempdata := pet.npctemplate;
  SetObjProperty(ticket, "pettemplate", tempdata);
  SetObjProperty(pet,"stabled", 1);
  SetObjProperty(pet,"amtdue", 0);
  SetObjProperty(pet,"days", 1);
  MoveCharacterToLocation(pet, mx, my, 0, MOVECHAR_FORCELOCATION);
  mystorage := mystorage + 1;
  SetObjProperty(me, "totalpets", mystorage);
endfunction

function Load_Ticket_Data(player, ticket)
  if (!canclaim(player,GetObjProperty(ticket, "pettemplate")))
    say("You have no chance of controlling that!");
    return;
  endif
  var tempdata := 0;
  var newpet := 0;
  var pet;
  if(ticket.objtype == 0x14f0)
    tempdata := GetObjProperty(ticket, "petserial");
    say("Oh, let me find your pet for you. One moment, please.");
    sleep(1);
    tempdata := GetObjProperty(ticket, "petserial");
    var petlist := ListMobilesNearLocation(mx, my, 0, 8);
    foreach critter in petlist
      if(critter.serial == tempdata)
        pet := critter;
        break;
      endif
    endforeach
    if(!pet.serial)
      say("Im sorry, but I dont have this pet,");
      sleep(1);
      say("are you sure you stabled it with me?");
      return;
    endif
    var cost := GetObjProperty(pet, "amtdue");
    if(cost > 1)
      say("you owe me " + (cost - 1) + " gold coins for extended care.");
      sleep(1);
      if(!GetPayment(player, (cost - 1)))
        say("please come back when you can afford the boarding fees");
        return;
      endif
    endif
    SetObjProperty(pet, "master", player.serial);
    SetObjProperty(pet, "prevtamed", 1);
    EraseObjProperty(pet,"stabled");
    EraseObjProperty(pet,"amtdue");
    EraseObjProperty(pet,"days");
	pet.script := "tamed";
    RestartScript(pet);
    MoveCharacterToLocation(pet, player.x, player.y, player.z, MOVECHAR_FORCELOCATION);
    mystorage := mystorage - 1;
    SetObjProperty(me, "totalpets", mystorage);
    say("Take care of " + pet.name + " and be sure to feed it!");
    DestroyItem(ticket);
  else
    TakeItem(player, ticket);
  endif
endfunction

function GetPayment(player, price)
  var backpack := EnumerateItemsInContainer(player.backpack);
  var a := 0;
  foreach item in backpack
    if ((item.objtype == 0xeed) && (item.amount >= price) )
      if(SubtractAmount(item, price))
        a := 1;
        break;
      endif
    endif
  endforeach
  if(a == 1)
    return 1;
  else
    say("You dont have " + price + " gold coins!");
    return 0;
  endif
endfunction

function canclaim(player, pettemplate)
  case (pettemplate)
    "horse":
    "horse1":
    "horse2":
    "horse3":
    "forestostard":
    "desertostard":
    "llama":
    return 1;
  endcase
  var conf := ReadConfigFile("::npcdesc");
  var elem;
  var points := 0;
  elem := FindConfigElem(conf, pettemplate);
  if (!elem)
    return 0;
  endif
  var difficulty := CInt(GetConfigInt(elem, "tameskill"));
  if (difficulty < 50)
    return 1;
  elseif ( ( difficulty - 20 ) > GetEffectiveSkill(player, SKILLID_TAMING ) )
    return 0;
  else
    return 1;
  endif
endfunction

function Lookiehere(who)
  var mobiles := ListMobilesNearLocation(who.x, who.y, who.z, 15);
  var guard, num, i, hogcall, guardzone, element, range, timer, elem;
  var cfgfile := ReadConfigFile("::gzone");
  var entries := GetConfigStringKeys(cfgfile);
  foreach listing in entries
    element :=  cfgfile[listing];
    range := element.range;
    range := SplitWords(range);
    if((who.x >= CInt(range[1])) && (who.x <= CInt(range[3])) && (who.y >= CInt(range[2])) && (who.y <= CInt(range[4])))
      guardzone := 1;
      break;
    endif
  endforeach
  foreach npc in mobiles
	if(!npc.acctname)
	  elem := FindConfigElem(npccfg, npc.npctemplate);
	  if(!elem.guardignore && !GetObjProperty(npc, "called"));
		if((npc) && (npc.script != "tamed") && (npc.script != "light"))
          case(RandomInt(4) + 1)
            1: hogcall := "Guards! They're killing people here!";
            2: hogcall := "Guards! I pay my taxes and no guards? Guards!";
            3: hogcall := "Help! They're dying here! Guards!";
            4: hogcall := "Guards! Come save us quick!";
            5: hogcall := "Ah! Help us! Guards!";
          endcase
          PrintTextAbove(me, hogcall);
          if(guardzone == 1)
		    SetObjProperty(npc, "called", 1);
            num := RandomInt(4) + 1;
            foreach mobile in ListMobilesNearLocation(me.x, me.y, me.z, 15)
		      if(mobile.npctemplate == "townguard")
		        var ev := array;
                ev.+ type;
                ev.+ source;
                ev.type := EVID_PEACEMADE;
                ev.source := npc;
                SendEvent(mobile, ev);
                ev.type := SYSEVENT_ENGAGED;
                SendEvent(mobile, ev);
                SetObjProperty(npc, "guardkill", 1);
              endif
            endforeach
          endif
		endif
	  endif
    else
	  timer := GetObjProperty(npc, "guardstimer");
	  if(npc.criminal && (timer < ReadGameClock() || timer.errortext))
        foreach mobile in ListMobilesNearLocation(me.x, me.y, me.z, 15)
		  if(mobile.npctemplate == "townguard")
		    var ev := array;
            ev.+ type;
            ev.+ source;
            ev.type := EVID_PEACEMADE;
            ev.source := npc;
            SendEvent(mobile, ev);
            ev.type := SYSEVENT_ENGAGED;
            SendEvent(mobile, ev);
            SetObjProperty(npc, "guardkill", 1);
          endif
        endforeach
        SetObjProperty(npc, "guardstimer", ReadGameClock()+60);
	  endif
	endif
  endforeach
  sleep(1);
endfunction