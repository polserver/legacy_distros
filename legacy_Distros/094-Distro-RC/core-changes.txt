
=============================================================================
POL094-2001-05-17
=============================================================================
06-16:
    Vital regen rates will be limited to the range (-30,000 to +30,000)
    Vital maximum values (in hunredths) will be limited to the range (100 to 10,000,000)
       (1.00 to 100,000.00)
    SetVital will accept any value between 0 and 10,000,000
    Added SystemHook function Attack(attacker,defender)
      -- called when the attack timer times out.
      -- attacker must not be hidden
      -- defender is chosen by checking attacker's Opponent, then Hostiles, for one
         that meets the following criteria:
           1) Defender is alive
           2) Defender is in range of attacker's weapon
           3) Defender is not hidden
           4) Defender is not concealed from Attacker
           5) Line-of-sight exists between Attacker and Defender
    LOS will be checked when searching for an attackable mobile

06-04:
    Removed SetAttributeIntrinsicMod
    GetIntrinsicModFunction added to attributes.cfg
    added AlterAttributeTemporaryMod

05-20:
    Updated vitals will be sent to the client
     - this only works for your own character, you won't see changes to others' vitals
    Added GetAttributeIntrinsicMod and SetAttributeIntrinsicMod

05-17:
    Removed SetVitalRegenRate since regen rates are specified by exported functions
    Added RecalcVitals(chr) which will recalculate regen rates and maximum values
      for all vitals on a mobile
    Corrected an error in the compiler having to do with optimization of if..elseif..endif statements

04-03:
    Newly created NPCs will regenerate vitals and start with maximum vitals
    npcdesc.cfg entries can specify AttackAttribute instead of AttackSkillID

03-25:
    removed mobile.hp_regen_rate
    removed mobile.mana_regen_rate
    removed mobile.stamina_regen_rate
    resmoved mobile.strength_mod
    removed mobile.intelligence_mod
    removed mobile.dexterity_mod
    removed mobile.hp, mobile.maxhp
    removed mobile.mana, mobile.maxmana
    removed mobile.stamina, mobile.maxstamina
    removed mobile.strength
    removed mobile.dexterity
    removed mobile.intelligence
    removed uo::GetStatus
    removed uo::GetStats
    removed mobile.setstr()
    removed mobile.setint()
    removed mobile.setdex()
    removed uo::GetRawSkill
    removed uo::SetRawSkill
    removed uo::GetSkill
    removed uo::AwardRawPoints
    removed internal attribute advancement due to combat (including parrying)
    Added system hook: ParryAdvancement( attacker, weapon, defender, shield )
    Weapon entries in itemdesc.cfg must have an 'Attribute' instead of a 'SkillID'
    data/pol.txt needs the following element: (core 93 doesn't create)
        System
        {
            CoreVersion 93
        }
    

    TODO: update mana, stamina, hits when they change
        [ManaUpdater, StaminaUpdater, HitsUpdater, FullStatsUpdater]

=============================================================================
POL093-2001-02-10
=============================================================================
    SetAttributeBaseValue will only accept base values between 0 and 2200 (0.0 to 220.0)
    Added GetVitalMaximumValue(character, vitalname);

    Added functions for Vitals:
        GetVital(character, vitalname)
        SetVital(character, vitalname, value);
        GetVitalRegenRate( character, vitalname )
        SetVitalRegenRate( character, vitalname, rate )
        Regen rates are in "hundredths of points per minute."
        A current regen rate of 100 (1 point per 5 seconds) would therefore
        be 1200 (12 points per minute) under the new system.
        Valid Vitals are Life, Stamina, and Mana


    Added 'CombatAdvancement' system hook
      function CombatAdvancement( attacker, weapon, defender )
      The builtin functionality performs the following:
        For the Attacker:
           Award 30 raw skill points in the weapon skill
           Award stat gain as if the weapon skill were used successfully.
           Award 15 raw skill points in Tactics
           Award stat gain as if Tactics were used successfully.
        For the Defender:
           Award 15 raw skill points in Tactics
           Award stat gain as if Tactics were used successfully.
      This is called whether or not the attack was successful

      (I'm sure I'm not the only one that thinks combat needs an overhaul)
       


    Started the new Attribute System (Read this!)
    ---------------------------------------------
        The short story: these functions presently operate on the current
          skills and stats that you know and love.  Core 93 will not change
          the underlying skills and stats - GetSkill, SetRawSkill etc will
          continue to work.  Core 94 will no longer support these functions, 
          so you have until then to convert your current usage to use these
          new functions.
          When this is complete, there'll be no more "Raw" skill/stat values,
          and all Attribute advancement will be handled by scripts.

        See core-docs.txt for a description of Attributes and how they work.
        In particular, the "conversion notes" at the end may be useful.

        Added uo.em functions:
            GetAttribute( character, attrname );
            GetAttributeBaseValue( character, attrname );
            GetAttributeTemporaryMod( character, attrname );
            SetAttributeBaseValue( character, attrname, basevalue );
            SetAttributeTemporaryMod( character, attrname, tempmod );

    config/pkgroots.cfg specifies additional root directories to search for packages.
        An example pkgroots.cfg:
            PackageRoot
            {
                dir d:\devpkg\
            }
        Do include the trailing slash.

    Assertions:
        Assertions are now present in the Win32 build as well as the Linux build.
        EnableAssertions is now 1 by default.
        DumpStackOnAssertionFailure=1 in pol.cfg will cause a stack backtrace
        to be generated when any assertion fails.  
        In any case, an exception will be thrown on an assertion failure.
        I recommend running with EnableAssertions=1.  It is reloaded when pol.cfg is changed.

=============================================================================
POL092-2000-12-11
=============================================================================
    pkg.cfg directive added: "Replaces {pkg}".  Indicates this package should replace
      any version of {pkg} found under the /pol/pkg/ tree.


    objtypes.txt will be created on startup.  It lists all used and unused objtypes in numerical order.
    Fixed a bug where only the first element in movecost.cfg would be read.
    Added uo::SelectColor(chr,dyetub)
    Removed internal dye and dyetub functionality.  (replacement 'dyeitems' package uploaded to pol-core-test)
      - note this uses Zulu's 'dyecheck' script instead of the old internal functionality
        to determine if you can dye a particular item.
    Corrected a bug which caused BaseSkillToRawSkill (and therefore NPC creation) to take a
      long time to complete (even for base skill values above 160)
    Added support for the client's book interface:
      uo::SendOpenBook(chr,book) kicks it off
      The 'book' passed must have a Method Script, exporting the following functions:
        exported function IsWritable(book) // returns 0 or 1 for readonly/writable
        exported function GetNumLines(book) // returns maximum number of lines
        exported function GetTitle(book)
        exported function GetAuthor(book)
        exported function GetLine(book, line) // line is 1-based
      Writable books must provide the following functions:
        exported function SetAuthor(book,author)
        exported function SetTitle(book,title)
        exported function SetLine(book,line,text)
        exported function GetContents(book) // returns an array of all lines
      I've put together a sample 'sysbook' package to demonstrate this.

    Added the Data Store.
      The Data Store is a collection of files, stored under data/ds/, saved
        atomically with the rest of the world data.
      Only those Data Files actually modified are saved at system save time.
      A Data File is a collection of Data File Elements.  Data File Elements are
        accessed by key, which can either be a String (case insensitive match)
        or an Integer.
      A Data Element is a collection of Properties.  Each Property has a Property
        Name and a Property Value.  A Property Name is a string, and is, er, 
        case-sensitive (doh), while a Property Value can be any "packable" script
        object.

      In other words, a Data File is like a Config File that you can modify and
        is stored under data/.  The Properties in a Data File Element are just 'cprops'
        except that when saved in the data store I don't prefix them all with 'cprop'

      scripts/datafile.em lists the functions that are complete and the methods provided
        by a DataFile and by a DataFileElement.
     
      Packages can have their own Data Files; these will be stored in 
        data/ds/{pkgname}/.  Normal package filename resolution rules apply.
       
    Normal "Open Spellbook" handling will occur if the OpenSpellbook hook returns false.
      (The OpenSpellbook hook script should return 1 if it handled the event, 0 if it didnt)
    Any itemdesc entry can define zero or more 'OldObjtype' entries.  These are for
      objtype renumbering.
    Major rework of multi handling.  There must now be itemdesc.cfg entries for boats
      and houses, and the objtypes aren't tied to the MultiIDs.  Multis.cfg defines what to
      expect in multi.mul.
      CreateMultiAtLocation has more flags for boat creation
        (CRMULTI_FACING_NORTH, CRMULTI_FACING_EAST, etc)
      An example entry for pkg/std/boat/itemdesc.cfg:
        Boat 0x6041
        {
            Name smalldragonboat
            Graphic 0x4004      // base graphic
            MultiID 0x0004

            OldObjtype 0x4004
            OldObjtype 0x4005
            OldObjtype 0x4006
            OldObjtype 0x4007
        }
      An example entry for pkg/std/housing/itemdesc.cfg:
        House 0x6060
        {
            Name smallstoneandplasterhouse
            Graphic 0x4064
            MultiID 0x64

            OldObjtype 0x4064
        }
      See the latest pol-coresupp zip for config/multis.cfg
      

    Fixed an error where the server would fail to start if a container was overfilled
    RegisterForSpeechEvents takes an optional 'flags' parameter.  If LISTENPT_HEAR_GHOSTS is
      passed, this listening point will hear unfiltered ghost speech.
    Added scripts/include/sysevent.inc.  All system EVID_* constants have been copied here
      and renamed to SYSEVENT_*.
    Added SYSEVENT_GHOST_SPEECH (0x1000), to allow an NPC to hear unfiltered ghost speech.  
      The NPC must still be able to _see_ the ghost in able to hear it.
    NPC event masks will now be checked for SYSEVENT_SPEECH being set.
    Added npc.eventmask, in part to help you find scripts that don't set SYSEVENT_SPEECH.
    Added npc.speech_color and npc.speech_font.  npc::say() will use these.
      These will be saved in npcs.txt as SpeechColor and SpeechFont (and can be specified in
      npcdesc.cfg)

    Added uo::AddAmount(item,amount)
      - only adds to stackables
      - only allows stacks up to 60,000 
      - checks for container overfill
    Added an optional 'flags' parameter to CreateMultiAtLocation
      - uo.em contains constants to add together (CRMULTI_*)
      - this parameter only applies to houses, not boats
    Before character deletion, scripts/misc/ondelete.ecl and anypkg/ondelete.ecl will be called.
      Their return values are ignored.
    New system hook: OpenSpellbook( chr ), called when the Open Spellbook packet is received
     (not when a spellbook is doubleclicked).  This is called even if the character is dead!

    Added 'Method Scripts' for items:
      An itemdesc.cfg entry can specify a 'MethodScript'
      This is a script that (presumably) contains exported functions.
      Method calls on the item are forwarded to the exported functions in this script.
      Exported functions can have the same name as an existing object method.  In this case,
        the exported function will override the existing object method.
      An example that modifies door.open():

      pkg/.../door/itemdesc.cfg:
        Door 0x0675
        {
            xmod -1
            ymod +1
            script door
            doortype metal
            MethodScript cdoor.ecl
        }

      pkg/.../door/cdoor.src:
        exported function open( door )
            print( "cdoor::open(" + door.serial + ")" );
            return door._open();
        endfunction

        program install()
            print( "installing cdoor" );
            return 1;
        endprogram

      Note the mostly empty 'program' section.  It must return 1 in order for the 
        method script to be installed.
      Script methods don't have to be the same as existing methods, and can take
        and number of parameters.  Pass-by-reference should be possible, as well.
      Method scripts can only be specified for items in packages; the server will
        probably blow chunks if you try it in pol/config/itemdesc.cfg.
    Preceding a method call with an underscore will directly call the "real" object method.
    

    escript changes:
        'int' is no longer a reserved word 
        'exported' is now a reserved word
    logon scripts in packages will now be called on character creation
    Added the concept of a "System Hook":
      - Any package can contain a syshook.cfg file
      - Each entry is a SystemHookScript, which can provide one or more exported functions
      - the only function that can presently be hooked is 'CheckSkill'
      - A sample syshook.cfg:
            SystemHookScript hooktest.ecl
            {
                CheckSkill MyCheckSkill
            }
      - And hooktest.src to go with it:
            use uo;

            exported function MyCheckSkill(who,skillid,difficulty,points)
                print( "MyCheckSkill("+who.serial+","+skillid+","+difficulty+","+points+")" );

                // note you can call the "system" function normally
                return CheckSkill(who,skillid,difficulty,points);
            endfunction

            program hooktest()
                print( "hooktest prog" );
            endprogram
      - The 'program' section is executed once, at system startup.
        Thereafter, the exported function is called as needed.
      - A hooked 'CheckSkill' will override any script's call to CheckSkill, as
        well as the internal combat CheckSkill calls.
      - Each hooked function has a recursion guard, so the system function can
        be called from within the hook function (as in the example above)
      - there is currently no way to unload system hook functions

    Containers won't count their own weight against the weight they can hold
    Multiple scripts can have active gump dialogs on a particular client

    The 'SecureTradeContainer' itemdesc.cfg entry must specify "Weight 0"
    Here is the entry I use:
        Container 0xFF01
        {
            Name    SecureTradeContainer
            graphic 0x1E5E
            Gump    0x003C
            MinX    0
            MaxX    66
            MinY    0
            MaxY    33
            Weight  0
        }
    If "Weight 0" is not specified, mobiles who participate in secure trading
      will weight 255 stones more than they should.


    Container entries in itemdesc.cfg can specify MaxWeight and MaxItems
      - if zero (or not specified) there are no limits
      - if MaxItems is specified, it includes item counts for child containers
      - if MaxWeight is specified, it includes weights for child containers
      - there is still a limit of 150 items in the top-level of a container
          (so as not to flip out the client)
      - added item.item_count
      - container count and weight limits will not be enforced during startup
    Weight of a mobile will now include items being "dragged" as well as
      items in the secure trade window
    Added Container scripts (specify in itemdesc.cfg):
        Entries:
            CanInsertScript // called to see if an item can be inserted
            OnInsertScript  // started after an item is inserted
            CanRemoveScript // called to see if an item can be removed
            OnRemoveScript  // started after an item is removed
      - program definitions are:
      - program can_insert( who, container, item );
      - program on_insert( who, container, item );
      - program on_insert( who, container, item, amtadded ); // if an existing stack was added to

      - program can_remove( who, container, item ); // return nonzero to allow removal
      - program on_remove( who, container, item ); // when the item is dragged
            - note the item will always be "in use" when this script is called.
      - only started on "client drag" operations
    Packed variables containing 'x' characters (an empty array element) should unpack correctly
      (would have unpacked a huge error object instead of a nothing)

=============================================================================
POL091-2000-11-01
=============================================================================
    Added more guild support:
      All guild data is stored in data/guilds.txt.  Existing GuildId entries in
      pcs.txt will be migrated.
      Ally and Enemy status is always 2-way, and is not transitive, so any hierarchies
        will have to be implemented in script.

      - new uo.em functions:
        CreateGuild();          // returns a guildref
        FindGuild( guildid );   // returns a guildref or error
        ListGuilds();           // returns an array of guildrefs
        DestroyGuild( guild );   // destroys a guild with neither members, allies, nor enemies
      - Guild Object
        Properties:
         guild.guildid : integer, unique guild identifier
         guild.members : array of offline mobilerefs
         guild.allyguilds  : array of allied guilds
         guild.enemyguilds : array of enemy guilds

        Methods:
         guild.ismember( who )
         guild.isallyguild( otherguild )
         guild.isenemyguild( otherguild )

         guild.addmember( who )
         guild.addallyguild( otherguild )
         guild.addenemyguild( otherguild )

         guild.removemember( who )
         guild.removeallyguild( otherguild )
         guild.removeenemyguild( otherguild )

         guild.getprop( propname )
         guild.setprop( propname, propvalue )
         guild.eraseprop( propname )
        
    Added Auxilliary Client Interface
      - a package can contain 'auxsvc.cfg'
      - packed values are sent, newline-terminated.  These show up on the aux service
        script's event queue as an event with ev.type = "recv" and ev.value = the unpacked value
      - parameter to the aux control script is an AuxConnection
      - AuxConnection.transmit( val ) sends packed representation of val, newline terminated.
      - see 'pkgauxsvc.zip' for an example

    "CON", "AUX", "PRN", and "NUL" will be disallowed as text command names.
    NPC intrinsic weapons will be re-equipped after unequipping another weapon
      (instead of switching to the human wrestling weapon)
    Removed "Searching for" messages when looking for textcmds
    An "Unknown command" message will display if you mistype a textcmd
    NPCs will walk through mobiles they can't see (whether due to concealment or hiding).
    NPC AttackHitScript entries cause hit scripts to fire now.
    Ghosts will no longer impede NPC movement.
    minrange and maxrange can be specified in Weapon entries in itemdesc.cfg.
      Default for melee weapons: minrange 0, maxrange 1
      Default for projectile weapons: minrange 2, maxrange 20
        (same as previous code)
    NPCs in packages should retain their intrinsic weapon after a restart.
    npc.isa(t) and mobile.isa(t) now work
    mobile.setcriminal(0) now works
    PID will display for runaway scripts
    ReadConfigFile( ":*:foo" ) will load a combination of all foo.cfg files found in 
      config/ and all package directories.  These can be unloaded.  This method is preferred
      over using "::itemdesc", "::spells", and "::skills", since reloading will be handled
      correctly.
    Added extra checking on item destruction in case a destroyscript is evil
    Added uo::SendViewContainer( chr, container ) - just sends the container contents
      (does not grant access like SendOpenSpecialContainer)
    mobile.truecolor and mobile.trueobjtype are r/w (though I think trueobjtype has no effect)
    Fixed a crash bug in some instances of item destruction, decay being one example.
    "AttackHitScript" can be specified in npcdesc.cfg entries for a per-npctemplate HitScript.
        For packaged npcdesc.cfg entries, this will need to have the package specified.
        Also note that AttackSpeed must be specified for any per-npctemplate Attack* properties to be used.
    added object.isa( polclass_type ) : boolean
      use constants POLCLASS_OBJECT, POLCLASS_ITEM, etc from uo.em
        example:
          door.isa( POLCLASS_DOOR ) will return true
          door.isa( POLCLASS_ITEM ) will return true
          door.isa( POLCLASS_MOBILE ) will return false
    Whisper range is 2, Yell range is 25
    Items in decaying locked containers will be destroyed with the container.
    movable=0 items in decaying containers will be destroyed.
      Note that in both cases, destroy scripts will not execute.
       (Destroy scripts execute only when DestroyItem is called, or when a toplevel
        item is checked for decay)
    '=' is assumed to be a command prefix (as well as '.')
    mob.setcriminal(0) will clear the criminal timer and send status update packets
    "destroy [desc] ..." messages will no longer display on item destruction.

POL090-2000-09-03
=================
SPECIAL NOTE:
  ALL SCRIPTS MUST BE RECOMPILED!  (all your scripts compile, right? :-)
  Old .ECL files will not load!

Titles
    - if present, "[title_guild]" will display above name on singleclick
    - if present, " (title_race)" will display after name on paperdoll
    - title_prefix, title_suffix, title_guild and title_race can contain leading
         and trailing spaces, embedded quotes, and embedded newlines.

Interactive Debugger
    - Added beginning of debugger interface.
         pol.cfg: DebugPort=port, DebugPassword=string, DebugLocalOnly=0/1
         Only enabled if DebugPort if specified as non-zero.
    - Added local variable information to .dbg files
    - Added stepinto debug command
         (see srcdoc/poldbg.txt for debug command list)
    - Added debugger commands:
         pidlist [str]             return list of PIDs with scriptnames matching *str*
         inslist [file] [line]     list instructions associated with File#/Line#
         globalvars                list global variable names (if available, compile
                                    with -z)
         getlocalpacked [N]        get local variable #N, in packed format
         setlocalpacked [N] [p]    set local variable #N, to packed value
         getglobalpacked [N]       get global variable #N, in packed format
         setglobalpacked [N] [p]   set global variable #N, to packed value
    - Added debugger command 'call'
         call [scriptname] [parameters:packed array]
         parameters must be a packed array.
         return value is returned packed.
         So, if 'misc/called.src' ends with 'return 5;' then;
         "call misc/called.ecl a3:i1i2i3"
         will call misc/called.src, with three parameters: 1, 2, 3
         Output will be:
           Results: 1
           Return value packed: i5
    - Added debugger command 'quit' - graceful exit.

eScript
    - Added 'runecl.exe' to the core distro.
        - only has access to 'basic', 'basicio', and 'math' execution modules
    - Added math.em execution module
    - Added Integer modulus operator '%'
    - Added bitwise operators, for Integers only
       & (bitwise and)
       | (bitwise or)
       ^ (bitwise xor)
       ~ (one's complement)
    - Added 'sysfind_flags' parameter to SystemFindObjectBySerial
       - flag values can be found in uo.em:
       - SYSFIND_SEARCH_OFFLINE_MOBILES - search for offline mobiles and equipment
          on offline mobiles
       - SYSFIND_SEARCH_STORAGE_AREAS   - search for items in all storage areas
    - SystemFindObjectBySerial will always return an 'offline mobileref' if
       SYSFIND_SEARCH_OFFLINE_MOBILES is specified.
    - Added the 'struct' type.  These can be persisted, unlike a struct created
      from an array.  Structs should be used rather than arrays when you want a
      structure.
      preferred forms:
          var a,b,c,d;
          a := array;      // make an empty array
          a[1] := 2;
          a[2] := 7;

          b := struct;
          b.+name := "YouThere";
          print( b.name );

          c := dictionary;
          c["hello"] := "foo";
          c["world"] := "bar";

          d := { 2, 5 };   // make an initialized array
    - The 'error' datatype is now persistable (internally it's a 'struct')
    - Added pids (process ids) and a scripting object for process control
       - os::getpid() gets your own pid
       - os::getprocess(pid) gets a scripting object for a process given its PID
    - Added polcore().skill_checks_per_min
    - Added polcore().combat_operations_per_min
    - The instares dialog gump packet will no longer be sent automatically on PC death
       - chrdeath.src will have to handle this
    - Added uo::SendInstaResDialog( chr );
    - Added AwardRawSkillPoints( mobile, skillid, rawpoints )
       - rawpoints must be positive at this time
    - "pol.lg2" has been renamed to "debug.log" and is enabled in
        pol.cfg:EnableDebugLog=0/1
    - Added process.sendevent( object );
    - Added process.kill();
    - start_script will now return a process scripting object
    - Added npc.process, returns a process scripting object
    - Global variable name information is now included in .dbg files
       '-z' option removed - only '-x' generates .dbg files
       .dbg.txt files no longer generated
    - Added GetObjPropertyNames(object) - returns array of all cprop names
    - Configfile string properties can be contained within quotes, and can contain
       leading and trailing spaces, embedded quotes (\"), and embedded newlines (\n)
    - SendSysMessage, Broadcast, PrintTextAbove, and PrintTextAbove all take
       optional parameters 'font' and 'color'
    - Added item.buyprice
       If nonzero, overrides the 'vendor_buys_for' value from itemdesc.cfg
       If negative, vendors will not buy this item.
    - 'invisible' in itemdesc.cfg will be honored as the default.

Compiler
    - Search rules for .inc and .em files changed:
       - First, the directory of the including file is searched
       - Next, either ECOMPILE_PATH_EM or ECOMPILE_PATH_INC (which default to
          the directory containing ecompile.exe) are searched
       - relative dir info from the included filename is always used.
       - pass '-v10' to the compiler to see what's going on, if it can't find
         your files.
       - This means that:
           D:\POL> ecompile -r .
           D:\POL\PKG\MYPKG> ecompile foo.src
           D:\POL\SCRIPTS> ecompile ..\pkg\mypkg\foo.src
          should all be equivalent now.
       - If you intend to use the debugger, compiling from your pol\ directory
           is best, (or specifying a full path) so that pol.exe will have the
           correct paths to all involved files.
       - I recommend "ecompile -u -b -l -x -a -r d:\pol"
    - It seems those of you using Win2k and Linux will need to have
       ECOMPILE_PATH_EM and ECOMPILE_PATH_INC variables.

Reputation System
    - See srcdoc/repsys.htm for current criminal/murderer flagging rules
    - Added mobile.SetParalyzed( isparalyzed := 1 );
       - mobile.paralyzed := 1/0 is deprecated and will become read-only
       - mobile.SetPoisoned sets repsys data
    - Added mobile.SetPoisoned( ispoisoned := 1 )
       - mobile.poisoned := 1/0 is deprecated for this use (it will become read-only)
       - mobile.SetPoisoned can set repsys data (aggressor, criminal flagging)
        mobile.poisoned assignment cannot.
       - mobile.SetPoisoned will no longer set the Murderer flag
    - Added mobile.SetCriminal( level := 1 ), level >= 1
    - Added mobile.SetMurderer( ismurderer := 1 )
    - Added mobile.murderer read-only flag
    - mobile.criminal will always return true for murderers.
    - Healing, Unpoisoning, and Unparalyzing will clear the ToBeReportable list if
       all are clear
    - A mobile's Reportables list is now persisted
       Added mobile.reportables (see srcdoc/uoscrobj.htm for details)
       Added mobile.RemoveReportable( serial, gameclock )
    - ".i_repdata" updated to display murderer flag, ToBeReportable list, and
       Reportable list
    - repsys.cfg: added a General section, with Criminal and Aggressor timeouts.

Client Issues
    - Added Ignition support
    - Weather packets are now disabled for all non-1.26.* clients (including Ignition)
    - pol.cfg: DisplayUnknownPackets=0/1 added
    - pol.cfg: ClientEncryptionVersion can be set to 1.26.4 , 2.0.0 , or ignition

Errors Resolved
    - Fixed a crash bug in SystemFindObjectBySerial when the object wasn't found
    - Possibly fixed the "skill window update" client crash bug
    - hair and beards created on corpses will be marked invisible and non-movable
    - Ghosts will no longer be able to pick up or equip items.
    - Dye tub cursors will no longer be sent if a script cursor is active
    - Script constructs of the following form will no longer alter chr.name:
       var n := chr.name;
       n := "hey";
       - this applies to all other read/write members
    - ECOMPILE_PATH_EM and ECOMPILE_PATH_INC env variables will no longer be necessary
       - (See compiler section above)
    - Corrected some problems with target cursors
    - Corrupt .ECL files should be handled better now
    - fixed a crash bug if global variables were used before declared

Miscellaneous
    - movecost.cfg can have separate 'Walking' and 'Running' sections, and can
       range from 0-200% of carrying capacity.
    - Packages with a higher version than another enabled package by the same name
       will automatically override the lower versioned package.
    - Misspelled dot-commands will no longer display, so no more embarrassment
       in mixed company when I leave an 'o' out of '.objcount'


05/23/2000 - POLC089
==========
    Script functions can be passed parameters by reference.
      put 'byref' in the function declaration before the parameter name.
      function foo( pa, byref pb, pc )
          pa := 5;
          pb := 6;
          pc := 7;
      endfunction
      var a := 12;
      var b := 13;
      var c := 14;
      foo(a,b,c);
      // at this point a and c are unchanged, b is 6
      Note - it's much more efficient to pass arrays by reference than
        by value, because pass-by-reference doesn't have to copy them
        (or destroy them when it's done)  
    Mobilerefs and Itemrefs can be compared for equality directly
      - so you can write "if (me = you)" instead of "if (me.serial = you.serial)"
      - as a result, mobilerefs and itemrefs can be used as keys in dictionaries. 
    Linux version - gump problems, text command, MT mode problems fixed 
    Added mobile.title_prefix, mobile.title_suffix, mobile.title_guild, mobile.title_race
      - mobile.title_prefix is displayed before the name on the paperdoll
      - mobile.title_suffix is displayed after the name on the paperdoll
      - mobile.title_guild and mobile.title_race are not used (but are persisted)  
    Added mobile.GuildId : just a numeric guild identifier
      (not sure if this is how it'll be done, but this lets me start on highlighting etc)
    config/repsys.cfg will be required by the core
    MoveMode can be specified in npcdesc.cfg.  
      - This is per-NPC -- changing npcdesc.cfg will not affect existing NPCs
      - MoveMode is a string, containing one or more of the following:
        - "L" - Moves on Land (this is the default)
        - "S" - Moves on the Sea
        - "A" - Moves in the Air 
      - Mobiles require MoveMode 'L' to move on land.
      - Mobiles require MoveMode 'S' to move on the sea.
      - MoveMode A doesn't have any effect yet.
      - There is no script interface to this yet.
      - an example - "MoveMode LS" would be appropriate on a Water Elemental.
      - PCs are all MoveMode L, unless you edit pcs.txt...
    Added combat.cfg:WarmodeInhibitsRegen (default false)
    Linux version: corrected an error in CreateAccount that would empty the account file (!)
    Corrected bug where Paperdoll would display warmode when you weren't
    'IP' entries in servers.cfg can be hostnames.  A DNS lookup will be performed each time
      a client connects to the loginserver.
    CInt(), CDbl(), and Hex() will all operate on Substrings
    Mobiles without MoveMode L might not be able to move on land.
    Added account.GetProp(propname)
    Added account.SetProp(propname,propval)
    Added 'DefaultPrivs' and 'DefaultCmdLevel' properties to entries in data/accounts.txt
      - there is no script interface.
      - these are assigned to new characters for the account.
    object method name searches are now case-insensitive
        - so now you can write array.size() or array.Size()
        - this is really so you can write account.GetProp etc
    object method names can be the same as system or user functions
    account.SetName should work now (account.SetAcctName has been renamed to this)
    Added some more log output when message handlers crash
    Added FindAccount( acctname )
    Added ListAccounts()
    Added account.GetCharacter( index : 1..5 ) -- for offline access to PCs
    Fixed the "server full" bug when --ip-- and --lan-- were used in servers.cfg
    ECOMPILE_PATH_EM and ECOMPILE_PATH_INC environment variables are now unnecessary
      if they would have referred to the directory where the 'ecompile' executable is.
    ecompile now creates '.dep' files so that changed .inc files will be searched for
      on '-u' (update) runs. ('ecompile -u -r .')
      If no .dep file exists for a .src file, no dependencies are assumed - so in order
      for this to work properly, run 'ecompile -b -r .' to recompile everything once.
    Added http::QueryIP(), returns IP address of connecting browser.
    PrintTextAbove and PrintTextAbovePrivate will use the correct description,
      rather than always using the text from tiledata.mul
    Added account.DeleteCharacter( index : 1..5 )
    Added account.EraseProp( propname : string )
    cfgfile::GetConfigStringKeys and cfgfile::GetConfigIntKeys should work now.
    Added CChr, CAsc, CChrZ, CAscZ
    ecompile will optimize IF statements with constant test expressions
    substring access with out-of-bound indices will return an error rather than aborting the script
    start_script will return an error rather than aborting the calling script.
    Fixed a problem involving dictionaries, persistence, and substrings.


04/08/2000 - POLC088
==========
    Fixed a crash bug when an item was destroyed while equipped on an offline mobile
    Fixed a crash bug when an error occurred reading properties for a new NPC
    Added mobile.hp_regen_rate, mobile.mana_regen_rate, and mobile.stamina_regen_rate.
      - a value of '100' adds one point every five seconds.
      - a value of '50' adds one half point every five seconds.
      - ...you see the pattern...
      - applied fixes for negative regen rates, and regen rates for new characters.
    Added the BASIC-style FOR-loop to escript.
      for i := 1 to 5
         print(i);
      endfor
      is the syntax.
    Added the 'dictionary' complex datatype for scripts.
        usage:
           var dict := dictionary;
           dict[ "green" ] := "blue";
           dict[ "red" ] := "orange";
           dict[ 12 ] := "yellow";
           print( dict[ "green" ] );
           print( dict[ "red" ] );
        methods:
           dictionary.size()        : number of elements
           dictionary.erase( key )  : erase an element
           dictionary.insert( key, value ) : insert an element
             (equivalent of dictionary[key] := value;)
           dictionary.exists( key ) : check for existence of a key
           dictionary.keys()        : return an array of all keys

        dictionaries can be persisted.
        keys can be integers, reals or strings.
        values can be anything.
    Added cfgfile::GetConfigStringKeys(config_file)
    Added cfgfile::GetConfigIntKeys(config_file)
    Packages can contain a 'www' directory.
      (use URLs like "http://127.0.0.1:8080/pkg/saver/")
    www directories and subdirectories will be searched for index.ecl, then
      index htm, if no page is specified.
    Added item.invisible; only applies to items in the ground, and the same
      deal with moving "out of range" after enabling the 'seeinvisitems' priv applies.
    run_script_to_completion will return the 'return value' of the script it runs
      (the return value is what the 'program' section returns)
      it will return an error if the script does not exist.
    Fixed bugs in gump handling
    Fixed bug in GetWorldHeight (kept dungeon teleporters from working)

03/05/2000 - POLC087
==========
    Removed annoying hit-script debug output
    Added logon scripts, logoff scripts, reconnect scripts.
    Added delayed logout (see docs/logonoff.txt)
     - at a minimum, you will need scripts/misc/logofftest.* for this
    Line-of-sight will succeed to items in your backpack.
    Added the 'losany' privilege for letting you ignore LOS.
    Multis will be checked in Line-of-Sight tests
    PCs can now walk through items they can move.  Hopefully this means if
      you're a GM and the client wants to let you walk through something,
      the server will let you.
    Added character.enabled( setting ) to allow scripts to check enabled settings
    Added the 'ignoredoors' privilege to let you walk through doors if your
      client files will allow it (requires a modified VERDATA.MUL)
    config/cmds.cfg added - specifies cmdlevel names and textcmd directories.
    character.setcmdlevel( cmdlevelname ) added - set cmdlevel by name
    character.cmdlevelstr added - text name of the cmdlevel
    textcmds can be specified in packages; just make a textcmd/gm etc directory
     - these are only scanned at startup, so if the directory doesn't exist then,
       it won't be searched until restart.
    character.poisoned added - just makes your health bar green or not.
     - this is not saved with world state.
    Added a console keypress interface - see config/console.cfg
    Fixed house-walking bug on restart
    Added os::unload_scripts(scriptname)  -- see os.em
    Added os::set_script_option(optnum,optval)  -- see os.em
    Added uo::Shutdown()
    Added character.ip (returns an empty string if no client connected)
    Added a facility for banning logins by IP.  You'll need config/bannedips.cfg
    MoveItemToLocation and MoveItemToContainer will check the 'moveany' setting of
      the script controller.
    EquipItem will check item movability
    Server should no longer crash if you hit Ctrl-C while packages are loading
    Added character.gold member
    Added character.spendgold( amount ) method - spends nothing and returns error if
      character doesn't have enough.  Does not recurse into locked containers.
    Added uo::ConsumeSubstance( container, objtype, amount ) - consumes nothing and
      returns error if container doesn't have enough. Does not recurse into locked containers.
    MoveItemToContainer will no longer allow a container to be moved into itself,
      or into a subcontainer in itself.
    Automatic skill advancement when skill is below 10 will only occur
      if you had some chance of success
    Fixed some movement errors; it should be possible to walk into caves now.
     - dropping things on the ground in caves probably doesn't work yet.
    character.gender is now read/write
    Items being dragged will be moved back into the backpack when a character dies
     (so they'll be moved to the corpse or kept based on newbie status etc)

02/01/2000 - POLC086
==========
    Inactivity timeout will not occur to those with cmdlevel > 0
    Inactivity timeout will not occur until a character is chosen or created
    "InactivityWarningTimeout" and "InactivityDisconnectTimeout" in pol.cfg configure
      the inactivity timeout in minutes.  Set either to 0 to disable.
    pol.cfg will be checked for changes every 30 seconds.  Settings that can be changed
      without restarting will be re-read.
    Added map checking to correct LOS issues in dungeons.  (pol.cfg:ExpLosChecksMap=1/0)
      - currently inhibits LOS across bodies of water, which may be bad.
    Packet formats changed to match latest client
      (skill locking stuff is ignored)
    uo::SendSkillWindow( towhom, forwhom ) added.  A script could send you skills for
      someone else, if it wanted; you'd get spurious "skill value changed" notifications,
      but that's your choice.
    scripts/misc/skillwin.ecl will be run on "Skill Window" (Alt-K) requests if present.
    MoveItemToLocation takes a 5th parameter, 'flags'
       - instead of adding MOVEITEM_FORCELOCATION to the z parameter, pass it here
       - pass MOVEITEM_NORMAL or 0 for normal z-corrected movement
       - for now, I'm making the 'flags' parameter mandatory, as all existing scripts
         need to be changed.  Later I'll make flags default to 0.  
    Added EVID_DOUBLECLICKED event, sent when an NPC is doubleclicked
      This event must be explicitly enabled with EnableEvents().
    scripts/misc/skilladv.ecl will be run when a visible skill change happens
      - parameters are (who, skillid)
      - this is called for PCs and NPCs.
    default 'facing' prop added to itemdesc.cfg
    EquipTest scripts added - scripts/misc/equiptest and all package equiptest scripts
      will be called to determine if an item can be equipped.
    The 'mount' layer (25) can now be equipped.
      - lots of issues are left yet - combat effects, what happens when you die, and so on.
    pol.cfg:MinCmdlevelToLogin can specify the minimum cmdlevel allowed to log in.
        (So you can set your server to GM-only access temporarily or whatever)
    Objtype 0xF021 is now the 'mount' object type.  
        Add the following entry to itemdesc.cfg:
            Item 0xF021
            {
                name    mount
                graphic 0x3EA2
            }
        Graphic 0x3EA2 is a horse.  0x3E9F to 0x3EA6 will use other mount types.
    Added uo::OpenPaperdoll( towhom, forwhom ).  Sends the paperdoll window.
    scripts/misc/dblclickself.ecl will be executed when you doubleclick yourself,
      if it exists.  The core will still handle "Open Paperdoll" macro requests
      internally.  The basic doubleclick-self script would look like this:
            use uo;

            program dblclickself( me )
                OpenPaperdoll( me, me );
            endprogram
    Weapons can specify MountedAnim in itemdesc.cfg.  
    config/animxlate.cfg specifies animation translations for actions while on 
      a mount.  Most weapons shouldn't need MountedAnim entries if this is 
      populated correctly. (thanks to Myrathi for filling in animxlate.cfg)
    Removed messages when skillwin.ecl and skilladv.ecl don't exist
    Fixed a crash bug if you tried to spend gold with no backpack.
    The game clock will be paused during world save.  This should eliminate CPU
      usage spikes afterwards.
    Script compiler takes two new parameters:
        -b : keep building other scripts after errors are encountered
        -u : only compile updated scripts (.src newer than .ecl)
    Script compiler will warn for locals with same name as globals
      (only if -w 'enable warnings' option is passed)
    Crypto Keys updated for client 1.26.4


10/28/1999 - POLC085
==========
    Fixed a bug where dragging part of a stack from the ground would
      misplace the remainder.
    Items that are 'SaveOnExit 0' and in a container will no longer be saved.

10/25/1999 - POLC084
==========
    script compiler: '\' will function as an escape character in strings
      - \n and \t are defined as special characters
    script compiler: *.hsr files are ASP-like source pages
     (see files in the experimental files section for examples)
    added http::WriteHtmlRaw(str) for .hsr/.asp pages
    script scheduler uses a priority divider now; will be testing to see
      if this can help with lag in some instances
    polcore().set_priority_divide( newvalue ) added
    polcore().priority_divide (read-only)
    script compiler will generate a wordlist file if '-W' option is passed.
    added mobile.criminal property
    when loading, 1 dot will print per 1000 objects loaded.
    Fixed a bug in array.insert(index,value) where it was impossible
      to insert at the end of an array, or into an empty array.
    Added array.append(value), array.reverse(), and array.sort() methods
    Inactivity timer added: warning after 4 minutes, disconnect after 5 mins
    MaxCallDepth for scripts can be specified in pol.cfg (default 100)
!!  Decreased system load time.  Please BACK UP your datafiles!
    IgnoreLoadErrors=1 in pol.cfg will ignore (most) load errors and start server
    Script listfiles generated with -l with always contain source and 
      file/line information, even if -i is not specified
      (it's best not to use -i, in fact -- less overhead)
    Added polcore().script_profiles property:
      returns array of { name, instr, invocations, instr_per_invoc, instr_percent }
      - same data as output by .log_profile
    Added polcore().clear_script_profile_counters() method.
    array.insert() functions properly again
    Overhauled the client item manipulation system (getting,dropping,equipping items):
      - LOS is now checked when picking up an item
      - LOS is checked when dropping an item
      - range must be <= 2 to pick up an item
      - drop-item range increased to 2
      - picked up items are marked 'inuse'
        Note this causes some easy resource-use exploits until scripts mark
        items in-use.  But that's better than crashing.
    Added uo::ReserveItem(item) and uo::ReleaseItem(item)
      - these mark an item as inuse for this script only to use.
      - all reserved items will be released on script exit if ReleaseItem is not called.
    'inuse' items have special rules:
      - they cannot be picked up (not even part of a stack)
      - they cannot be added to, if they're a stack.
      - they cannot be used as reagents
      - they cannot be used as projectiles
      - they cannot be spent at a vendor
      - they cannot be sold to a vendor
      - they will not decay
      - if a stack, they cannot be added to if a like item is bought at a vendor
      - The following functions will not operate on inuse items, unless the calling
        script reserved the item for its use with ReserveItem
          - DestroyItem
          - SubtractAmount
          - MoveItem
          - MoveItemToContainer
          - EquipItem
        This means most scripts that have to check for materials twice (typically
        before and after doing sound effects and delays) can just reserve the items
        before checking for materials.

      I'm considering whether inuse items should be doubleclickable, and
        whether or not the doubleclick script should start out with the
        item already reserved.
     MoveCharacterToLocation and login will generate EVID_ENTEREDAREA events
     Ghosts will no longer use nor require stamina for movement
    

10/07/1999 - POLC083
==========
    Lots of items down there.  The highlights:
        - secure trading (but see important note about enabling)
        - stamina costs for movement     

    Startup output -- error messages, etc will be logged to 'start.log'.
    Disabled the following internal text commands, because a replacement
      script exists, or they're rarely used and a script could be written.
      (They still exist; renamed to i_[cmd] in case you really need them)
        .ident
        .setusescript
    Added polcore() members:
        log_profile( clear )
    text command script names can now contain underscores
    New config file - config/servspecopt.cfg, for Server Specific Options
       - DefaultDoubleclickRange, which is used if DoubleclickRange isn't
         specified for an objtype in itemdesc.cfg
       The default doubleclick range (if not specified there) is now 2
    GMs should still see ghosts after they drop out of warmode
    added mobile.enable( privilege ), mobile.disable( privilege )
       - for enabling/disabling privileges
    Added functions to the NPC module:
        WalkTowardLocation( x, y );
        WalkAwayFromLocation( x, y );
        RunTowardLocation( x, y );
        RunAwayFromLocation( x, y );
        TurnTowardLocation( x, y );
        TurnAwayFromLocation( x, y );
    polcore().itemcount will now decrease
    Added 'ipmatch' property to servers.cfg, so localhost and LAN servers
      can be made to only show up if you connect from localhost or the lan.
    Added the 'all' privilege which effectively gives you..all the privileges!
    Added the 'dblclickany' privilege which lets you doubleclick any
      doubleclickable object regardless of range
    itemdesc.cfg has a 'Weight' entry which can specify whole weights
      or fractional weights ("1/50" etc) in stones
    Item weights will be tracked.  No limits or stamina effects yet.
    added 'object.weight' member
    Fixed an integrity problem if doors were on a zone boundary
    Fixed a crash bug if a house component was destroyed before the house was.
    Items will not decay on multis unless "DecayOnMultis 1" is set in itemdesc.cfg
!       (Note this should be set for corpses in particular)
    Gave boats some TLC: (some scripts+config files need updated to use this)
       - corpses created on a boat will move with it.
       - items dropped on the boat when a corpse decays will move with it
       - the remainder of a stack half-removed from a deck will move with the boat
       - NPCs created directly on boats will move with it
       - added the rest of the boat definitions to config/boats.cfg
       - walkon scripts will fire if the item's Z is 0 or 1-z below the walker
          (specifically so that boat planks can have walkon scripts)
       - massaged the data from client files so long boats don't have a hole in 
          the middle.
       - fixed the "Deck is not empty" bug on boat destruction
       - characters who log off on a boat will be moved when the boat moves
       - added member 'boat.has_offline_mobiles'
       - added method 'boat.move_offline_mobiles(x,y,z)' for moving the offline
         mobiles carried by a ship somewhere.  This function is very trusting
         regarding the coordinates you pass it. As long as they're within the 
         world bounds, it'll move the mobiles there.
    "walkon" scripts have more parameters.  the full declaration:
       program walkon( who, what, lastx, lasty, lastz )
       the 'last' coordinates are the coordinates the walker is coming from.
    MoveCharacterToLocation takes a 5th parameter, 'flags'
       if MOVEMOB_FLAG_FORCELOCATION included, force z-location
         (ignore any obstacles)
    Added polcore().packages() - array of installed package names
    Added polcore().compiledate - text string
    Added polcore().compiletime - text string
    Incorporated Beosil's latest crypto code to deal with the 21036-bytes bug
    Fixed a bug with gump-dialog handling for dialogs with many textentry fields
    Package start scripts will run under the Linux build
    Added basics of secure trading:
        Enabled if EnableSecureTrading=1 is set in pol.cfg.
        Items can be added to the secure trade window
        Items cannot be removed except through cancelling the trade
        Items in the secure trade window can be singleclicked
        Unlocked containers in your side of the trade window can be
          doubleclicked, and will open for both trading parties
        stacks currently cannot be added to.
        If either party disconnects, trade will be cancelled.
        Traded items which will not fit in your backpack will fall to your feet.
        All secure trades will be cancelled before saving data or shutting down.
!       This entry must be added to config/itemdesc.cfg:
            Container 0xFF01
            {
                Name    SecureTradeContainer
                graphic 0x1E5E
                Gump    0x003C
                MinX    0
                MaxX    66
                MinY    0
                MaxY    33
            }
    Added servspecopt.cfg property: MovementUsesStamina=0/1
        If this is set, you will need config/movecost.cfg
        Note movement cost code is still being developed.
    ecompile: option -l  (ell) will cause a listfile to be generated, which
      contains the internal instructions in the compiled file.  In conjunction
      with '-i' (include debug info) you may have a fighting chance at seeing
      where your script corresponds to the instructions.  May be useful
      for debugging or profiling, or for just being nosy.
    Added runaway script detection.  RunawayScriptThreshold in pol.cfg specifies
      how many instructions a script can execute without sleeping before being
      reported as a runaway.  The default is 5000 instructions.  Reports will
      be logged to log/script.log
    spellbook weight will no longer include weight of contained scrolls
    corrected an error in container-weight handling
    added polcore().running_scripts
    returns an array of structures { name, instr_cycles, consec_cycles, PC, call_depth, num_globals },
      one element per running script.  See scripts/www/running_scripts.src
    pol.cfg can specify WebServerPassword=username:password, to restrict access
      If this is used, nothing can be accessed without the password.  
      A more flexible password scheme is in design.
    

09/09/1999 - POLC082
==========
    Added 'hearghosts' privilege
    Support added for UO client 1.26.1
      - key constants are specified in a key file, so maybe next time
        this won't require a rebuild.
      - pol.cfg must have "Keyfile=crypto/v1_26_1.key"

        

09/05/1999 - POLC081
==========
    Added cfgfile::LoadTusScpFile(basename) - loads TUS .SCP format files
      so they can be accessed like a POL .cfg file
      (not an importer - an importer will be built upon this)
    New characters will start with clothing that matches what the new
      client displays.
    mobile.concealed can be set to anywhere between 0 and mobile.cmdlevel
    mobile.concealed is now saved with game state
    added array.erase( index ) - erases an element in an array
    added array.size() - returns number of elements in an array
    added array.shrink( nelems ) - erases all but the first 'nelems' elements
    added array.insert( index, value ) - inserts an new element 
    NPC masters will be saved with game state
    packages can contain npcdesc.cfg and ai scripts.. ".createnpc :pkg:npctype"
    Encryption keys changed to support client 1.26b (Thanks Beosil!)
    Added some code to get more information on a particular crash bug
    Fixed an AV condition when equipping an NPC that isn't strong enough  
    ".integ_item" will write problem information to the logfile
    a stack backtrace will be logged on assertion failure
    Corrected an error in house destruction which could cause corruption
    added os::events_waiting() - returns number of events in script's event queue
    added direct stat modification:
        mobile.setstr( newstrength )
        mobile.setdex( newdexterity )
        mobile.setint( newintelligence )

08/28/1999 - POLC080
==========
    POL now supports the new UO Client (v 1.26)
        startloc.cfg must be changed to list cities in a particular order.
        (Yew, Minoc, Britain, Moonglow, Trinsic, Magincia, Jhelom, Skara Brae, Vesper)
    Armor now has quality, hp, and maxhp.  This means Armor entries in
      itemdesc.cfg must have a MaxHP entry!
    
    Added polcore().version (79,80,81 etc)
    Added polcore().verstr ("POL080", "POL080X1" etc)
    POL version string will be written to log file on startup
    Added CreateAccount( acctname, password, enabled )
      - returns an accountref (see docs/objref/account.htm)
    character.acct added
    Account object created; gives the ability to ban,unban, disable, enable,
      change the account name, and change the account password, from scripts.
    Large shards will want to set UseNewStaticsFile=1 in pol.cfg.  This will
      create files 'statics0.pol' and 'staidx0.pol', which are smaller versions
      of statics0.mul and staidx0.mul.  These files are then loaded wholly into
      memory for very fast access for walking height and LOS checks.
      If this option is enabled, POL uses an additional 11 MB memory
    NPC movement anchors can be set; call npc::SetAnchor() (see npc.em)
      Movement anchors are only in effect when NPC isn't in warmode
    ".unload" will now unload all scripts whos name contains the parameter
      ".unload ai" will unload all scripts whos name contains 'ai', for example.
    Fixed an access violation if a mobile died with a full backpack and
      worn items.  (bug introduced in the 'newbie items' update)
    Added weather effects, using static regions (regions/weather.cfg)
    Armor will now take damage during combat
    stackable weapons/armor in vendor inventories
     (merchant.src must be changed to call CreateItemInInventory)
    New priv/settings: seehidden, seeghosts 
    added character.setlightlevel( lightlevel, duration ) (mylight.src tests)
      - sets personal light level for a period of time (duration in seconds)
    DestroyMulti can destroy boats now (but use BoatFromItem..see destroyboat.src)
    Fixed an object leak on house destruction
    Paperdolls will only be opened for humans, ghosts, GMs, Lord British, 
      Lord Blackthorne, and Dupre
    chrdeath.src has a second parameter, the character's ghost
    Added chr.squelch(duration) - duration in seconds.  -1=forever, 0=off
    added chr.squelched
    "[invulnerable]", "[frozen]", and "[squelched]" tags will display
      over affected mobiles when singleclicked.
    Added SetRegionWeatherLevel(regionname,type,severity,aux,lightoverride)
      - test/setweather.src tests   

08/16/1999 - POLC079
==========
    items on others' paperdolls within visual ranged can be singleclicked
    If an equipped item can't be equipped on load, it'll be stuffed into the backpack
      If the backpack is full, the server will refuse to start.
    More error messages will print hex serial numbers now
    It will be impossible to assign a blank name to a mobile, or a name
      that begins with whitespace (this traps all-whitespace names)
    All the houses should be creatable now.
    Made a change that seems to help lag when lots of mobiles are on-screen at once
    http::WriteHtml calls are now handled more efficiently
    corrected anims for nonhumans using projectile weapons
    'StrRequired' (Strength Requirement to Equip Item) can be specified in itemdesc.cfg
    item.newbie added; 'newbie' items will stay with the ghost.
    'Newbie' can be specified in itemdesc.cfg.  This is the default 'newbie' flag
      for items of this type.  Typically set for spellbooks.
      - newbie items stay with the ghost
      - newbie stacks split turn into two newbie stacks
      - a non-newbie item added to a newbie stack contaminates the newbie stack,
        making it non-newbie
      - the various CreateInContainer functions will not add to an existing newbie stack
      - vendors won't buy newbie items
    'BlocksCastingIfInHand' can be specified in itemdesc.cfg.  Both hands will be checked
    for items after reagents are consumed but before mana is consumed
    RequireSpellbooks can be specified in pol.cfg; default is 1
      - Spellbooks, with scrolls, are required in order to cast spells if this is set.

08/10/1999 - POLC078
==========
    added character.acctname 
    added weapon.dmg_mod (-32768 to +32767, but be gentle :)
    added armor.ar_mod
      Note if you change ar_mod on equipped armor, it won't reflect in your displayed
      AR until you take the armor off and put it back on, but the change will
      increase or decrease your protection immediately.
    added armor.ar  (adjusted by ar_mod)
    added armor.ar_base (unadjusted)
    added nocast regions (will work for spells and scrolls, if they use StartSpellEffect)
    SaveWorldState() will return an error if an exception occurs during world save
      (instead of aborting the calling script)
    added weapon.maxhp_mod
    Scaled back optimizations so that crash dumps can give more information
    Included more debug checks in the release version, to search for odd problems
    corrected an out-of-bounds condition for mobiles near the edges of the world
    Fixed a bug where boats could go off one side of the world a couple of tiles.
    It is now impossible to use a skill or item during a casting delay
    Houses can sit on slightly uneven ground; the z-coord can differ by up to 2
    added item.sellprice; used instead of 'VendorSellsFor' if nonzero.
      sellprice on a stack is the price for one unit
    TwoHanded (0/1) can be set in itemdesc.cfg for weapons
    Started on z-coord problems, but the map seems to sit above some statics *sigh*
    Target() will accept TGTOPT_HARMFUL, TGTOPT_NEUTRAL, and TGT_HELPFUL in its
     'options' parameter.  Harmful actions mark you criminal or aggressor according
     to normal flagging rules.  Helpful actions on a criminal will mark you a criminal.
     The criminal query window will pop up when appropriate if enabled on the client.
    NPCs will get "enteredarea" and "leftarea" events when they move
    alignment (good, neutral, evil) can be specified in npcdesc.cfg
    actions for/against yourself or your pets will not affect criminal flags, etc
    harmful actions against good-alignment NPCs will mark you criminal
    helpful actions against evil-alignment NPCs will mark you criminal
    internal command target cursors shouldn't interfere with script target cursors
    Scripts have a 'controller' attached.  This is set to the spellcaster, or the
      character doubleclicking the item, etc.  ApplyDamage and ApplyRawDamage now
      send an EVID_DAMAGED event using the controller as ev.source
    Added uo::SetScriptController(who) - should be used to set controllers for
      traps and such
    EVID_ENGAGED events will be sent to NPCs targetted with hostile actions
    justice zone "entering" and "leaving" messages won't print if switching between
      zones where the messages are the same
    If 'enabled.pkg' exists in a package directory, the package will be enabled
      regardless of Enabled=1/0 in pkg.cfg.  If 'disabled.pkg' exists, both these
      will be ignored, and the package will be disabled.
    It's now possible to set a mobile's colors above 0xfff
    added mobile.cmdlevel; read-write, set to 0-5 (0-player, 5=test)

07/27/1999 - POLC077
==========
    weapon skills, tactics, and parry will cause stat gain from combat
      - note this is from ANY combat - GMs on rabbits, whatever.
    transmission buffer size increased to handle huge gump dialogs
    save time improved; tests show over 2x faster on Win98, almost 2x faster on WinNT
    Fixed the "you are already holding an item" bug on disconnect while dragging an item
    Unicode speech is now handled (ASCII character set only)
    Tooltip text can be specified in itemdesc.cfg
    'Name' can be specified as 'ObjtypeName' in itemdesc.cfg.  'ObjtypeName' is 
      preferred. 'Name' is deprecated, and will not be supported after core 079
    Entries in pol.log will be timestamped
    Added logging for login/logout (with IP), and incorrect password presentation.
    new polcore() variables:
        uptime:  system uptime in seconds
        sysload: system load, 0-100
    Limited the crash stack backtrace to 100 frames
    LogSysload=1 in pol.cfg will cause sysload to be logged each minute
    Corrected an error which could cause CPU usage to rise to 100% until shutdown
    Removed dump of message type 0x69
    New internal text command: "log_profile"  logs script profile data
    New internal text command: "log_profile_clear"  logs script profile data, clears counters
    new polcore() variables: bytes_sent, bytes_received
    SendEvent now functions as advertised
    new members for multis: multi.items and multi.mobiles
      - arrays of supported items/mobiles
    Names of scripts that cause access violations will now be logged.
    Fixed an AV condition on skills with no script defined
    Target() takes an 'options' parameter.  This should be either TGTOPT_CHECK_LOS or
      TGTOPT_NOCHECK_LOS.  The default is TGTOPT_CHECK_LOS.  Some scripts currently 
      call Target( someone, "" ) -- this should be changed to Target( someone ) ASAP.
      For now, this is treated the same as TGTOPT_CHECK_LOS.
    Corrected another cause of client i/o thread infinite loops. 
    Autodefense will target an attackable opponent or hostile, rather than
      exclusively trying to hit your opponent. 
    Added the beginnings of aggressor and criminal flagging.
      Supported:
        - criminal flagging (2 minutes) for attacking an innocent
        - aggressor flagging (2 minutes) for attacking first
        - extension of these timeouts for continued behavior
        - pets ordered to attack will affect their owner's flags
        - attacking a pet is like attacking the owner, as far as flagging is concerned
        - name coloring
      Not supported:
        - any repercussions whatsoever for being a criminal
            (except that others can attack you without becoming criminal)
        - any repercussions whatsoever for being an aggressor
            (except that those you are an aggressor to can attack you freely)
    Corrected an error in the task scheduler, discovered while coding aggressor flagging.
      This may also affect autodefense.
    Ships will no longer be able to sail off the map

07/06/1999 - POL076
==========
    data/accounts.txt will be re-read after it has been modified (must remain
        unchanged for 10-40 seconds).  
    basic::pack( expr ) and basic::unpack( string ) added.
    Config/Data file parser modified to handle arbitrarily long properties
      (mostly for very large stored arrays)
    Trailing spaces in config/data files will be trimmed.
    arrays will display their contents when printed, instead of "<objarray>"
    Weapons will have a 1% chance (was 25%) per swing of losing 1 HP
    Temporary kludge for combat skill gain:
        On each swing:
            attacker gets 30 raw skill points in his weapon skill
            attacker gets 15 raw skill points in tactics
            defender gets 15 raw skill points in tactics
            defender gets 30 points in parry, if a shield is equipped
    GetObjProperty/SetObjProperty etc can store arrays of integers, strings, reals, and arrays
    arrays can be tested for equality.
    Fixed two memory leaks in the script compiler
    Skill points will always be awarded for skills with <= 10.0 value
    items which are 'SaveOnExit 0' will use a different serial number pool,
      from 0x4F000000 to 0x4FFFFFFF
    bugfix: fixed some problems with LOS checks on doubleclick (and others)
            if you stood in the same place as, say, an iron ingot, you couldn't
            open a container in your backpack; this has been fixed.
    ecompile can take '-r directory' as a parameter, will compile .src files in
        directory and all subdirectories
    bugfix: 'npctemplate' custom prop on corpses will now work.
    Adding support for packages: see also polcore/docs/packages.txt for detail.:
        - 'item.usescript' can specify ':pkgname:script' format scriptnames
        - PKG.CFG can specify 'version', 'requires pkgname version', and 'conflicts pkgname'
        - AppendConfigFileElem and UnloadConfigFile will accept ":pkgname:cfgfile" syntax
        - Anywhere you can specify 'script' that would specify a script in a package,
          you can now specify ':pkgname:script' to reference a script in another package
        - Spells can be put in packages (put a spells.cfg in package directory)
        - Packages can contain 'skills.cfg'
        - ReadConfigFile( "::itemdesc" ) will access data in main itemdesc.cfg as well
          as all package itemdesc.cfg files.  Same for "::skills.cfg" and "::spells.cfg"
        - ReadConfigFile handles new formats to specify a config file in another package

05/31/1999 - POL075
==========
    DoubleclickRange can be specified in itemdesc.cfg
      (archery buttes will be broken until their configuration uses this)
    Linux build: Ctrl-C and 'kill [pid]' are caught for save/shutdown
    Added uo::polcore() - returns an object that can be used to query system data
       - itemcount
       - mobilecount
    regions/regions.cfg defines justice regions - only enter/leave messages are printed.
    regions/regions.cfg defines music regions
    ListMobilesInLineOfSight will not return mobile passed as the center
    Linux build: fixed bug which was causing 100% cpu usage always
    Startup output for start.src will be shorter
    Line of sight to items changed: will be from head of mobile to center of item
    Doubleclick limits added: must be range <= 1, and have LOS.
    ~IN[spellnum] can be used to cast spells
    Spells above the standard 64 can be defined (use ~IN to invoke)
    NPCs have a 'setmaster(master)' method, which right now only allows renaming
    Events sent to an NPC will be discarded if more than 30 events are currently queued
    web server can now serve .gif, .jpg, and .jpeg files
    scripts: "var" can be used instead of "global" and "local"
    scripts: object methods are here - doors will have them first.
    scripts: "array(2, 54)" syntax is deprecated in favor of "{ 2, 54 }"
    scripts: C-style " /*   */ " comments will function again
    scripts: old, non-"fully bracketed" syntax will no longer compile.
    Custom properties prefixed with '#' will not be saved with game state.
    SendDialogGump now returns an 'integer hash' with the results.
        var x := SendDialogGump(...);
        x[0] is the exit-button pressed
        x[button id] returns 1 if that button was pressed/selected
        x[text entry id] returns the string contents of a textentry field
        x.keys returns an array of all the keys
        See scripts/textcmd/test/exgump.*
    Added GetWorldHeight(x,y) - returns lowest point above map and lowest statics
        (It's supposed to, anyway.  It actually returns the point atop the
         highest static, but it works for most dungeon teleporters, so I'm leaving
         it broken for a while.)
    internal changes to resource region stuff; more testing before X3
    mid() is now unavailable (has always been broken)
    ghosts will speak ghostspeech (no hooks for spirit speak yet)   
    doors are scriptable; door.src autocloses, and plays sound effects.
      - door objects have an 'isopen' property
      - door objects have 'open()', 'close()', and 'toggle()' methods
      - 'isopen': reports if the door is open or closed
      - 'open()': opens the door  ("door.open();" in script would open it)
      - same for  'close()' and 'toggle()' - they change the state of the door.
      Not sure how well this interface will work, or how intuitive it'll be.
    bugfix: SetObjProperty etc now work with Multis
    SystemFindObjectBySerial will find multis

05/18/1999 - POL074
==========
    Spawner rewritten; basic spawn limiting is in place.
    EVID_ITEM_GIVEN event added for items dragged onto NPCs
    Wrestling will no longer do 0 damage after being used a few times
    item colors set by scripts will be limited to 0-0xFFF
    The following types of scripts run at priority 100, instead of critical:
      - spells
      - item use
      - walk on
      - skill use
      - text commands
    The following types of scripts still run critical:
      - character creation
    DestroyMulti will destroy houses, moving their contents to the ground.
    NPCs will have a ".npctemplate" member
    "CacheInteractiveScripts" in pol.cfg forces disk reloads on use for some scripts:
      - text commands
      - item use
      - walk on
      - character creation
      - www pages
      - spells
      - skill use
    Added uo::StartSpellEffect(who,spellid): start the spell script
    Added uo::GetSpellDifficulty(spellid)
    Added uo::SpeakPowerWords(who,spellid)
    Corrected an error where config file/elem variables couldn't be passed to functions
    spawns.cfg can take 'rect' entries
    combat.cfg has a param for displaying a message on successful parry.
    Multithread mode is stable.
    CDbl(val) added - convert to double
    ".setskill" now takes base-values instead of raw-values, so 
      ".setskill 25 60" will set Magery to 60.  It'll actually set it to
      59.9, because of a base->raw conversion bug, so don't panic.
    Fixed a resource leak if you set 'decayat' on an object...don't ask.
    More stuff for houses:
      - Empty space is required between houses:
        - 2 tiles east-west
        - 6 tiles north-south
      - Houses cannot be built on top of mobiles or items.
      - Houses must sit on level ground.
      - Houses cannot sit on trees, rocks etc, or have them directly adjacent to it.
      - Note, it's still possible to create houses in annoying places.. *sigh*
    'cprop' and 'strprop' entries in itemdesc.cfg will be added to new items
    Internal clock granularity is now 1/100th second.
    CreateMultiAtLocation will function for houses, and will create doors and signs.
      - house.components will be an array of all these items
      - each component will have a 'house_serial' custom prop with the serial #
        of the house.

05/09/1999 - POL073
==========
    Rudimentary web server added.  Set WebServer=1, WebServerPort=8080 in pol.cfg,
      then go to http://localhost:8080.  The default website only has a 
      "show online characters" page, but that's just the beginning!
      This only works in multithread mode, which is unstable on exit,
        so this is really only for playing around at this point.
      Default operations allows access only from localhost.
    Weapon animations can be set - 'Anim' in wepndesc.cfg
    Weapon sounds can be set - 'HitSound', 'MissSound' in wepndesc.cfg
    NPCs will no longer step into the same tile as another NPC.
    WebServerLocalOnly (defaults to 1) in pol.cfg will restrict web server access
    "AttackHitSound" and "AttackMissSound" can be specified in npcdesc.cfg
      - Note that to do this, you have to have an AttackSpeed entry too
    Added uo::SendTextEntryGump() - used for those input box thingies
      - see uo.em for parameters and constants
      - Added ".testtextentry" to play with it
      - numerical mode isn't tested yet, but will for sure return result as a string
    Added uo::SendDialogGump( who, layout, textlines ) - see uo.em and testgump.src
       We need more 'testgump' scripts for radio buttons etc
    RandomInt() will return an error if its parameter is <= 0
    Performance enhancements to PC movement with lots of ingame items
    The following functions will automatically convert a 'name' to an 'objtype'
      (they automatically call GetObjtypeByName if a string is passed)
      - CreateItemAtLocation
      - AddMenuItem
      - ListItemsNearLocationOfType
      - CreateItemInContainer
      - CreateRootItemInStorageArea
      - FindObjtypeInContainer
      - CreateItemInBackpack
    ".createstack" can take an objname
    "Movable" property added to itemdesc.cfg - overrides client datafiles
    Item descriptions in merchant windows will no longer include redundant amounts
    "Desc" property in itemdesc.cfg will now be used
    "MOVEITEM_FORCELOCATION" can be added to the z-coordinate in 
      MoveItemToLocation to force acceptance of the position. 
    ControlScript in itemdesc.cfg is now functional
    CreateScript in itemdesc.cfg fill now run for:
      - CreateItemAtLocation
      - CreateItemInContainer
      - CreateItemInBackpack
      If the CreateScript succeeds (returns a 'true' value, or nothing) creation
      will be allowed; if it returns a 'false' value, creation will fail.
    DestroyItem will consult the DestroyScript, if any 
    Decay will consult DestroyScript, if any.  Decay counter is not reset; 
      checks will continue on each decay sweep.
    os::parameter() is gone
    Added os::set_priority( priority ) - set script priority from 1 to 255
      - higher priority scripts will get more CPU time
      - in CS terms, priority is just quanta



04/29/1999 - POL072 (ouch, too many changes! sorry!)
==========
    dot-commands will no longer unhide the character issuing them
    'stealthsteps' member added to mobiles
    GameMasters and ghosts can walk through doors
      GM is defined as graphic == 0x3db, not humans wearing a GM robe
    NPC stats in NPCDESC will be specified in die-roll, base values
     (to come: hp, mana, stamina default to associated attributes)
    'Unhides' property added to skills.cfg, mainly for stealth

    Fixed an AV condition if a stat window was opened on a just-dead NPC
    Skill values in NPCDESC.CFG are now 'base' values, dieroll-form 
    Skill values in NPCDESC.CFG can be named using Skill Name (skills.cfg)
      rather than skillid (for example, Wrestling instead of Skill43)
    Skill values in PCS.TXT and NPCS.TXT will use skill names (and raw values)
    'concealed' flag added to mobiles.  Similar to 'hidden', but is only
      cleared explicitly (who.concealed := 0).  Only effective against
      mobiles below your command level - so Admins can always see GMs, etc.
      The following functions will _always_ exclude 'concealed' mobiles:
        ListMobilesNearLocationEx
        ListMobilesNearLocation
        ListMobilesInLineOfSight
        ListHostiles
        Note that these affect spells cast by higher-level beings.
    Speech code modified to accomodate 'concealed' flag.  A side effect is 
      that speech by non-warmode ghosts should no longer be seen by non-ghosts
    Some events will not be generated for hidden and concealed mobiles:
       - speech
       - entered area, left area
       - opponent moved
    'frozen' and 'paralyzed' members added to mobiles
      - paralyzed is cleared when ApplyRawDamage is called
      - paralyzed and frozen are cleared upon death and resurrection
      - either block:
        - walking and running (MoveCharacter() functions will still work)
        - casting
        - skill use
        - item doubleclick (except paperdoll)
        - targetting of any kind
    '.freeze' and '.thaw' GM commands added

    armor.cfg moved to armrdesc.cfg
      format merged with itemdesc.cfg
          ".armor" is gone = ".create" can do it now.

    weapon.cfg moved to wepndesc.cfg
      format merged with itemdesc.cfg
      ripples to:
          equipfromtemplate
          ".weapon" is gone - ".create" should be able to do it now
      Instead of WeaponTemplate names, weapons can just use different objtypes
        to have different capabilities with the same graphic
      This opens the door for magic weapons etc.

    Experimental multithreading mode: Multithread=1 in pol.cfg
      It's pretty unstable, typically crashing on exit.  Singlethread (default)
      mode is unaffected.
    Config properties can be accessed with "." syntax, rather than using
      "GetConfigInt", "GetConfigString" etc.  Types (integer, string, real)
      determined automatically.
    Config files can be searched for elements with "[]" syntax:
      config[6] searches by integer key, config["WarAxe"] searches by string
    SendSellWindow() sort of works; any merchant will buy and item with a
      nonzero "VendorBuysFor" price in itemdesc.cfg.
!!  Be sure to recompile merchant.src
    MoveToward etc will move around simple obstacles
