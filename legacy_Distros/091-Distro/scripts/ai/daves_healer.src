/////////////////////////////////////////////////////////////////////////////
//
//  daves_healer.src: Fight hostiles, heal/cure/res players
//
//  Healers will wander and defend themselves from attack, tho somewhat
//  more passively. They will only heal/cure/res if the mobile is not an
//  npc, they have LOS, they need the heal/cure/res, and neither the healer
//  nor the healee have any hostiles on them.
//
//  Author: Racalac
//
//  Created: who knows; Modified: 7/5/99
//                      Modified: 8/12/99: Commented out healing hp. Was being
//                                         used as a cheap battle tactic.
//
/////////////////////////////////////////////////////////////////////////////


use npc;
use os;
use uo;

include "include/npccast";
include "include/npcbackpacks";
include "include/randname";
include "include/eventid";
include "include/dist";
include "include/anchors";
include "include/speech";
include "include/vetement";
Const SOUND_EFFECT_RES := 0x215;
Const ACTION_EFFECT_CAST2 := 0x11;
Const REACT_THRESHOLD := 2;

global speech := 99;
global me:= self();
global summons := 1;
global saywords := 1;
if( me.name["<random>"] )
	SetName ( me , RandomName( me ) );
	set_priority(50);
     Habille( me , GetObjProperty(me,"equipt") );
    set_priority(1);
endif

program HealerAI()
drop_anchor();
SetAnchor( me.x, me.y, 5, 20 );
    local next_wander := ReadGameClock() + 10;

    EnableEvents( EVID_ENGAGED + EVID_DISENGAGED + EVID_DAMAGED );
    EnableEvents( EVID_ENTEREDAREA, REACT_THRESHOLD );
    DisableEvents( EVID_SPEECH );
    EnableEvents( EVID_ITEM_GIVEN );

	if (getobjproperty(me, "frozen"))
		me.frozen := 1;
	endif

    SetWarMode( 0 );

    local ev;
    while (1)
        ev := os::wait_for_event( 10 );

        repeat
            // print( "event type: " + ev.type );
            case (ev.type)
            EVID_SPEECH:
		next_wander := readgameclock()+60;
                check_speech(ev.text, ev.source);

                EVID_ENGAGED:
                EVID_DAMAGED:
                    if (ev.source)
                        Fight( ev.source );
                    endif

                EVID_ENTEREDAREA:
                    if ( !ev.source.npctemplate )
                        HealerStuff(ev.source);
                    endif
                EVID_ITEM_GIVEN:
		    next_wander := readgameclock()+60;
		    TakeItem(ev.source,ev.item);
            endcase

        until (! (ev := os::wait_for_event(4)) );
        if (ReadGameClock() >= next_wander)
                wander();
                next_wander := ReadGameClock() + 10;
        endif
    endwhile
endprogram


function Fight( opponent )

    local oldprio := set_priority(50);
    DisableEvents( /*EVID_ENTEREDAREA + */ EVID_LEFTAREA );
    SetOpponent( opponent );

    local waittime;
outer:
    while (opponent and not (opponent.dead or opponent.hidden or opponent.concealed) and (dist(me,opponent) < 15))
        waittime := CloseDistance( opponent ) * 15;

        local ev := wait_for_event( waittime );

        //print( "event type: " + ev.type );
        repeat
            case (ev.type)
                EVID_DISENGAGED:
                EVID_ENGAGED:
                EVID_DAMAGED:
			if ( me.hp < (me.maxhp/2) )			
                    		CastSpell( me , me, "gheal");
			endif
                EVID_OPPONENT_MOVED:
                    break; // just waking up is enough
                EVID_ENTEREDAREA:
                    if ( !ev.source.npctemplate )
                        HealerStuff(ev.source);
                    endif
            endcase
        until (! (ev := wait_for_event(0)) );
    endwhile

    EnableEvents( EVID_ENTEREDAREA + EVID_LEFTAREA, REACT_THRESHOLD );
    SetWarMode( 0 );
    set_priority( oldprio );
endfunction


/////////////////////////////////////////////////////////////////////////////
//
//  CloseDistance - close the distance between self and an opponent.
//  Returns: 1 if distance is 0 or 1 (no move necessary)
//           0 if distance is >= 2 (may still need to move)
//
//  This is a .EM-file candidate.
//
/////////////////////////////////////////////////////////////////////////////
function CloseDistance( opponent )


    case Distance( me, opponent )
        1:              // the most likely, so first 
        0:
            return 1;
        
        2:
            WalkToward( opponent );
            return 0;

        default:
            RunToward( opponent );
            return 0;
    endcase

endfunction


function HealerStuff(mobile)

    if( len(ListHostiles(me)) > 0 )
      Say("I cannot help thee until I escape this danger!");
    else
	//Say (mobile.name);
	local poison_level := Cint(GetObjProperty(mobile, "poison_level"));
	if( mobile.dead and CheckLineOfSight(me,mobile))
	   //Bring up Res choice gump

	   TurnToward(mobile);
	   Say( "Live again by the Virtues!" );
	   CastSpell( me , mobile, "resurrect" );
	elseif( poison_level > 0 and CheckLineOfSight(me,mobile) and (!len(ListHostiles(mobile))))

		TurnToward(mobile);
		Say("Sacrifice Purifies the Body and Soul!");
		CastSpell( me , mobile, "archcure" );

	elseif( (mobile.hp < mobile.maxhp) and CheckLineOfSight(me,mobile) and (!len(ListHostiles(mobile))) )

		TurnToward(mobile);
		Say("Compassion heals all!");
		CastSpell( me , mobile, "gheal" );


	endif
    endif
endfunction
