/* $Id$
 *
 */

use uo;
use os;

include ":datafile:datafile";
include ":email:gumps";

//Global because its just easier.
var email_data_file := DFOpenDataFile(":email:emails", DF_CREATE);
var address_data_file := DFOpenDataFile(":email:AddressBooks", DF_CREATE);
var blocked_data_file := DFOpenDataFile(":email:BlockLists", DF_CREATE);

unload_scripts("email");
program EmailClient(params)
	var mobile := params[1];
	var box_id := params[2];
	var send_to := params[3];
	var subject := params[4];
	var message := params[5];
	params := 0; // Not needed anymore.

	if ( send_to )
		/*if ( message )
			if ( Lower(TypeOf(message)) != "array" )
				message := GFWordWrap(message, 595);
			endif
			SendMail(mobile, send_to, subject, message);
		else
			NewLetter(mobile, send_to, subject);
		endif*/
	else
		IndexGump(mobile, box_id);
	endif

	return 1;
endprogram

function IndexGump(mobile, box_id)
	var input;

	var mail_elem := DFFindElement(email_data_file, Hex(box_id), DF_CREATE);
	var gump := BuildInboxGump(box_id, mail_elem);

	while ( mobile.connected )
		var input := GFSendGump(mobile, gump);
		if ( input[UPDATE_INBOX_BTN] )
			mail_elem := DFFindElement(email_data_file, Hex(box_id), DF_CREATE);
			gump := BuildInboxGump(box_id, mail_elem);
		elseif ( input[DELETE_ALL_BTN] )
			foreach mail_number in ( mail_elem.PropNames() )
				if ( mail_number != "NewMsg" )
					mail_elem.EraseProp(Hex(mail_number));
				endif
				SleepMS(2);
			endforeach
		elseif ( input[BLOCK_LIST_BTN] )
			BlockList(mobile, box_id);
		else
			SendSysMessage(mobile, "Cancelled.");
			break;
		endif
	endwhile

	return 1;
endfunction

function BlockList(mobile, box_id)
	var data_elem := DFFindElement(blocked_data_file, Hex(box_id), DF_CREATE);
	var gump := BuildBlockListGump(data_elem);

	GFSendGump(mobile, gump);
endfunction

