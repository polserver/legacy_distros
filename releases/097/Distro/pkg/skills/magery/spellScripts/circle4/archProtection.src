/*
 * $Id$
 *
 */

use uo;
use os;

include "include/client";
include "include/sounds";
include ":magery:spells";
include ":magery:spellSounds";
include ":attributes:attributes";
include ":timedscripts:timedScripts";
include ":damage:damage";

program SpellScript_ArchProtection(params)
	var mobile := params[1];
	var info := params[2];
	params := 0; // No longer needed
	
	MS_PlaySpellSFX(info.spell_id, mobile);
	
	// Protection on all party members and caster
	var targ;
	foreach targ in ListMobilesNearLocation(mobile.x, mobile.y, mobile.z, CInt(GetConfigInt(info.spell_config, "AreaSize")), mobile.realm)
		// Grab the party list, if any
		var party := GetObjProperty(mobile, "#Party");

		if ( targ.serial in party || targ.serial == mobile.serial )
			if ( !GetObjProperty(targ, "Protection") )
				ApplyArchProtection(targ);
			else
				RemoveArchProtection(targ);
			endif

			MS_PlaySpellGFX(info.spell_id, targ, mobile);
		endif
	endforeach
	
	// Duration: 120% Magery
	var duration := CInt(AP_GetSkill(mobile, MAGERY) * 1.2);
	TS_StartTimer(targ, "curse", duration, 0, mobile);
	
	return 1;
endprogram

function ApplyArchProtection(mobile)
	ModifyResistance(mobile, DMG_PHYSICAL, -35);
	AP_ModifySkillMod(mobile, RESISTING_SPELLS, -35);
	
	// At present there is no determined way to modify casting speed and other stats:
	// ModifyMagicProperties(mobile, "FasterCastSpeed", -2);
	
	SetObjProperty(mobile, "Protection", 1);
endfunction

function RemoveArchProtection(mobile)
	ModifyResistance(mobile, DMG_PHYSICAL, 35);
	AP_ModifySkillMod(mobile, RESISTING_SPELLS, 35);
	
	// At present there is no determined way to modify casting speed and other stats:
	// ModifyMagicProperties(mobile, "FasterCastSpeed", 2);
	
	EraseObjProperty(mobile, "Protection");
endfunction