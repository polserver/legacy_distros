use uo;
use os;

include "include/client";
include "include/sounds";
include ":magery:spells";
include ":magery:spellSounds";
include ":attributes:attributes";
include ":timedScripts:poisonUtil";

program SpellScript_ArchCure(params)
	var mobile := params[1];
	var info := params[2];
	params := 0;

	PlaySoundEffect(mobile, SFX_SPELL_ARCH_PROTECTION);

	// Cures all friendlies in area
	// TODO: I get the party list but should I be getting "friendlies" as uo.com suggests?
	var targ;
	foreach targ in ListMobilesNearLocation(mobile.x, mobile.y, mobile.z, CInt(GetConfigInt(info.spell_config, "AreaSize")), mobile.realm)
		// Grab the party list, if any
		var party := GetObjProperty(mobile, "#Party");

		if ( targ.serial in party || targ.serial == mobile.serial || 1 )
			// Get poison level
			// Note: Unlike OSI, we can have multiple poisons so we'll just grab the highest one.
			var poison_names := TS_GetTimerNames(targ, "P");
			var poison_level := 0;
			foreach timer_name in ( poison_names )
				var timer_info := TS_GetTimerInfo(mobile, timer_name);
				
				if ( timer_info.level > poison_level )
						poison_level := timer_info.level;
				endif
			endforeach
		
			//% Chance to cure: (Magery * 0,75) + (110 - (Poison level * 33)) .
			var chance := CInt(AP_GetSkill(mobile, MAGERY) * 0.75) + (110 - (poison_level * 33));
			if ( chance >= RandomInt(100) )
				// Should be enough to cure all poison.
				TS_CurePoison(targ, 10000, "P", 10);
			endif

			PlayObjectCenteredEffect(targ, GFX_BLUE_SPARKLES, 7, 7);	
		endif
	endforeach

	return 1;
endprogram
