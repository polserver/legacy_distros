use uo;
use os;

include ":attributes:attributes";
include ":magery:spells";
include ":magery:spellSounds";
include "include/client";
include "include/sounds";
include ":damage:damage";

program SpellScript_ChainLightning(params)
	var mobile := params[1];
	var info := params[2];
	params := 0;

	MS_PlaySpellSFX(info.spell_id, mobile);

	// Base damage is a decimal number in between min and max damage
	var min_damage := CInt(GetConfigInt(info.spell_config, "MinBaseDamage"));
	var max_damage := CInt(GetConfigInt(info.spell_config, "MaxBaseDamage"));
	var base_damage := min_damage + (CDbl(RandomInt(CInt((max_damage - min_damage) * 10)) + 1) / 10);
	var damage;

	// Get targets and remove party members and self. Damage is divided by number of valid targets.
	var area_size := CInt(GetConfigInt(info.spell_config, "AreaSize"));
	var targs := ListMobilesNearLocation(mobile.x, mobile.y, mobile.z, area_size, mobile.realm);
	var party := GetObjProperty(mobile, "#Party");
	for i := 1 to (targs.Size())
		if ( (targs[i].serial in party) || (mobile.serial == targs[i].serial) )
			targs.Erase(i);
		endif
	endfor

	foreach targ in targs
		damage := MS_GetSpellDamage(mobile, targ, base_damage) / targs.Size();
		PlayLightningBoltEffect(targ);
		ApplyDamageEX(targ, damage, info.damage_type, mobile);
	endforeach

	return 1;
endprogram
