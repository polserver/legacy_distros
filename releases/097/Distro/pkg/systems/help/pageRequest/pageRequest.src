/* $Id$
 *
 */

use uo;
use os;

include ":datafile:datafile";
include ":gumps:gumps";
include ":gumps:gumps_ex";
include ":help:help-gumps";

unload_scripts("");

program PageRequest(who)
	if ( GetProcess(GetObjProperty(who, "#HelpPID")) )
		SendSysMessage(who, "You already have a help gump open.");
		return 0;
	else
		SetObjProperty(who, "#HelpPID", GetPid());
	endif
	var settings := HS_GetSettingsCfgElem("Settings");
	var gump := LoadGump("IntroGump");
	if ( !gump )
		gump := BuildIntroGump(settings);
		//SaveGump("IntroGump", gump);
	endif

	var input;
	var cur_menu := MAIN_PAGE_BTN;
	while ( who.connected )
		gump := RetrieveGump(cur_menu, settings);

		input := GFSendGump(who, gump);
		SendSysMessage(who, "Input->"+input[0]);
		if ( !input[0] || input[CLOSE_BTN] )
			SendSysMessage(who, "Cancelled.");
			break;
		elseif ( input[MAIN_PAGE_BTN] )
			cur_menu := MAIN_PAGE_BTN;
		elseif ( input[COUNSELOR_PAGE_BTN] )
			cur_menu := COUNSELOR_PAGE_BTN;
		elseif ( input[STAFF_PAGE_BTN] )
			cur_menu := STAFF_PAGE_BTN;
		elseif ( input[HELP_TOPICS_BTN] )
			cur_menu := HELP_TOPICS_BTN;
		else
			break;
		endif
	endwhile

	return 1;
endprogram

function RetrieveGump(cur_menu, byref settings)
	var gump;
	case ( cur_menu )
		MAIN_PAGE_BTN:
			gump := LoadGump("MainGump");
			if ( !gump )
				gump := BuildIntroGump(settings);
				//SaveGump("MainGump", gump);
			endif
			break;

		COUNSELOR_PAGE_BTN:
			gump := LoadGump("CounselorPage");
			if ( !gump )
				gump := BuildTextEntryGump("Counselor Page", COUNSELOR_PAGE_BTN, COUN_TXT_START, settings);
				//SaveGump("CounselorPage", gump);
			endif
			break;

		STAFF_PAGE_BTN:
			gump := LoadGump("StaffPage");
			if ( !gump )
				gump := BuildTextEntryGump("Staff Page", STAFF_PAGE_BTN, STAFF_TXT_START, settings);
				//SaveGump("StaffPage", gump);
			endif
			break;

		HELP_TOPICS_BTN:
			gump := LoadGump("HelpTopicIndex");
			if ( !gump )
				gump := BuildHelpTopicsIndexGump(settings);
				//SaveGump("StaffPage", gump);
			endif
			break;

		default:
			gump := BuildGumpTemplate(settings);
			GFTextLine(gump, 1, 1, 32, "INVALID CUR_MENU ["+cur_menu+"]");
			break;
	endcase

	return gump;
endfunction
