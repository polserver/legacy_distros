/* $Id$
 *
 */

use uo;
use os;

include ":help:queue-gumps";
unload_scripts("helpqueue");

program HelpQueue(mobile, queue_name)

	var gump, input, page_id;
	var cur_menu := QUEUE_TYPES_BTN;
	if ( queue_name )
		if ( CanAccessQueue(queue_name, mobile.cmdlevel) )
			cur_menu := PAGE_LIST_BTN;
		endif
	endif

	while ( mobile.connected )
		if ( cur_menu == QUEUE_TYPES_BTN )
			gump := ShowQueueTypes(mobile.cmdlevel);
		elseif ( cur_menu == PAGE_LIST_BTN )
			gump := ShowPagesInQueue(queue_name, mobile.cmdlevel);
		elseif ( cur_menu == SHOW_PAGE_BTN )
			gump := ShowPageInQueue(queue_name, page_id, mobile.cmdlevel);
		endif

		input := GFSendGump(mobile, gump);
		if ( !input[0] || input[CLOSE_BTN] )
			SendSysMessage(mobile, "Cancelled.");
			break;
		elseif ( input[0] >= SHOW_PAGE_START )
			var key := input[0] - SHOW_PAGE_START;
			page_id := key;
			cur_menu := SHOW_PAGE_BTN;
		elseif ( input[0] >= SHOW_QUEUE_START )
			var key := input[0] - SHOW_QUEUE_START;
			var queues := GetQueueNamesAccess(mobile.cmdlevel);
			queue_name := queues[key];
			cur_menu := PAGE_LIST_BTN;
		endif

		SleepMS(2);
	endwhile

	return 1;
endprogram

function CanAccessQueue(byref queue_name, cmdlevel)
	queue_name := Lower(queue_name);
	foreach name in ( GetQueueNamesAccess(cmdlevel) )
		if ( Lower(name) == queue_name )
			// Sets it to the proper case.
			queue_name := name;
			return 1;
		endif
		SleepMS(2);
	endforeach

	return 0;
endfunction

function GetQueueNamesAccess(cmdlevel)
	var names := array;

	if ( cmdlevel >= 1 ) // Counselor +
		names.Append("Counselor");
	endif

	if ( cmdlevel >= 2 ) // Seer +
		names.Append("Staff");
	endif

	return names;
endfunction
