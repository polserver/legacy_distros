/* $Id$ */

use uo;
use os;
use cfgfile;

include ":attributes:attributes";
include ":containers:containers";

program crafting(mobile, tool)
	SendSysMessage(mobile, "Select a material to work with.");
	var targ := Target(mobile);
	if ( !targ.IsA(POLCLASS_ITEM) )
		SendSysMessage(mobile, "Cancelled.");
		return 0;
	elseif ( !CanUseToolOnMaterial(mobile, tool, targ) )
		return 0;
	endif
	
endprogram

//
// Returns 0 on failure.
// Returns a cfg elem on success dictating what can be made.
// 
function CanUseToolOnMaterial(mobile, tool, targ)
	if ( !(targ in EnumerateItemsInContainer(mobile.backpack) ) )
		SendSysMessage(mobile, "You can only use materials in your backpack.");
		return 0;
	endif
	
	// Tool=0x1234&Material=0x5678
	// {
	//	SubMenu ... (another menu of stuff to make)
	//	Entry	objtype	desc
	// }
	var tool_on_material_objtype := CStr("Tool=" + hex(tool.objtype) + "&Material=" + hex(targ.objtype));
	var tool_on_material_graphic := CStr("Tool=" + hex(tool.objtype) + "&Material=" + hex(targ.graphic));
	var cfg := ReadConfigFile(":*:toolOnMaterial");
	var elem := cfg[tool_on_material_objtype];
	if ( !elem )
		elem := cfg[tool_on_material_graphic];
		if ( !elem )
			SendSysMessage(mobile, "You cant make anything with this material.");
			return 0;
		endif
	endif
	
	return elem;
endfunction


function ToolOnMaterial()
	return 0;
endfunction

function DoMenuStuff()
	return 1;
endfunction

function InternalMenuSystem()
	return 1;
endfunction

function CheckMaterials()
	return 1;
endfunction

function ConsumeMaterials()
	return 1;
endfunction

function DoSkillCheck()
	return 1;
endfunction

function InternalSkillCheck()
	return 1;
endfunction

function CreateItem()
	return 1;
endfunction

