// $Id$

use uo;
use os;
use polsys;

include ":serverlist:settings";

program doServerList()
	Print("INSTALLING: ServerList PH...");

	return 1;
endprogram

exported function handleSendStatusRequest(connection, byref packet)
	var settings := SL_GetSettingsCfgElem("Settings");
	var status := GetConnectUOStatus();

	packet.SetSize(Len(status));

	Print("Testing:"+packet.SetString(0, status, 0));
	
	if ( GetConfigInt(settings, "Debug") )
		Print("Sending ServerList status: "+status);
		Print("  Packet:"+packet);
	endif
	
	return 0;
endfunction

exported function handleReceiveStatusRequest(connection, byref packet)
	return 0;
endfunction

// ConnectUO expects: Name Age Clients Items Chars Mem
function GetConnectUOStatus()
	var settings := SL_GetSettingsCfgElem("Settings");
	var memory := CInt(GetConfigInt(settings, "PhysicalMemory") / 1024);
	
	return "POL, Name="+settings.ServerName+", Age="+PolCore().uptime+", Clients="+(EnumerateOnlineCharacters().Size())+", "+
           "Items="+PolCore().itemcount+", Chars="+PolCore().mobilecount+", Mem="+memory+"K";
endfunction

// UOGateway expects: Name Age Ver TZ EMail URL Clients
function GetUOGatewayStatus()
	var settings := SL_GetSettingsCfgElem("Settings");

	return "POL, Name="+settings.ServerName+", Age="+CInt(ReadGameClock()/86400)+", Ver="+PolCore().verstr+", TZ=1, "+
           "EMail="+settings.ServerEmail+", URL="+settings.ServerURL+", Clients="+(EnumerateOnlineCharacters().Size()));
endfunction