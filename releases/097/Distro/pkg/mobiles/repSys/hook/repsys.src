/* $Id$
 *
 */

use uo;
use os;
use cfgfile;

// Stored as globals because hook scripts handle them in a special way.
var name_colors, general_elem;

program Install()
	Set_Critical(1);

	var rep_cfg := ReadConfigFile("::repsys");
	if ( !rep_cfg )
		return 0;
	endif

	name_colors := rep_cfg["NameColoring"];
	if ( !name_colors )
		return 0;
	endif

	general_elem := rep_cfg["General"];
	if ( !general_elem )
		return 0;
	endif

	Set_Critical(0);

	return 1;
endprogram

exported function NameColor(mobile, seen_by)
	var color := 0;

	if ( mobile.master )
		return NameColor(mobile.master, seen_by);
	elseif ( mobile.murderer )
		color := GetConfigInt(name_colors, "Murderer");
	elseif ( mobile.criminal )
		// Murderers are always criminals
		// Criminals are not always murderers
		color := GetConfigInt(name_colors, "Criminal");
	elseif ( mobile.Enabled("invul") )
		color := GetConfigInt(name_colors, "Invulnerable");
	// Guild ally
	//	return GetConfigInt(name_colors, "GuildAlly");
	// Guid enemy
	//	GetConfigInt(name_colors, "GuildEnemy");
	else
		color := GetConfigInt(name_colors, "Innocent");
	endif

	if ( color.errortext )
		SysLog("NameColor() - "+color.errortext);
	endif

	return CInt(color);
endfunction

exported function HighLightColor(mobile, seen_by)
	var color := 0;

	if ( mobile.master )
		return HighLightColor(mobile.master, seen_by);
	elseif ( mobile.murderer )
		color := GetConfigInt(name_colors, "MurdererHighLight");
	elseif ( mobile.criminal )
		// Murderers are always criminals
		// Criminals are not always murderers
		color := GetConfigInt(name_colors, "CriminalHighLight");
	elseif ( mobile.Enabled("invul") )
		color := GetConfigInt(name_colors, "InvulnerableHighLight");
	// Guild ally
	//	return GetConfigInt(name_colors, "GuildAllyHighLight");
	// Guid enemy
	//	GetConfigInt(name_colors, "GuildEnemyHighLight");
	else
		color := GetConfigInt(name_colors, "InnocentHighLight");
	endif

	if ( color.errortext )
		SysLog("HighLightColor() - "+color.errortext);
	endif

	return CInt(color);
endfunction
