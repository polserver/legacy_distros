use os;
use uo;

include "include/eventID";
include "include/attributes";
include "include/spellRestrictions";
include "include/res";
include "include/resPenalty";

program spell_resurrect( parms )
  var circle := 8;
  var delivery := "direct";
  var noto := "neutral";
  var result := maincast(parms, delivery, circle, noto, 59);
  if(result == 0)
    return;
  endif
  var caster := result[1];
  var cast_on := result[2];
  if(Distance(caster, cast_on) > 1)
	SendSysMessage(caster,"That is too far away!");
	return;
  endif
  PlaySoundEffect(caster, SFX_SPELL_RESSURECTION);
  PlaySoundEffect(cast_on, SFX_SPELL_RESSURECTION);
  if(cast_on.isA(POLCLASS_NPC))
    var element := npccfg[cast_on.npctemplate].elemental;
    if(element == "undead")
      PlayStationaryEffect( cast_on.x, cast_on.y, cast_on.z, FX_HEAL_EFFECT, 0xa, 0xa );
      var ev := array;
      ev.+ type;
      ev.+ source;
      ev.type := EVID_PEACEMADE;
      SendEvent(cast_on, ev);
      ev.source := caster;
      SendEvent(cast_on, ev);
      ev.type := EVID_ENGAGED;
      SendEvent(cast_on, ev);
      PlayObjectCenteredEffect(cast_on, 0x37b9,0x03, 0x0a);
      if(CheckSkill(cast_on,SKILLID_MAGICRESISTANCE, 70, 800))
        var dmg := CalcSpellDamage(circle,caster,cast_on) + (RandomInt(20));
        ApplyRawDamage(cast_on, dmg);
      else
        ApplyRawDamage(cast_on, GetHp(cast_on) +1);
      endif
    endif
  else
    if (!cast_on.dead)
	  SendSysMessage(caster,"That isn't dead!");
	  return;
    endif
    if(cast_on.criminal)
      caster.setCriminal(1);
    endif
    detach();
    if(ResNow(cast_on)==1)
      Resurrect(cast_on);
      ResPenalties(cast_on);
    endif
  endif
endprogram