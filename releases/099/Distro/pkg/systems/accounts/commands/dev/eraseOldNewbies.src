/*
        Created by *Edwards

        2010-08-28
*/
use uo;
use os;

include "include/security";
include ":attributes:attributes";
include ":statistics:account";
include ":timeutils:time";

program textcommand_myProts( mobile )

        SendSysMessage( mobile, "You cannot use this command." );
        return 0;

        if( !AuthorizationCode( mobile ))
                SendSysMessage( mobile, "Cancelled." );
                return 0;
        endif

        return 0;

        var total_delete := 0,
            low_skills := 0;
        
 	foreach acct_name in ( ListAccounts() )
		var account := FindAccount( acct_name );
		var i := 1;
                while( i <= 5 )
                        var character := account.GetCharacter(i);
 	 	 	if( character )
 	 	 	 	var total_skills := GetTotalSkill( character );
                                if( total_skills < 650 )
                                        low_skills += 1;
 	 	 	 	 	var last_logon := GetAccountProperty( character.acctname, "LastLogin" );
                                        if( !DelayAccepted( last_logon ))
                                         	SendSysMessage( mobile, "Player Name: "+character.name );
 	 	 	 	 	 	total_delete += 1;
                                                account.DeleteCharacter(i);
                                        endif
                                endif
                        endif
                        i += 1;
                        SleepMS(5);
                endwhile
 	 	SleepMS(5);
 	endforeach
  
        SendSysMessage( mobile, "Total character to be deleted: "+total_delete );
        SendSysMessage( mobile, "Total character below 600 total skills: "+low_skills );
 
        return 1;
endprogram

function GetTotalSkill( mobile )

        var total_skills := 0;
        
	foreach i in AP_ListAttributesByType( "skill" )

		total_skills += AP_GetSkill( mobile, i );
  
                SleepMS(5);
	endforeach
 
        return total_skills;
endfunction

function DelayAccepted( last_logon )

        var delay := CInt( ReadGameClock() - last_logon );
        if( delay > CInt( SEC_MONTH * 3 ))
                return 0;
        endif
        
        return 1;
endfunction
