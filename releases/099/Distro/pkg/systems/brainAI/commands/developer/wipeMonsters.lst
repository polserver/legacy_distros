C:\ZH099\pkg\systems\brainAI\commands\developer\wipeMonsters.src, Line 14
program textcmd_wipeMonsters( mobile )
use cfgfile;
0: get arg 'mobile'
if( !AuthorizationCode( mobile ))
1: local #0
2: makelocal
3: jmp userfunc @66
4: if true goto 13
SendSysMessage( mobile, "Cancelled." );
5: local #0
6: "Cancelled."
7: 3L
8: 1000L
9: Func(2,3): SendSysMessage
10: #
return 0;
11: 0L
12: progend
foreach realm in ( Realms() )
13: ""
14: Func(5,2): Realms
15: initforeach @54
foreach object in ( ListObjectsInBox( 0, 0, -130, realm.width, realm.height, 13
16: 0L
17: 0L
18: -130L
19: local #1
20: get member 'width'
21: local #1
22: get member id 'height' (8)
23: 130L
24: local #3
25: Func(2,7): ListObjectsInBox
26: initforeach @49
SleepMS(2);
27: 2L
28: Func(3,0): Sleepms
29: #
if( !object.IsA( POLCLASS_NPC ))
30: local #4
31: 4L
32: Call Method id isa (#0, 1 params)
33: if true goto 36
continue;
34: goto49
35: goto41
elseif( !IsMonster( object ))
36: local #4
37: makelocal
38: jmp userfunc @139
39: if true goto 41
continue;
40: goto49
SetObjProperty( object, "GuardKill", 1 );
41: local #4
42: "GuardKill"
43: 1L
44: Func(2,5): SetObjProperty
45: #
object.Kill();
46: local #4
47: Call Method id kill (#75, 0 params)
48: #
49: stepforeach @27
50: leave block(3)
SleepMS(2);
51: 2L
52: Func(3,0): Sleepms
53: #
54: stepforeach @16
55: leave block(3)
SendSysMessage( mobile, "Done!" );
56: local #0
57: "Done!"
58: 3L
59: 1000L
60: Func(2,3): SendSysMessage
61: #
return 1;
62: 1L
63: progend
64: leave block(1)
65: progend
c:/ZH099/scripts/include/security.inc, Line 14
function AuthorizationCode( mobile )
66: pop param 'mobile'
if( GetObjProperty( mobile, "#AuthCodeGiven" ));
67: local #0
68: "#AuthCodeGiven"
69: Func(2,1): GetObjProperty
70: if false goto 73
return 1;
71: 1L
72: return
var autocode := GetGlobalProperty( "CA" );
73: decl local #1
74: "CA"
75: Func(2,2): GetGlobalProperty
76: :=
77: #
if( !autocode )
78: local #1
79: if true goto 95
SendSysMessage( mobile, "Authorization code is not given yet.", 3, 53 );
80: local #0
81: "Authorization code is not given yet."
82: 3L
83: 53L
84: Func(2,3): SendSysMessage
85: #
SendSysMessage( mobile, "Uses .setauthcode to create a new code.", 3, 53 );
86: local #0
87: "Uses .setauthcode to create a new code."
88: 3L
89: 53L
90: Func(2,3): SendSysMessage
91: #
return 0;
92: 0L
93: return
94: goto137
var code := SendTextEntryGump( mobile, "Enter the Authorization Code.", TE_CANC
95: decl local #0
96: local #0
97: "Enter the Authorization Code."
98: 1L
99: 1L
100: 10L
101: ""
102: Func(2,4): SendTextEntryGump
103: :=
104: #
if( code == autocode )
105: local #2
106: local #1
107: ==
108: if false goto 123
SendSysMessage( mobile, "Code Accepted!", 3, 70 );
109: local #0
110: "Code Accepted!"
111: 3L
112: 70L
113: Func(2,3): SendSysMessage
114: #
SetObjProperty( mobile, "#AuthCodeGiven", 1 );
115: local #0
116: "#AuthCodeGiven"
117: 1L
118: Func(2,5): SetObjProperty
119: #
return 1;
120: 1L
121: return
122: goto136
SendSysMessage( mobile, "It is not the Authorization code.", 3, 33 );
123: local #0
124: "It is not the Authorization code."
125: 3L
126: 33L
127: Func(2,3): SendSysMessage
128: #
NotifyStaffOnline( mobile, "has provided a wrong authorization code." );
129: local #0
130: "has provided a wrong authorization code."
131: makelocal
132: jmp userfunc @176
133: #
return 0;
134: 0L
135: return
136: leave block(1)
137: 0L
138: return
C:\ZH099\pkg\systems\brainAI\commands\developer\wipeMonsters.src, Line 41
function IsMonster( object )
139: pop param 'object'
var npc_desc := ReadConfigFile( ":merchants:npcdesc" );
140: decl local #1
141: ":merchants:npcdesc"
142: Func(4,0): ReadConfigFile
143: :=
144: #
var npc_template := object.npctemplate;
145: decl local #2
146: local #0
147: get member id 'npctemplate' (62)
148: :=
149: #
var npc_elem := NPC_GetNPCConfig( npc_template );
150: decl local #3
151: local #2
152: makelocal
153: jmp userfunc @261
154: :=
155: #
if( Lower( npc_elem.Alignment ) == "evil" || Lower( npc_elem.Alignment ) == "ne
156: local #3
157: get member id 'alignment' (130)
158: Func(0,2): Lower
159: "evil"
160: ==
161: local #3
162: get member id 'alignment' (130)
163: Func(0,2): Lower
164: "neutral"
165: ==
166: local #0
167: get member id 'master' (63)
168: !
169: &&
170: ||
171: if false goto 174
return 1;
172: 1L
173: return
return 0;
174: 0L
175: return
c:/ZH099/scripts/include/security.inc, Line 40
function NotifyStaffOnline( object, text )
176: pop param 'text'
177: pop param 'object'
var name := object.name;
178: decl local #2
179: local #1
180: get member id 'name' (3)
181: :=
182: #
if( !name )
183: local #2
184: if true goto 192
name := object.desc;
185: local #1
186: get member id 'desc' (19)
187: local2 := 
if( !name )
188: local #2
189: if true goto 192
name := object;
190: local #1
191: local2 := 
foreach character in EnumerateOnlineCharacters()
192: Func(2,6): EnumerateOnlineCharacters
193: initforeach @228
if( GetObjProperty( character, "Notify" ))
194: local #3
195: "Notify"
196: Func(2,1): GetObjProperty
197: if false goto 225
if( object.cmdlevel <= character.cmdlevel || character.cmdlevel >= 4 )
198: local #1
199: get member id 'cmdlevel' (46)
200: local #3
201: get member id 'cmdlevel' (46)
202: <=
203: local #3
204: get member id 'cmdlevel' (46)
205: 4L
206: >=
207: ||
208: if false goto 225
SendSysMessage( character, "You receive a notification:", 3, 55 );
209: local #3
210: "You receive a notification:"
211: 3L
212: 55L
213: Func(2,3): SendSysMessage
214: #
SendSysMessage( character, name+" >>> "+text, 3, 55 );
215: local #3
216: local #2
217: " >>> "
218: +
219: local #0
220: +
221: 3L
222: 55L
223: Func(2,3): SendSysMessage
224: #
SleepMS(5);
225: 5L
226: Func(3,0): Sleepms
227: #
228: stepforeach @194
229: leave block(3)
if( object.serial )
230: local #1
231: get member id 'serial' (6)
232: if false goto 249
ReportText( name+"["+object.serial+"] >>> "+text, REPORT_SYSLOG );
233: local #2
234: "["
235: +
236: local #1
237: get member id 'serial' (6)
238: +
239: "] >>> "
240: +
241: local #0
242: +
243: 2L
244: 0L
245: makelocal
246: jmp userfunc @380
247: #
248: goto259
ReportText( name+" >>> "+text, REPORT_SYSLOG );
249: local #2
250: " >>> "
251: +
252: local #0
253: +
254: 2L
255: 0L
256: makelocal
257: jmp userfunc @380
258: #
return 1;
259: 1L
260: return
c:/ZH099/pkg/systems/brainAI/include/npcUtil.inc, Line 35
function NPC_GetNPCConfig( template )
261: pop param 'template'
if( !template.package )
262: local #0
263: get member 'package'
264: if true goto 269
template := NPC_ParseTemplateName( template );
265: local #0
266: makelocal
267: jmp userfunc @318
268: local0 := 
var npc_cfg := ReadConfigFile( ":"+template.package+":npcdesc" );
269: decl local #1
270: ":"
271: local #0
272: get member 'package'
273: +
274: ":npcdesc"
275: +
276: Func(4,0): ReadConfigFile
277: :=
278: #
if( npc_cfg.errortext )
279: local #1
280: get member 'errortext'
281: if false goto 294
return error{"errortext":="Error::NPC_GetNPCConfig() - Could not open :"+templa
282: error
283: "Error::NPC_GetNPCConfig() - Could not open :"
284: local #0
285: get member 'package'
286: +
287: ":npcdesc ->"
288: +
289: local #1
290: get member 'errortext'
291: +
292: addmember-assign(errortext)
293: return
var cfg_elem := npc_cfg[template.template];
294: decl local #2
295: local #1
296: local #0
297: get member 'template'
298: [] 1
299: :=
300: #
if( cfg_elem.errortext )
301: local #2
302: get member 'errortext'
303: if false goto 316
return error{"errortext":="Error::NPC_GetNPCConfig() - Could not find elem ["+t
304: error
305: "Error::NPC_GetNPCConfig() - Could not find elem ["
306: local #0
307: get member 'template'
308: +
309: "] ->"
310: +
311: local #2
312: get member 'errortext'
313: +
314: addmember-assign(errortext)
315: return
return cfg_elem;
316: local #2
317: return
c:/ZH099/pkg/systems/brainAI/include/npcUtil.inc, Line 11
function NPC_ParseTemplateName( template_name )
318: pop param 'template_name'
if( template_name.IsA( POLCLASS_NPC ))
319: local #0
320: 4L
321: Call Method id isa (#0, 1 params)
322: if false goto 326
template_name := template_name.npctemplate;
323: local #0
324: get member id 'npctemplate' (62)
325: local0 := 
var colon_a := Find( template_name, ":", 1 );
326: decl local #1
327: local #0
328: ":"
329: 1L
330: Func(0,6): Find
331: :=
332: #
var colon_b := Find( template_name, ":", 2 );
333: decl local #2
334: local #0
335: ":"
336: 2L
337: Func(0,6): Find
338: :=
339: #
var parsed := struct{"package", "template"};
340: decl local #3
341: struct
342: addmember(package)
343: addmember(template)
344: :=
345: #
if( !colon_a || !colon_b )
346: local #1
347: !
348: local #2
349: !
350: ||
351: if false goto 359
parsed.package := "";
352: local #3
353: ""
354: set member 'package' #
parsed.template := template_name;
355: local #3
356: local #0
357: set member 'template' #
358: goto378
parsed.package := template_name[colon_a+1, colon_b-2];
359: local #3
360: local #0
361: local #1
362: 1L
363: +
364: local #2
365: 2L
366: -
367: [,]
368: set member 'package' #
parsed.template := template_name[colon_b+1, Len( template_name )];
369: local #3
370: local #0
371: local #2
372: 1L
373: +
374: local #0
375: Func(0,1): Len
376: [,]
377: set member 'template' #
return parsed;
378: local #3
379: return
c:/ZH099/pkg/utils/security/include/report.inc, Line 22
function ReportText( report_text:="?", flags:=REPORT_DISABLE, text_color:=0 )
380: pop param 'text_color'
381: pop param 'flags'
382: pop param 'report_text'
if( !flags )
383: local #1
384: if true goto 388
return 0;
385: 0L
386: return
387: goto443
elseif( flags & REPORT_CONSOLE )
388: local #1
389: 1L
390: &
391: if false goto 398
Print( ""+report_text );
392: ""
393: local #2
394: +
395: Func(1,0): Print
396: #
397: goto443
elseif( flags & REPORT_SYSLOG )
398: local #1
399: 2L
400: &
401: if false goto 432
var script_name := CStr( GetProcess( GetPid() ).name ),
402: decl local #0
403: Func(3,2): GetPid
404: Func(3,1): GetProcess
405: get member id 'name' (3)
406: Func(0,0): CStr
407: :=
408: #
409: decl local #1
410: local #3
411: makelocal
412: jmp userfunc @445
413: :=
414: #
LogToFile( "::log/"+pkg_name+".log", "["+script_name+"]: "+report_text, LOG_DAT
415: "::log/"
416: local #4
417: +
418: ".log"
419: +
420: "["
421: local #3
422: +
423: "]: "
424: +
425: local #2
426: +
427: 1L
428: Func(6,0): LogToFile
429: #
430: leave block(2)
431: goto443
elseif( flags & REPORT_BROADCAST )
432: local #1
433: 4L
434: &
435: if false goto 443
Broadcast( ""+report_text, 3, text_color );
436: ""
437: local #2
438: +
439: 3L
440: local #0
441: Func(2,0): Broadcast
442: #
return 1;
443: 1L
444: return
c:/ZH099/pkg/utils/security/include/report.inc, Line 40
function GetPkgName( script_name )
445: pop param 'script_name'
var i;
446: decl local #1
447: #
for( i:=1; i<=len(script_name); i+=1 )
448: local #1
449: 1L
450: :=
451: #
452: local #1
453: local #0
454: Func(0,1): Len
455: <=
456: if false goto 476
if( !Check_ValidChar( script_name[i] ))
457: local #0
458: local #1
459: [] 1
460: 0L
461: makelocal
462: jmp userfunc @492
463: if true goto 468
script_name[i] := " ";
464: local #0
465: local #1
466: " "
467: [] := (1) #
SleepMS(5);
468: 5L
469: Func(3,0): Sleepms
470: #
471: local #1
472: 1L
473: +=
474: #
475: goto452
foreach poss_pkg in ( SplitWords( script_name ))
476: local #0
477: " "
478: Func(0,5): SplitWords
479: initforeach @488
if( GetPackageByName( poss_pkg ))
480: local #2
481: Func(5,0): GetPackageByName
482: if false goto 485
return poss_pkg;
483: local #2
484: return
SleepMS(5);
485: 5L
486: Func(3,0): Sleepms
487: #
488: stepforeach @480
489: leave block(3)
return 0;
490: 0L
491: return
c:/ZH099/scripts/include/string.inc, Line 147
function Check_ValidChar( text, allow_space:=0 )
492: pop param 'allow_space'
493: pop param 'text'
var valid_char := array{ "a", "b", "c", "d", "e", "f", "g",
494: decl local #2
495: array
496: "a"
497: init{}
498: "b"
499: init{}
500: "c"
501: init{}
502: "d"
503: init{}
504: "e"
505: init{}
506: "f"
507: init{}
508: "g"
509: init{}
510: "h"
511: init{}
512: "i"
513: init{}
514: "j"
515: init{}
516: "k"
517: init{}
518: "l"
519: init{}
520: "m"
521: init{}
522: "n"
523: init{}
524: "o"
525: init{}
526: "p"
527: init{}
528: "q"
529: init{}
530: "r"
531: init{}
532: "s"
533: init{}
534: "t"
535: init{}
536: "u"
537: init{}
538: "v"
539: init{}
540: "w"
541: init{}
542: "x"
543: init{}
544: "y"
545: init{}
546: "z"
547: init{}
548: "A"
549: init{}
550: "B"
551: init{}
552: "C"
553: init{}
554: "D"
555: init{}
556: "E"
557: init{}
558: "F"
559: init{}
560: "G"
561: init{}
562: "H"
563: init{}
564: "I"
565: init{}
566: "P"
567: init{}
568: "O"
569: init{}
570: "N"
571: init{}
572: "M"
573: init{}
574: "L"
575: init{}
576: "K"
577: init{}
578: "J"
579: init{}
580: "Q"
581: init{}
582: "R"
583: init{}
584: "S"
585: init{}
586: "T"
587: init{}
588: "U"
589: init{}
590: "V"
591: init{}
592: "W"
593: init{}
594: "X"
595: init{}
596: "Y"
597: init{}
598: "Z"
599: init{}
600: "1"
601: init{}
602: "2"
603: init{}
604: "3"
605: init{}
606: "4"
607: init{}
608: "5"
609: init{}
610: "6"
611: init{}
612: "7"
613: init{}
614: "8"
615: init{}
616: "9"
617: init{}
618: "0"
619: init{}
620: :=
621: #
var len_text := Len( text );
622: decl local #3
623: local #1
624: Func(0,1): Len
625: :=
626: #
var i;
627: decl local #4
628: #
for( i:=1; i<=len_text; i+=1 )
629: local #4
630: 1L
631: :=
632: #
633: local #4
634: local #3
635: <=
636: if false goto 679
SleepMS(5);
637: 5L
638: Func(3,0): Sleepms
639: #
var letter := CStr( text[i] );
640: decl local #0
641: local #1
642: local #4
643: [] 1
644: Func(0,0): CStr
645: :=
646: #
if( letter in valid_char )
647: local #5
648: local #2
649: in
650: if false goto 654
continue;
651: leave block(1)
652: goto674
653: goto671
elseif( allow_space && ( text[i] == " " || CAsc( text[i] ) == 0 ))
654: local #0
655: local #1
656: local #4
657: [] 1
658: " "
659: ==
660: local #1
661: local #4
662: [] 1
663: Func(0,4): CAsc
664: 0L
665: ==
666: ||
667: &&
668: if false goto 671
continue;
669: leave block(1)
670: goto674
return 0;
671: 0L
672: return
673: leave block(1)
674: local #4
675: 1L
676: +=
677: #
678: goto633
return 1;
679: 1L
680: return
