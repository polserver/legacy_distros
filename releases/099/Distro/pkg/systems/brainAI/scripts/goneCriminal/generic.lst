C:\ZH099\pkg\systems\brainAI\scripts\goneCriminal\generic.src, Line 13
program BrainNerve( params )
include ":brainAI:npcError";
0: get arg 'params'
var npc		:= params[1];
1: decl local #1
2: local #0
3: 1L
4: [] 1
5: :=
6: #
var event	:= params[3];
7: decl local #2
8: local #0
9: 3L
10: [] 1
11: :=
12: #
var settings	:= params[4];
13: decl local #3
14: local #0
15: 4L
16: [] 1
17: :=
18: #
var scripts	:= params[5];
19: decl local #4
20: local #0
21: 5L
22: [] 1
23: :=
24: #
params := 0; // Not needed anymore.
25: 0L
26: local0 := 
while( npc )
27: local #1
28: if false goto 51
if( event )
29: local #2
30: if false goto 44
case( event.type )
31: local #2
32: get member 'type'
33: casejmp
	8192: @34
	default: @42
GoneCriminal( npc, event, settings, scripts );
34: local #1
35: local #2
36: local #3
37: local #4
38: makelocal
39: jmp userfunc @55
40: #
break;
41: goto42
event := 0;
42: 0L
43: local2 := 
SleepMS(5);
44: 5L
45: Func(3,2): Sleepms
46: #
event := Wait_For_Event(1);
47: 1L
48: Func(3,7): Wait_For_Event
49: local2 := 
50: goto27
return 1;
51: 1L
52: progend
53: leave block(5)
54: progend
C:\ZH099\pkg\systems\brainAI\scripts\goneCriminal\generic.src, Line 40
function GoneCriminal( npc, byref event, byref settings, byref scripts )
55: pop param byref 'scripts'
56: pop param byref 'settings'
57: pop param byref 'event'
58: pop param 'npc'
var source := event.source;
59: decl local #4
60: local #2
61: get member 'source'
62: :=
63: #
if( NPC_ShouldWatch( npc, source, settings, scripts ))
64: local #3
65: local #4
66: local #1
67: local #0
68: makelocal
69: jmp userfunc @79
70: if false goto 77
AI_WakeUp( npc );
71: local #3
72: makelocal
73: jmp userfunc @117
74: #
return 1;
75: 1L
76: return
return 0;
77: 0L
78: return
c:/ZH099/pkg/systems/brainAI/include/npcWatchList.inc, Line 81
function NPC_ShouldWatch( npc, mobile, byref settings, byref scripts )
79: pop param byref 'scripts'
80: pop param byref 'settings'
81: pop param 'mobile'
82: pop param 'npc'
if( !scripts["ShouldWatch"] )
83: local #0
84: "ShouldWatch"
85: [] 1
86: if true goto 89
return 1;
87: 1L
88: return
var result := Run_Script_To_Completion( scripts["ShouldWatch"].script, {npc, mo
89: decl local #4
90: local #0
91: "ShouldWatch"
92: [] 1
93: get member id 'script' (61)
94: array
95: local #3
96: init{}
97: local #2
98: init{}
99: local #1
100: init{}
101: Func(3,6): Run_Script_To_Completion
102: :=
103: #
if( result.errortext )
104: local #4
105: get member 'errortext'
106: if false goto 115
NPC_ErrorSysLog( npc, "Error::NPC_ShouldWatch() - "+result.errortext );
107: local #3
108: "Error::NPC_ShouldWatch() - "
109: local #4
110: get member 'errortext'
111: +
112: makelocal
113: jmp userfunc @142
114: #
return result;
115: local #4
116: return
c:/ZH099/pkg/systems/brainAI/include/npcCommands.inc, Line 190
function AI_WakeUp( npc )
117: pop param 'npc'
var ev		:= struct;
118: decl local #1
119: struct
120: :=
121: #
ev.+type	:= NPCEVENT_WAKEUP;
122: local #1
123: "type"
124: .+
125: 10485779L
126: := #
ev.+WakeUp	:= WAKEUP;
127: local #1
128: "WakeUp"
129: .+
130: 1L
131: := #
ev.+process	:= GetProcess( GetPid() );
132: local #1
133: "process"
134: .+
135: Func(3,4): GetPid
136: Func(3,1): GetProcess
137: := #
return SendEvent( npc, ev );
138: local #0
139: local #1
140: Func(2,3): SendEvent
141: return
c:/ZH099/pkg/systems/brainAI/include/npcError.inc, Line 9
function NPC_ErrorSysLog( npc, errmsg )
142: pop param 'errmsg'
143: pop param 'npc'
PrintTextAbove( npc, errmsg, 3, 33 );
144: local #1
145: local #0
146: 3L
147: 33L
148: 0L
149: Func(2,0): PrintTextAbove
150: #
SysLog( "------------" );
151: "------------"
152: Func(3,0): SysLog
153: #
SysLog( "NPC Template: "+npc.npctemplate );
154: "NPC Template: "
155: local #1
156: get member id 'npctemplate' (62)
157: +
158: Func(3,0): SysLog
159: #
SysLog( "NPC Name    : "+npc.name );
160: "NPC Name    : "
161: local #1
162: get member id 'name' (3)
163: +
164: Func(3,0): SysLog
165: #
SysLog( errmsg );
166: local #0
167: Func(3,0): SysLog
168: #
SysLog( "------------" );
169: "------------"
170: Func(3,0): SysLog
171: #
npc.Disable( "invul" );
172: local #1
173: "invul"
174: Call Method id disable (#9, 1 params)
175: #
SetObjProperty( npc, "GuardKill", 1 );
176: local #1
177: "GuardKill"
178: 1L
179: Func(2,1): SetObjProperty
180: #
npc.Kill();
181: local #1
182: Call Method id kill (#75, 0 params)
183: #
return 1;
184: 1L
185: return
