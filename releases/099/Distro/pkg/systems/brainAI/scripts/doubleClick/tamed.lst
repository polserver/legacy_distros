c:/ZH099/pkg/systems/classes/include/classes.inc, Line 26
var settings := Classes_GetSettingsCfgElem( "Settings" );
0: decl global #0
1: "Settings"
2: 0L
3: makelocal
4: jmp userfunc @109
5: :=
6: #
c:/ZH099/pkg/utils/datafile/include/datafile.inc, Line 35
var DF_DEBUG_MODE	:= 0;
7: decl global #1
8: 0L
9: :=
10: #
c:/ZH099/pkg/systems/loot/include/identify_ex.inc, Line 7
var immunities := { "AirProtection",
11: decl global #2
12: array
13: "AirProtection"
14: init{}
15: "EarthProtection"
16: init{}
17: "FireProtection"
18: init{}
19: "WaterProtection"
20: init{}
21: "NecroProtection"
22: init{}
23: "PermPoisonProtection"
24: init{}
25: "PermMagicProtection"
26: init{}
27: "PhysicalProtection"
28: init{}
29: "PermSpellReflection"
30: init{}
31: "HealingIncrease"
32: init{}
33: :=
34: #
var wardings := { "PoisonProtection",
35: decl global #3
36: array
37: "PoisonProtection"
38: init{}
39: "MagicProtection"
40: init{}
41: "SpellReflection"
42: init{}
43: "FreeAction"
44: init{}
45: :=
46: #
var regenerations := { "HitsRegen",
47: decl global #4
48: array
49: "HitsRegen"
50: init{}
51: "StamRegen"
52: init{}
53: "ManaRegen"
54: init{}
55: :=
56: #
C:\ZH099\pkg\systems\brainAI\scripts\doubleClick\tamed.src, Line 20
program BrainNerve( params )
const LEVEL_MULTIPLIER := 1500;
57: get arg 'params'
var npc		:= params[1];
58: decl local #1
59: local #0
60: 1L
61: [] 1
62: :=
63: #
var event	:= params[3];
64: decl local #2
65: local #0
66: 3L
67: [] 1
68: :=
69: #
params := 0; // Not needed anymore.
70: 0L
71: local0 := 
while( npc )
72: local #1
73: if false goto 105
if( event )
74: local #2
75: if false goto 98
case( event.type )
76: local #2
77: get member 'type'
78: casejmp
	2048: @79
	default: @95
if( npc.master && event.source == npc.master )
79: local #1
80: get member id 'master' (63)
81: local #2
82: get member 'source'
83: local #1
84: get member id 'master' (63)
85: ==
86: &&
87: if false goto 93
DblClickEvent( npc, event );
88: local #1
89: local #2
90: makelocal
91: jmp userfunc @153
92: #
break;
93: goto94
94: goto96
break;
95: goto96
event := 0;
96: 0L
97: local2 := 
SleepMS(5);
98: 5L
99: Func(3,2): Sleepms
100: #
event := Wait_For_Event(1);
101: 1L
102: Func(3,6): Wait_For_Event
103: local2 := 
104: goto72
return 1;
105: 1L
106: progend
107: leave block(3)
108: progend
c:/ZH099/pkg/systems/classes/include/settings.inc, Line 20
function Classes_GetSettingsCfgElem( elem_name, byref cfg_file:=0 )
109: pop param byref 'cfg_file'
110: pop param 'elem_name'
if( !cfg_file )
111: local #0
112: if true goto 116
cfg_file := Classes_GetSettingsCfgFile();
113: makelocal
114: jmp userfunc @137
115: local0 := 
var elem := cfg_file[elem_name];
116: decl local #2
117: local #0
118: local #1
119: [] 1
120: :=
121: #
if( elem.errortext )
122: local #2
123: get member 'errortext'
124: if false goto 135
SysLog( "Error::Classes_GetSettingsCfgElem() - Unable to find elem ["+elem_name
125: "Error::Classes_GetSettingsCfgElem() - Unable to find elem ["
126: local #1
127: +
128: "] ->"
129: +
130: local #2
131: get member 'errortext'
132: +
133: Func(3,0): SysLog
134: #
return elem;
135: local #2
136: return
c:/ZH099/pkg/systems/classes/include/settings.inc, Line 12
function Classes_GetSettingsCfgFile()
var cfg := ReadConfigFile( ":classes:settings" );
137: decl local #0
138: ":classes:settings"
139: Func(4,0): ReadConfigFile
140: :=
141: #
if( cfg.errortext )
142: local #0
143: get member 'errortext'
144: if false goto 151
SysLog( "Error::Classes_GetSettingsCfgFile() - Unable to open [:classes:setting
145: "Error::Classes_GetSettingsCfgFile() - Unable to open [:classes:settings.cfg] ->"
146: local #0
147: get member 'errortext'
148: +
149: Func(3,0): SysLog
150: #
return cfg;
151: local #0
152: return
C:\ZH099\pkg\systems\brainAI\scripts\doubleClick\tamed.src, Line 51
function DblClickEvent( npc, byref event )
153: pop param byref 'event'
154: pop param 'npc'
var source := event.source;
155: decl local #2
156: local #0
157: get member 'source'
158: :=
159: #
if( source.hidden )
160: local #2
161: get member id 'hidden' (32)
162: if false goto 166
return 0;
163: 0L
164: return
165: goto203
elseif( source.frozen || source.paralyzed )
166: local #2
167: get member id 'frozen' (34)
168: local #2
169: get member id 'paralyzed' (35)
170: ||
171: if false goto 175
return 0;
172: 0L
173: return
174: goto203
elseif( source.IsA( POLCLASS_NPC ))
175: local #2
176: 4L
177: Call Method id isa (#0, 1 params)
178: if false goto 182
return 0;
179: 0L
180: return
181: goto203
elseif( Distance( source, npc ) > 1 )
182: local #2
183: local #1
184: Func(2,4): Distance
185: 1L
186: >
187: if false goto 191
return 0;
188: 0L
189: return
190: goto203
elseif( GetObjProperty( npc, "SummonedBy" ))
191: local #1
192: "SummonedBy"
193: Func(2,2): GetObjProperty
194: if false goto 203
SendSysMessage( source, "You canmot use magically binded creatures!" );
195: local #2
196: "You canmot use magically binded creatures!"
197: 3L
198: 1000L
199: Func(2,6): SendSysMessage
200: #
return 0;
201: 0L
202: return
if( IsTotem( npc ))
203: local #1
204: makelocal
205: jmp userfunc @280
206: if false goto 214
Totem_Shrink( source );
207: local #2
208: makelocal
209: jmp userfunc @488
210: #
return 1;
211: 1L
212: return
213: goto237
elseif( npc.graphic == 291 || npc.graphic == 292)
214: local #1
215: get member id 'graphic' (5)
216: 291L
217: ==
218: local #1
219: get member id 'graphic' (5)
220: 292L
221: ==
222: ||
223: if false goto 237
var backpack := NPC_SetupBackPack( npc );
224: decl local #0
225: local #1
226: makelocal
227: jmp userfunc @450
228: :=
229: #
SendViewContainer( source, backpack );
230: local #2
231: local #3
232: Func(2,31): SendViewContainer
233: #
return 1;
234: 1L
235: return
236: leave block(1)
var mount_elem := MP_GetMountsCfgElem( "MobileToMount" ),
237: decl local #3
238: "MobileToMount"
239: 0L
240: makelocal
241: jmp userfunc @293
242: :=
243: #
244: decl local #4
245: local #3
246: Func(4,8): ListConfigElemProps
247: :=
248: #
249: decl local #5
250: local #1
251: get member id 'graphic' (5)
252: Func(0,7): Hex
253: :=
254: #
if( mount_graphic in mount_settings )
255: local #5
256: local #4
257: in
258: if false goto 278
MoveObjectToLocation( source, npc.x, npc.y, npc.z, npc.realm );
259: local #2
260: local #1
261: get member id 'x' (0)
262: local #1
263: get member id 'y' (1)
264: local #1
265: get member id 'z' (2)
266: local #1
267: get member id 'realm' (112)
268: 0L
269: Func(2,23): MoveObjectToLocation
270: #
MP_Mount( source, npc );
271: local #2
272: local #1
273: makelocal
274: jmp userfunc @337
275: #
return 1;
276: 1L
277: return
return 0;
278: 0L
279: return
c:/ZH099/pkg/items/totem/include/totem.inc, Line 14
function IsTotem( npc )
280: pop param 'npc'
var totem := GetObjProperty( npc, "IsTotem" );
281: decl local #1
282: local #0
283: "IsTotem"
284: Func(2,2): GetObjProperty
285: :=
286: #
if( !totem )
287: local #1
288: if true goto 291
return 0;
289: 0L
290: return
return 1;
291: 1L
292: return
c:/ZH099/pkg/items/mounts/include/mounts.inc, Line 26
function MP_GetMountsCfgElem( elem_name, byref cfg_file:=0 )
293: pop param byref 'cfg_file'
294: pop param 'elem_name'
if( !cfg_file )
295: local #0
296: if true goto 300
cfg_file := MP_GetMountsCfgFile();
297: makelocal
298: jmp userfunc @321
299: local0 := 
var elem := cfg_file[elem_name];
300: decl local #2
301: local #0
302: local #1
303: [] 1
304: :=
305: #
if( elem.errortext )
306: local #2
307: get member 'errortext'
308: if false goto 319
SysLog( "Error::MP_GetMountsCfgElem() - Unable to find elem ["+elem_name+"] ->"
309: "Error::MP_GetMountsCfgElem() - Unable to find elem ["
310: local #1
311: +
312: "] ->"
313: +
314: local #2
315: get member 'errortext'
316: +
317: Func(3,0): SysLog
318: #
return elem;
319: local #2
320: return
c:/ZH099/pkg/items/mounts/include/mounts.inc, Line 18
function MP_GetMountsCfgFile()
var cfg := ReadConfigFile( ":mounts:mounts" );
321: decl local #0
322: ":mounts:mounts"
323: Func(4,0): ReadConfigFile
324: :=
325: #
if( cfg.errortext )
326: local #0
327: get member 'errortext'
328: if false goto 335
SysLog( "Error::MP_GetMountsCfgFile() - Unable to open [:mounts:mounts.cfg] ->"
329: "Error::MP_GetMountsCfgFile() - Unable to open [:mounts:mounts.cfg] ->"
330: local #0
331: get member 'errortext'
332: +
333: Func(3,0): SysLog
334: #
return cfg;
335: local #0
336: return
c:/ZH099/pkg/items/mounts/include/mounts.inc, Line 98
function MP_Mount( mobile, npc )
337: pop param 'npc'
338: pop param 'mobile'
mobile.graphic := 400 + mobile.gender;
339: local #1
340: 400L
341: local #1
342: get member id 'gender' (28)
343: +
344: set member id 'graphic' (5) #
var mount_piece := MP_GetMount( mobile );
345: decl local #2
346: local #1
347: makelocal
348: jmp userfunc @553
349: :=
350: #
if( mount_piece )
351: local #2
352: if false goto 357
return error{"errortext":="Mobile is already mounted."};
353: error
354: "Mobile is already mounted."
355: addmember-assign(errortext)
356: return
var mount_graphic := MP_GetMountGraphic( npc );
357: decl local #3
358: local #0
359: makelocal
360: jmp userfunc @570
361: :=
362: #
if( !mount_graphic )
363: local #3
364: if true goto 367
return mount_graphic;
365: local #3
366: return
mount_piece := CreateItemAtLocation( mobile.x, mobile.y, mobile.z, "MountPiece"
367: local #1
368: get member id 'x' (0)
369: local #1
370: get member id 'y' (1)
371: local #1
372: get member id 'z' (2)
373: "MountPiece"
374: 1L
375: "britannia"
376: Func(2,20): CreateItemAtLocation
377: local2 := 
mount_piece.graphic := mount_graphic;
378: local #2
379: local #3
380: set member id 'graphic' (5) #
mount_piece.color := npc.color;
381: local #2
382: local #0
383: get member id 'color' (7)
384: set member id 'color' (7) #
SetName( mount_piece, npc.name );
385: local #2
386: local #0
387: get member id 'name' (3)
388: Func(2,16): SetName
389: #
SetObjProperty( mount_piece, "serial", npc.serial );
390: local #2
391: "serial"
392: local #0
393: get member id 'serial' (6)
394: Func(2,1): SetObjProperty
395: #
SetObjProperty( mount_piece, "color", npc.color );
396: local #2
397: "color"
398: local #0
399: get member id 'color' (7)
400: Func(2,1): SetObjProperty
401: #
var result := EquipItem( mobile, mount_piece );
402: decl local #4
403: local #1
404: local #2
405: Func(2,21): EquipItem
406: :=
407: #
if( !result )
408: local #4
409: if true goto 416
DestroyItem( mount_piece );
410: local #2
411: Func(2,22): DestroyItem
412: #
return result;
413: local #4
414: return
415: goto419
mount_piece.movable := 0;
416: local #2
417: 0L
418: set member id 'movable' (20) #
mobile.facing := npc.facing;
419: local #1
420: local #0
421: get member id 'facing' (9)
422: set member id 'facing' (9) #
MoveObjectToLocation( npc, 5140, 1773, 0, "britannia", MOVEOBJECT_FORCELOCATION
423: local #0
424: 5140L
425: 1773L
426: 0L
427: "britannia"
428: 1073741824L
429: Func(2,23): MoveObjectToLocation
430: #
SetObjProperty( npc, "mounted", 1 );
431: local #0
432: "mounted"
433: 1L
434: Func(2,1): SetObjProperty
435: #
SetObjProperty( npc, "MustSleep", mobile.serial );
436: local #0
437: "MustSleep"
438: local #1
439: get member id 'serial' (6)
440: Func(2,1): SetObjProperty
441: #
npc.hidden := 1;
442: local #0
443: 1L
444: set member id 'hidden' (32) #
npc.frozen := 1;
445: local #0
446: 1L
447: set member id 'frozen' (34) #
return mount_piece;
448: local #2
449: return
c:/ZH099/pkg/systems/brainAI/include/npcInit.inc, Line 39
function NPC_SetupBackPack( mobile )
450: pop param 'mobile'
if( !mobile.backpack )
451: local #0
452: get member id 'backpack' (41)
453: if true goto 485
var backpack := CreateItemAtLocation( mobile.x, mobile.y, mobile.z, "BackPack",
454: decl local #0
455: local #0
456: get member id 'x' (0)
457: local #0
458: get member id 'y' (1)
459: local #0
460: get member id 'z' (2)
461: "BackPack"
462: 1L
463: local #0
464: get member id 'realm' (112)
465: Func(2,20): CreateItemAtLocation
466: :=
467: #
var result := EquipItem( mobile, backpack );
468: decl local #1
469: local #0
470: local #1
471: Func(2,21): EquipItem
472: :=
473: #
if( !result )
474: local #2
475: if true goto 482
DestroyItem( backpack );
476: local #1
477: Func(2,22): DestroyItem
478: #
return result;
479: local #2
480: return
481: goto484
return backpack;
482: local #1
483: return
484: leave block(2)
return mobile.backpack;
485: local #0
486: get member id 'backpack' (41)
487: return
c:/ZH099/pkg/items/totem/include/totem.inc, Line 171
function Totem_Shrink( master )
488: pop param 'master'
var totem := Totem_Find( master );
489: decl local #1
490: local #0
491: makelocal
492: jmp userfunc @614
493: :=
494: #
if( !totem )
495: local #1
496: if true goto 499
return 0;
497: 0L
498: return
var totem_item := Totem_GetTotemItem( totem );
499: decl local #2
500: local #1
501: makelocal
502: jmp userfunc @638
503: :=
504: #
var move_item := MoveItemToContainer( totem_item, master.backpack );
505: decl local #3
506: local #2
507: local #0
508: get member id 'backpack' (41)
509: -1L
510: -1L
511: Func(2,30): MoveItemToContainer
512: :=
513: #
if( move_item.errortext )
514: local #3
515: get member 'errortext'
516: if false goto 528
SendSysMessage( master, "Error moving totem item -->"+move_item.errortext );
517: local #0
518: "Error moving totem item -->"
519: local #3
520: get member 'errortext'
521: +
522: 3L
523: 1000L
524: Func(2,6): SendSysMessage
525: #
return 0;
526: 0L
527: return
MoveObjectToLocation( totem, 5140, 1773, 0, "britannia", MOVEOBJECT_FORCELOCATI
528: local #1
529: 5140L
530: 1773L
531: 0L
532: "britannia"
533: 1073741824L
534: Func(2,23): MoveObjectToLocation
535: #
SetObjProperty( totem, "MustSleep", master.serial );
536: local #1
537: "MustSleep"
538: local #0
539: get member id 'serial' (6)
540: Func(2,1): SetObjProperty
541: #
totem_item.invisible := 0;
542: local #2
543: 0L
544: set member id 'invisible' (21) #
totem.hidden := 1;
545: local #1
546: 1L
547: set member id 'hidden' (32) #
totem.frozen := 1;
548: local #1
549: 1L
550: set member id 'frozen' (34) #
return 1;
551: 1L
552: return
c:/ZH099/pkg/items/mounts/include/mounts.inc, Line 224
function MP_GetMount( mobile )
553: pop param 'mobile'
var mount_piece := GetEquipmentByLayer( mobile, LAYER_MOUNT );
554: decl local #1
555: local #0
556: 25L
557: Func(2,12): GetEquipmentByLayer
558: :=
559: #
if( mount_piece.errortext )
560: local #1
561: get member 'errortext'
562: if false goto 568
return error{"errortext":=mount_piece.errortext};
563: error
564: local #1
565: get member 'errortext'
566: addmember-assign(errortext)
567: return
return 1;
568: 1L
569: return
c:/ZH099/pkg/items/mounts/include/mounts.inc, Line 40
function MP_GetMountGraphic( mobile )
570: pop param 'mobile'
var mobile_graphic;
571: decl local #1
572: #
if( mobile.IsA( POLCLASS_NPC ))
573: local #0
574: 4L
575: Call Method id isa (#0, 1 params)
576: if false goto 582
mobile_graphic := Hex( mobile.graphic );
577: local #0
578: get member id 'graphic' (5)
579: Func(0,7): Hex
580: local1 := 
581: goto586
mobile_graphic := Hex( CInt( mobile ));
582: local #0
583: Func(0,2): CInt
584: Func(0,7): Hex
585: local1 := 
var elem := MP_GetMountsCfgElem( "MobileToMount" );
586: decl local #2
587: "MobileToMount"
588: 0L
589: makelocal
590: jmp userfunc @293
591: :=
592: #
var tile_graphic := GetConfigInt( elem, mobile_graphic );
593: decl local #3
594: local #2
595: local #1
596: Func(4,7): GetConfigInt
597: :=
598: #
if( tile_graphic )
599: local #3
600: if false goto 604
return tile_graphic;
601: local #3
602: return
603: goto612
return error{"errortext":="Error::MP_GetMountGraphic() - No mount tile graphic 
604: error
605: "Error::MP_GetMountGraphic() - No mount tile graphic matches mobile graphic '"
606: local #1
607: +
608: "'"
609: +
610: addmember-assign(errortext)
611: return
612: 0L
613: return
c:/ZH099/pkg/items/totem/include/totem.inc, Line 24
function Totem_Find( master )
614: pop param 'master'
var totem_serial := CInt( GetObjProperty( master, "HasTotem" ));
615: decl local #1
616: local #0
617: "HasTotem"
618: Func(2,2): GetObjProperty
619: Func(0,2): CInt
620: :=
621: #
if( !totem_serial )
622: local #1
623: if true goto 626
return 0;
624: 0L
625: return
var totem := SystemFindObjectBySerial( totem_serial );
626: decl local #2
627: local #1
628: 0L
629: Func(2,24): SystemFindObjectBySerial
630: :=
631: #
if( !totem )
632: local #2
633: if true goto 636
return 0;
634: 0L
635: return
return totem;
636: local #2
637: return
c:/ZH099/pkg/items/totem/include/totem.inc, Line 132
function Totem_GetTotemItem( npc )
638: pop param 'npc'
var item_serial := GetObjProperty( npc, "TotemItemSerial" );
639: decl local #1
640: local #0
641: "TotemItemSerial"
642: Func(2,2): GetObjProperty
643: :=
644: #
if( !item_serial )
645: local #1
646: if true goto 649
return 0;
647: 0L
648: return
var totem_item := SystemFindObjectBySerial( item_serial );
649: decl local #2
650: local #1
651: 0L
652: Func(2,24): SystemFindObjectBySerial
653: :=
654: #
if( !totem_item )
655: local #2
656: if true goto 659
return 0;
657: 0L
658: return
return totem_item;
659: local #2
660: return
