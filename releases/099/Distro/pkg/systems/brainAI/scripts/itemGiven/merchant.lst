c:/ZH099/pkg/systems/classes/include/classes.inc, Line 26
var settings := Classes_GetSettingsCfgElem( "Settings" );
0: decl global #0
1: "Settings"
2: 0L
3: makelocal
4: jmp userfunc @54
5: :=
6: #
c:/ZH099/pkg/utils/datafile/include/datafile.inc, Line 35
var DF_DEBUG_MODE	:= 0;
7: decl global #1
8: 0L
9: :=
10: #
C:\ZH099\pkg\systems\brainAI\scripts\itemGiven\merchant.src, Line 17
program BrainNerve( params )
include ":attributes:attributes";
11: get arg 'params'
var npc		:= params[1];
12: decl local #1
13: local #0
14: 1L
15: [] 1
16: :=
17: #
var event	:= params[3];
18: decl local #2
19: local #0
20: 3L
21: [] 1
22: :=
23: #
params := 0; // Not needed anymore.
24: 0L
25: local0 := 
while( npc )
26: local #1
27: if false goto 50
if( event )
28: local #2
29: if false goto 43
case( event.type )
30: local #2
31: get member 'type'
32: casejmp
	1024: @33
	default: @40
ItemGivenEvent( npc, event );
33: local #1
34: local #2
35: makelocal
36: jmp userfunc @98
37: #
break;
38: goto39
39: goto41
break;
40: goto41
event := 0;
41: 0L
42: local2 := 
SleepMS(5);
43: 5L
44: Func(3,2): Sleepms
45: #
event := Wait_For_Event(1);
46: 1L
47: Func(3,7): Wait_For_Event
48: local2 := 
49: goto26
return 1;
50: 1L
51: progend
52: leave block(3)
53: progend
c:/ZH099/pkg/systems/classes/include/settings.inc, Line 20
function Classes_GetSettingsCfgElem( elem_name, byref cfg_file:=0 )
54: pop param byref 'cfg_file'
55: pop param 'elem_name'
if( !cfg_file )
56: local #0
57: if true goto 61
cfg_file := Classes_GetSettingsCfgFile();
58: makelocal
59: jmp userfunc @82
60: local0 := 
var elem := cfg_file[elem_name];
61: decl local #2
62: local #0
63: local #1
64: [] 1
65: :=
66: #
if( elem.errortext )
67: local #2
68: get member 'errortext'
69: if false goto 80
SysLog( "Error::Classes_GetSettingsCfgElem() - Unable to find elem ["+elem_name
70: "Error::Classes_GetSettingsCfgElem() - Unable to find elem ["
71: local #1
72: +
73: "] ->"
74: +
75: local #2
76: get member 'errortext'
77: +
78: Func(3,0): SysLog
79: #
return elem;
80: local #2
81: return
c:/ZH099/pkg/systems/classes/include/settings.inc, Line 12
function Classes_GetSettingsCfgFile()
var cfg := ReadConfigFile( ":classes:settings" );
82: decl local #0
83: ":classes:settings"
84: Func(4,0): ReadConfigFile
85: :=
86: #
if( cfg.errortext )
87: local #0
88: get member 'errortext'
89: if false goto 96
SysLog( "Error::Classes_GetSettingsCfgFile() - Unable to open [:classes:setting
90: "Error::Classes_GetSettingsCfgFile() - Unable to open [:classes:settings.cfg] ->"
91: local #0
92: get member 'errortext'
93: +
94: Func(3,0): SysLog
95: #
return cfg;
96: local #0
97: return
C:\ZH099\pkg\systems\brainAI\scripts\itemGiven\merchant.src, Line 46
function ItemGivenEvent( npc, byref event )
98: pop param byref 'event'
99: pop param 'npc'
var item := event.item;
100: decl local #2
101: local #0
102: get member 'item'
103: :=
104: #
var source := event.source;
105: decl local #3
106: local #0
107: get member 'source'
108: :=
109: #
ReleaseItem( item );
110: local #2
111: Func(2,11): ReleaseItem
112: #
if( source.hidden || source.IsA( POLCLASS_NPC ))
113: local #3
114: get member id 'hidden' (32)
115: local #3
116: 4L
117: Call Method id isa (#0, 1 params)
118: ||
119: if false goto 122
return 1;
120: 1L
121: return
if( item.objtype == 0xeed )
122: local #2
123: get member id 'objtype' (4)
124: 3821L
125: ==
126: if false goto 134
TrainSkill( npc, source, item );
127: local #1
128: local #3
129: local #2
130: makelocal
131: jmp userfunc @151
132: #
133: goto149
AI_Speak( npc, "I don't know what this is for, but thanks!" );
134: local #1
135: "I don't know what this is for, but thanks!"
136: "default"
137: 0L
138: 0L
139: makelocal
140: jmp userfunc @301
141: #
MoveItemToContainer( item, source.backpack );
142: local #2
143: local #3
144: get member id 'backpack' (41)
145: -1L
146: -1L
147: Func(2,8): MoveItemToContainer
148: #
return 0;
149: 0L
150: return
c:/ZH099/pkg/systems/brainAI/include/merchantUtil.inc, Line 63
function TrainSkill( npc, byref source, byref item )
151: pop param byref 'item'
152: pop param byref 'source'
153: pop param 'npc'
var train_skill := GetObjProperty( source, "#VendorTrain" );
154: decl local #3
155: local #1
156: "#VendorTrain"
157: Func(2,2): GetObjProperty
158: :=
159: #
if( !train_skill )
160: local #3
161: if true goto 179
AI_Speak( npc, "I don't know what this is for, but thanks!" );
162: local #2
163: "I don't know what this is for, but thanks!"
164: "default"
165: 0L
166: 0L
167: makelocal
168: jmp userfunc @301
169: #
MoveItemToContainer( item, source.backpack );
170: local #0
171: local #1
172: get member id 'backpack' (41)
173: -1L
174: -1L
175: Func(2,8): MoveItemToContainer
176: #
return 0;
177: 0L
178: return
var npc_skill := AP_GetSkill( npc, train_skill ),
179: decl local #4
180: local #2
181: local #3
182: makelocal
183: jmp userfunc @345
184: :=
185: #
186: decl local #5
187: local #1
188: local #3
189: makelocal
190: jmp userfunc @366
191: :=
192: #
if( npc_skill >= 33 && source_skill < 33 )
193: local #4
194: 33L
195: >=
196: local #5
197: 33L
198: <
199: &&
200: if false goto 278
var train_value := CInt( item.amount / 10 );
201: decl local #0
202: local #0
203: get member id 'amount' (13)
204: 10L
205: /
206: Func(0,2): CInt
207: :=
208: #
if( !train_value )
209: local #6
210: if true goto 222
AI_Speak( npc, "You do not have enough money!" );
211: local #2
212: "You do not have enough money!"
213: "default"
214: 0L
215: 0L
216: makelocal
217: jmp userfunc @301
218: #
return 0;
219: 0L
220: return
221: goto228
elseif( train_value >= 33 )
222: local #6
223: 33L
224: >=
225: if false goto 228
train_value := 33;
226: 33L
227: local6 := 
SubtractAmount( item, CInt( train_value * 10 ));
228: local #0
229: local #6
230: 10L
231: *
232: Func(0,2): CInt
233: Func(2,9): SubtractAmount
234: #
AI_Speak( npc, "Let me show you how it's done!" );
235: local #2
236: "Let me show you how it's done!"
237: "default"
238: 0L
239: 0L
240: makelocal
241: jmp userfunc @301
242: #
Sleep(1);
243: 1L
244: Func(3,6): Sleep
245: #
var new_skill := CInt( source_skill + train_value );
246: decl local #1
247: local #5
248: local #6
249: +
250: Func(0,2): CInt
251: :=
252: #
if( new_skill > 33 )
253: local #7
254: 33L
255: >
256: if false goto 259
new_skill := 33;
257: 33L
258: local7 := 
AP_SetTrueSkill( source, train_skill, new_skill );
259: local #1
260: local #3
261: local #7
262: makelocal
263: jmp userfunc @375
264: #
EraseObjProperty( source, "#VendorTrain" );
265: local #1
266: "#VendorTrain"
267: Func(2,10): EraseObjProperty
268: #
MoveItemToContainer( item, source.backpack );
269: local #0
270: local #1
271: get member id 'backpack' (41)
272: -1L
273: -1L
274: Func(2,8): MoveItemToContainer
275: #
276: leave block(2)
277: goto299
AI_Speak( npc, "I cannot teach you "+train_skill+"." );
278: local #2
279: "I cannot teach you "
280: local #3
281: +
282: "."
283: +
284: "default"
285: 0L
286: 0L
287: makelocal
288: jmp userfunc @301
289: #
MoveItemToContainer( source.backpack, item );
290: local #1
291: get member id 'backpack' (41)
292: local #0
293: -1L
294: -1L
295: Func(2,8): MoveItemToContainer
296: #
return 0;
297: 0L
298: return
return 1;
299: 1L
300: return
c:/ZH099/pkg/systems/brainAI/include/npcCommands.inc, Line 139
function AI_Speak( npc, text, text_type:=SPEAK_TEXTTYPE_DEFAULT, do_event:=SPEA
301: pop param 'no_wake'
302: pop param 'do_event'
303: pop param 'text_type'
304: pop param 'text'
305: pop param 'npc'
var ev		:= struct;
306: decl local #5
307: struct
308: :=
309: #
ev.+type	:= NPCEVENT_SPEAK;
310: local #5
311: "type"
312: .+
313: 10485765L
314: := #
ev.+text	:= text;
315: local #5
316: "text"
317: .+
318: local #3
319: := #
ev.+texttype	:= text_type;
320: local #5
321: "texttype"
322: .+
323: local #2
324: := #
ev.+doevent	:= do_event;
325: local #5
326: "doevent"
327: .+
328: local #1
329: := #
ev.+WakeUp	:= no_wake;
330: local #5
331: "WakeUp"
332: .+
333: local #0
334: := #
ev.+process	:= GetProcess( GetPid() );
335: local #5
336: "process"
337: .+
338: Func(3,4): GetPid
339: Func(3,1): GetProcess
340: := #
return SendEvent( npc, ev );
341: local #4
342: local #5
343: Func(2,3): SendEvent
344: return
c:/ZH099/pkg/systems/attributes/include/skills.inc, Line 8
function AP_GetSkill( who, skill_name )
345: pop param 'skill_name'
346: pop param 'who'
return AP_GetTrueSkill( who, skill_name )+AP_GetSkillMod( who, skill_name );
347: local #1
348: local #0
349: makelocal
350: jmp userfunc @366
351: local #1
352: local #0
353: makelocal
354: jmp userfunc @357
355: +
356: return
c:/ZH099/pkg/systems/attributes/include/skills.inc, Line 18
function AP_GetSkillMod( who, skill_name )
357: pop param 'skill_name'
358: pop param 'who'
return CDbl( GetAttributeTemporaryMod( who, skill_name )) / 10.0;
359: local #1
360: local #0
361: Func(6,1): GetAttributeTemporaryMod
362: Func(0,3): CDbl
363: 10LF
364: /
365: return
c:/ZH099/pkg/systems/attributes/include/skills.inc, Line 13
function AP_GetTrueSkill( who, skill_name )
366: pop param 'skill_name'
367: pop param 'who'
return CDbl( GetAttributeBaseValue( who, skill_name )) / 10.0;
368: local #1
369: local #0
370: Func(6,0): GetAttributeBaseValue
371: Func(0,3): CDbl
372: 10LF
373: /
374: return
c:/ZH099/pkg/systems/attributes/include/skills.inc, Line 23
function AP_SetTrueSkill( mobile, skill_name, points )
375: pop param 'points'
376: pop param 'skill_name'
377: pop param 'mobile'
var result;
378: decl local #3
379: #
if( points >= 0 )
380: local #0
381: 0L
382: >=
383: if false goto 396
result := SetAttributeBaseValue( mobile, skill_name, CInt( CDbl( points ) * 10.
384: local #2
385: local #1
386: local #0
387: Func(0,3): CDbl
388: 10LF
389: *
390: 0.1LF
391: +
392: Func(0,2): CInt
393: Func(6,2): SetAttributeBaseValue
394: local3 := 
395: goto407
result := SetAttributeBaseValue( mobile, skill_name, CInt( CDbl( points ) * 10.
396: local #2
397: local #1
398: local #0
399: Func(0,3): CDbl
400: 10LF
401: *
402: 0.1LF
403: -
404: Func(0,2): CInt
405: Func(6,2): SetAttributeBaseValue
406: local3 := 
RecalcVitals( mobile );
407: local #2
408: 1L
409: 1L
410: Func(5,0): RecalcVitals
411: #
return result;
412: local #3
413: return
