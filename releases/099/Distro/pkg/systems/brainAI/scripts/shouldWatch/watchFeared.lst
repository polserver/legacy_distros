C:\ZH099\pkg\systems\brainAI\scripts\shouldWatch\watchFeared.src, Line 14
program BrainNerve( params )
use cfgfile;
0: get arg 'params'
var npc := params[1];
1: decl local #1
2: local #0
3: 1L
4: [] 1
5: :=
6: #
var mobile := params[2];
7: decl local #2
8: local #0
9: 2L
10: [] 1
11: :=
12: #
params := 0; // Not needed anymore
13: 0L
14: local0 := 
if( mobile.cmdlevel )
15: local #2
16: get member id 'cmdlevel' (46)
17: if false goto 21
return 0;
18: 0L
19: progend
20: goto82
elseif( GetObjProperty( npc, "#Peacemaking" ) >= ReadGameClock() )
21: local #1
22: "#Peacemaking"
23: Func(2,2): GetObjProperty
24: Func(2,6): ReadGameClock
25: >=
26: if false goto 30
return 0;
27: 0L
28: progend
29: goto82
elseif( GetObjProperty( mobile, "#JustRess" ) >= ReadGameClock() )
30: local #2
31: "#JustRess"
32: Func(2,2): GetObjProperty
33: Func(2,6): ReadGameClock
34: >=
35: if false goto 39
return 0;
36: 0L
37: progend
38: goto82
elseif( mobile.npctemplate )
39: local #2
40: get member id 'npctemplate' (62)
41: if false goto 82
var hate_config := ReadConfigFile( ":brainAI:hatelist" );
42: decl local #0
43: ":brainAI:hatelist"
44: Func(5,0): ReadConfigFile
45: :=
46: #
var config_list := FindConfigElem( hate_config, NPC_ParseTemplateName( npc.npct
47: decl local #1
48: local #3
49: local #1
50: get member id 'npctemplate' (62)
51: makelocal
52: jmp userfunc @86
53: get member 'template'
54: Func(5,2): FindConfigElem
55: :=
56: #
if( config_list == error )
57: local #4
58: error
59: ==
60: if false goto 63
return 0;
61: 0L
62: progend
var my_fear_list := GetConfigStringArray( config_list, "Fears" );
63: decl local #2
64: local #4
65: "Fears"
66: Func(5,3): GetConfigStringArray
67: :=
68: #
if( !( NPC_ParseTemplateName( mobile.npctemplate ).template in my_fear_list ))
69: local #2
70: get member id 'npctemplate' (62)
71: makelocal
72: jmp userfunc @86
73: get member 'template'
74: local #5
75: in
76: if true goto 79
return 0;
77: 0L
78: progend
return 1;
79: 1L
80: progend
81: leave block(3)
return 0;
82: 0L
83: progend
84: leave block(3)
85: progend
c:/ZH099/pkg/systems/brainAI/include/npcUtil.inc, Line 11
function NPC_ParseTemplateName( template_name )
86: pop param 'template_name'
if( template_name.IsA( POLCLASS_NPC ))
87: local #0
88: 4L
89: Call Method id isa (#0, 1 params)
90: if false goto 94
template_name := template_name.npctemplate;
91: local #0
92: get member id 'npctemplate' (62)
93: local0 := 
var colon_a := Find( template_name, ":", 1 );
94: decl local #1
95: local #0
96: ":"
97: 1L
98: Func(0,3): Find
99: :=
100: #
var colon_b := Find( template_name, ":", 2 );
101: decl local #2
102: local #0
103: ":"
104: 2L
105: Func(0,3): Find
106: :=
107: #
var parsed := struct{"package", "template"};
108: decl local #3
109: struct
110: addmember(package)
111: addmember(template)
112: :=
113: #
if( !colon_a || !colon_b )
114: local #1
115: !
116: local #2
117: !
118: ||
119: if false goto 127
parsed.package := "";
120: local #3
121: ""
122: set member 'package' #
parsed.template := template_name;
123: local #3
124: local #0
125: set member 'template' #
126: goto146
parsed.package := template_name[colon_a+1, colon_b-2];
127: local #3
128: local #0
129: local #1
130: 1L
131: +
132: local #2
133: 2L
134: -
135: [,]
136: set member 'package' #
parsed.template := template_name[colon_b+1, Len( template_name )];
137: local #3
138: local #0
139: local #2
140: 1L
141: +
142: local #0
143: Func(0,4): Len
144: [,]
145: set member 'template' #
return parsed;
146: local #3
147: return
